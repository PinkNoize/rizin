Loaded 14705 tests.

[A[2K[31m[XX][0m db/cmd/cmd_agf [33magfJ[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
s 0x42
wx 00004883f80074060000000000000000c3
af
agfJ
' -
-- stdout
[36m@@ -1 +1 @@[0m
[91m-[{"name":"fcn.00000042","offset":66,"ninstr":8,"nargs":0,"nlocals":0,"size":17,"stack":0,"type":"fcn","blocks":[{"offset":66,"size":8,"jump":80,"fail":74,"colorize":0,"ops":[{"offset":66,"text":"fcn.00000042 ();"},{"offset":66,"text":"     0000           add   byte [rax], al"},{"offset":68,"text":"     4883f800       cmp   rax, 0"},{"offset":72,"arrow":80,"text":"     7406           je    0x50"}]},{"offset":74,"size":6,"jump":80,"colorize":0,"ops":[{"offset":74,"text":"     0000           add   byte [rax], al"},{"offset":76,"text":"     0000           add   byte [rax], al"},{"offset":78,"text":"     0000           add   byte [rax], al"}]},{"offset":80,"size":3,"colorize":0,"ops":[{"offset":80,"text":"     0000           add   byte [rax], al"},{"offset":82,"text":"     c3             ret"}]}]}]
[0m[92m+[{"name":"fcn.00000042","offset":66,"ninstr":8,"nargs":0,"nlocals":0,"size":17,"stack":0,"type":"fcn","blocks":[{"offset":66,"size":8,"jump":80,"fail":74,"colorize":0,"ops":[{"offset":66,"text":"17: fcn.00000042 ();"},{"offset":66,"text":"     0000           add   byte [rax], al"},{"offset":68,"text":"     4883f800       cmp   rax, 0"},{"offset":72,"arrow":80,"text":"     7406           je    0x50"}]},{"offset":74,"size":6,"jump":80,"colorize":0,"ops":[{"offset":74,"text":"     0000           add   byte [rax], al"},{"offset":76,"text":"     0000           add   byte [rax], al"},{"offset":78,"text":"     0000           add   byte [rax], al"}]},{"offset":80,"size":3,"colorize":0,"ops":[{"offset":80,"text":"     0000           add   byte [rax], al"},{"offset":82,"text":"     c3             ret"}]}]}]
[0m

[**]                                     db/cmd/cmd_pdj        6 OK         0 BR        1 XX        0 FX
[**]                                       db/cmd/archs       10 OK         0 BR        1 XX        0 FX

[A[2K[31m[XX][0m db/cmd/manyundo [33mt/manyundo[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'sh*
# Force a wraparound in the undo/redo buffer.
100sd +1
sh* ; ?v $$ ; ?e
shj~{62}
shj~{63}

# Make sure get back to the last available undo.
100shu
sh* ; ?v $$ ; ?e

# And redo must work of course.
100shr
sh* ; ?v $$ ; ?e

# Seeking inside the undo list must destroy the redo list.
50shu
sh* ; ?v $$ ; ?e
shj~{12}
shj~{13}
shj~{14}
s 0x100
sh* ; ?v $$ ; ?e
' malloc://1024
-- stdout
[36m@@ -1,287 +0,0 @@[0m
[91m-# Current seek @ 0x0
[0m[91m-f undo_62 @ 0x25
[0m[91m-f undo_61 @ 0x26
[0m[91m-f undo_60 @ 0x27
[0m[91m-f undo_59 @ 0x28
[0m[91m-f undo_58 @ 0x29
[0m[91m-f undo_57 @ 0x2a
[0m[91m-f undo_56 @ 0x2b
[0m[91m-f undo_55 @ 0x2c
[0m[91m-f undo_54 @ 0x2d
[0m[91m-f undo_53 @ 0x2e
[0m[91m-f undo_52 @ 0x2f
[0m[91m-f undo_51 @ 0x30
[0m[91m-f undo_50 @ 0x31
[0m[91m-f undo_49 @ 0x32
[0m[91m-f undo_48 @ 0x33
[0m[91m-f undo_47 @ 0x34
[0m[91m-f undo_46 @ 0x35
[0m[91m-f undo_45 @ 0x36
[0m[91m-f undo_44 @ 0x37
[0m[91m-f undo_43 @ 0x38
[0m[91m-f undo_42 @ 0x39
[0m[91m-f undo_41 @ 0x3a
[0m[91m-f undo_40 @ 0x3b
[0m[91m-f undo_39 @ 0x3c
[0m[91m-f undo_38 @ 0x3d
[0m[91m-f undo_37 @ 0x3e
[0m[91m-f undo_36 @ 0x3f
[0m[91m-f undo_35 @ 0x40
[0m[91m-f undo_34 @ 0x41
[0m[91m-f undo_33 @ 0x42
[0m[91m-f undo_32 @ 0x43
[0m[91m-f undo_31 @ 0x44
[0m[91m-f undo_30 @ 0x45
[0m[91m-f undo_29 @ 0x46
[0m[91m-f undo_28 @ 0x47
[0m[91m-f undo_27 @ 0x48
[0m[91m-f undo_26 @ 0x49
[0m[91m-f undo_25 @ 0x4a
[0m[91m-f undo_24 @ 0x4b
[0m[91m-f undo_23 @ 0x4c
[0m[91m-f undo_22 @ 0x4d
[0m[91m-f undo_21 @ 0x4e
[0m[91m-f undo_20 @ 0x4f
[0m[91m-f undo_19 @ 0x50
[0m[91m-f undo_18 @ 0x51
[0m[91m-f undo_17 @ 0x52
[0m[91m-f undo_16 @ 0x53
[0m[91m-f undo_15 @ 0x54
[0m[91m-f undo_14 @ 0x55
[0m[91m-f undo_13 @ 0x56
[0m[91m-f undo_12 @ 0x57
[0m[91m-f undo_11 @ 0x58
[0m[91m-f undo_10 @ 0x59
[0m[91m-f undo_9 @ 0x5a
[0m[91m-f undo_8 @ 0x5b
[0m[91m-f undo_7 @ 0x5c
[0m[91m-f undo_6 @ 0x5d
[0m[91m-f undo_5 @ 0x5e
[0m[91m-f undo_4 @ 0x5f
[0m[91m-f undo_3 @ 0x60
[0m[91m-f undo_2 @ 0x61
[0m[91m-f undo_1 @ 0x62
[0m[91m-f undo_0 @ 0x63
[0m[91m-# Current seek @ 0x64
[0m[91m-0x64
[0m[91m-
[0m[91m-{"offset":99,"cursor":0,"current":false}
[0m[91m-{"offset":100,"cursor":0,"current":true}
[0m[91m-# Current seek @ 0x25
[0m[91m-f redo_0 @ 0x26
[0m[91m-f redo_1 @ 0x27
[0m[91m-f redo_2 @ 0x28
[0m[91m-f redo_3 @ 0x29
[0m[91m-f redo_4 @ 0x2a
[0m[91m-f redo_5 @ 0x2b
[0m[91m-f redo_6 @ 0x2c
[0m[91m-f redo_7 @ 0x2d
[0m[91m-f redo_8 @ 0x2e
[0m[91m-f redo_9 @ 0x2f
[0m[91m-f redo_10 @ 0x30
[0m[91m-f redo_11 @ 0x31
[0m[91m-f redo_12 @ 0x32
[0m[91m-f redo_13 @ 0x33
[0m[91m-f redo_14 @ 0x34
[0m[91m-f redo_15 @ 0x35
[0m[91m-f redo_16 @ 0x36
[0m[91m-f redo_17 @ 0x37
[0m[91m-f redo_18 @ 0x38
[0m[91m-f redo_19 @ 0x39
[0m[91m-f redo_20 @ 0x3a
[0m[91m-f redo_21 @ 0x3b
[0m[91m-f redo_22 @ 0x3c
[0m[91m-f redo_23 @ 0x3d
[0m[91m-f redo_24 @ 0x3e
[0m[91m-f redo_25 @ 0x3f
[0m[91m-f redo_26 @ 0x40
[0m[91m-f redo_27 @ 0x41
[0m[91m-f redo_28 @ 0x42
[0m[91m-f redo_29 @ 0x43
[0m[91m-f redo_30 @ 0x44
[0m[91m-f redo_31 @ 0x45
[0m[91m-f redo_32 @ 0x46
[0m[91m-f redo_33 @ 0x47
[0m[91m-f redo_34 @ 0x48
[0m[91m-f redo_35 @ 0x49
[0m[91m-f redo_36 @ 0x4a
[0m[91m-f redo_37 @ 0x4b
[0m[91m-f redo_38 @ 0x4c
[0m[91m-f redo_39 @ 0x4d
[0m[91m-f redo_40 @ 0x4e
[0m[91m-f redo_41 @ 0x4f
[0m[91m-f redo_42 @ 0x50
[0m[91m-f redo_43 @ 0x51
[0m[91m-f redo_44 @ 0x52
[0m[91m-f redo_45 @ 0x53
[0m[91m-f redo_46 @ 0x54
[0m[91m-f redo_47 @ 0x55
[0m[91m-f redo_48 @ 0x56
[0m[91m-f redo_49 @ 0x57
[0m[91m-f redo_50 @ 0x58
[0m[91m-f redo_51 @ 0x59
[0m[91m-f redo_52 @ 0x5a
[0m[91m-f redo_53 @ 0x5b
[0m[91m-f redo_54 @ 0x5c
[0m[91m-f redo_55 @ 0x5d
[0m[91m-f redo_56 @ 0x5e
[0m[91m-f redo_57 @ 0x5f
[0m[91m-f redo_58 @ 0x60
[0m[91m-f redo_59 @ 0x61
[0m[91m-f redo_60 @ 0x62
[0m[91m-f redo_61 @ 0x63
[0m[91m-f redo_62 @ 0x64
[0m[91m-0x25
[0m[91m-
[0m[91m-f undo_62 @ 0x25
[0m[91m-f undo_61 @ 0x26
[0m[91m-f undo_60 @ 0x27
[0m[91m-f undo_59 @ 0x28
[0m[91m-f undo_58 @ 0x29
[0m[91m-f undo_57 @ 0x2a
[0m[91m-f undo_56 @ 0x2b
[0m[91m-f undo_55 @ 0x2c
[0m[91m-f undo_54 @ 0x2d
[0m[91m-f undo_53 @ 0x2e
[0m[91m-f undo_52 @ 0x2f
[0m[91m-f undo_51 @ 0x30
[0m[91m-f undo_50 @ 0x31
[0m[91m-f undo_49 @ 0x32
[0m[91m-f undo_48 @ 0x33
[0m[91m-f undo_47 @ 0x34
[0m[91m-f undo_46 @ 0x35
[0m[91m-f undo_45 @ 0x36
[0m[91m-f undo_44 @ 0x37
[0m[91m-f undo_43 @ 0x38
[0m[91m-f undo_42 @ 0x39
[0m[91m-f undo_41 @ 0x3a
[0m[91m-f undo_40 @ 0x3b
[0m[91m-f undo_39 @ 0x3c
[0m[91m-f undo_38 @ 0x3d
[0m[91m-f undo_37 @ 0x3e
[0m[91m-f undo_36 @ 0x3f
[0m[91m-f undo_35 @ 0x40
[0m[91m-f undo_34 @ 0x41
[0m[91m-f undo_33 @ 0x42
[0m[91m-f undo_32 @ 0x43
[0m[91m-f undo_31 @ 0x44
[0m[91m-f undo_30 @ 0x45
[0m[91m-f undo_29 @ 0x46
[0m[91m-f undo_28 @ 0x47
[0m[91m-f undo_27 @ 0x48
[0m[91m-f undo_26 @ 0x49
[0m[91m-f undo_25 @ 0x4a
[0m[91m-f undo_24 @ 0x4b
[0m[91m-f undo_23 @ 0x4c
[0m[91m-f undo_22 @ 0x4d
[0m[91m-f undo_21 @ 0x4e
[0m[91m-f undo_20 @ 0x4f
[0m[91m-f undo_19 @ 0x50
[0m[91m-f undo_18 @ 0x51
[0m[91m-f undo_17 @ 0x52
[0m[91m-f undo_16 @ 0x53
[0m[91m-f undo_15 @ 0x54
[0m[91m-f undo_14 @ 0x55
[0m[91m-f undo_13 @ 0x56
[0m[91m-f undo_12 @ 0x57
[0m[91m-f undo_11 @ 0x58
[0m[91m-f undo_10 @ 0x59
[0m[91m-f undo_9 @ 0x5a
[0m[91m-f undo_8 @ 0x5b
[0m[91m-f undo_7 @ 0x5c
[0m[91m-f undo_6 @ 0x5d
[0m[91m-f undo_5 @ 0x5e
[0m[91m-f undo_4 @ 0x5f
[0m[91m-f undo_3 @ 0x60
[0m[91m-f undo_2 @ 0x61
[0m[91m-f undo_1 @ 0x62
[0m[91m-f undo_0 @ 0x63
[0m[91m-# Current seek @ 0x64
[0m[91m-0x64
[0m[91m-
[0m[91m-f undo_12 @ 0x25
[0m[91m-f undo_11 @ 0x26
[0m[91m-f undo_10 @ 0x27
[0m[91m-f undo_9 @ 0x28
[0m[91m-f undo_8 @ 0x29
[0m[91m-f undo_7 @ 0x2a
[0m[91m-f undo_6 @ 0x2b
[0m[91m-f undo_5 @ 0x2c
[0m[91m-f undo_4 @ 0x2d
[0m[91m-f undo_3 @ 0x2e
[0m[91m-f undo_2 @ 0x2f
[0m[91m-f undo_1 @ 0x30
[0m[91m-f undo_0 @ 0x31
[0m[91m-# Current seek @ 0x32
[0m[91m-f redo_0 @ 0x33
[0m[91m-f redo_1 @ 0x34
[0m[91m-f redo_2 @ 0x35
[0m[91m-f redo_3 @ 0x36
[0m[91m-f redo_4 @ 0x37
[0m[91m-f redo_5 @ 0x38
[0m[91m-f redo_6 @ 0x39
[0m[91m-f redo_7 @ 0x3a
[0m[91m-f redo_8 @ 0x3b
[0m[91m-f redo_9 @ 0x3c
[0m[91m-f redo_10 @ 0x3d
[0m[91m-f redo_11 @ 0x3e
[0m[91m-f redo_12 @ 0x3f
[0m[91m-f redo_13 @ 0x40
[0m[91m-f redo_14 @ 0x41
[0m[91m-f redo_15 @ 0x42
[0m[91m-f redo_16 @ 0x43
[0m[91m-f redo_17 @ 0x44
[0m[91m-f redo_18 @ 0x45
[0m[91m-f redo_19 @ 0x46
[0m[91m-f redo_20 @ 0x47
[0m[91m-f redo_21 @ 0x48
[0m[91m-f redo_22 @ 0x49
[0m[91m-f redo_23 @ 0x4a
[0m[91m-f redo_24 @ 0x4b
[0m[91m-f redo_25 @ 0x4c
[0m[91m-f redo_26 @ 0x4d
[0m[91m-f redo_27 @ 0x4e
[0m[91m-f redo_28 @ 0x4f
[0m[91m-f redo_29 @ 0x50
[0m[91m-f redo_30 @ 0x51
[0m[91m-f redo_31 @ 0x52
[0m[91m-f redo_32 @ 0x53
[0m[91m-f redo_33 @ 0x54
[0m[91m-f redo_34 @ 0x55
[0m[91m-f redo_35 @ 0x56
[0m[91m-f redo_36 @ 0x57
[0m[91m-f redo_37 @ 0x58
[0m[91m-f redo_38 @ 0x59
[0m[91m-f redo_39 @ 0x5a
[0m[91m-f redo_40 @ 0x5b
[0m[91m-f redo_41 @ 0x5c
[0m[91m-f redo_42 @ 0x5d
[0m[91m-f redo_43 @ 0x5e
[0m[91m-f redo_44 @ 0x5f
[0m[91m-f redo_45 @ 0x60
[0m[91m-f redo_46 @ 0x61
[0m[91m-f redo_47 @ 0x62
[0m[91m-f redo_48 @ 0x63
[0m[91m-f redo_49 @ 0x64
[0m[91m-0x32
[0m[91m-
[0m[91m-{"offset":49,"cursor":0,"current":false}
[0m[91m-{"offset":50,"cursor":0,"current":true}
[0m[91m-{"offset":51,"cursor":0,"current":false}
[0m[91m-f undo_13 @ 0x25
[0m[91m-f undo_12 @ 0x26
[0m[91m-f undo_11 @ 0x27
[0m[91m-f undo_10 @ 0x28
[0m[91m-f undo_9 @ 0x29
[0m[91m-f undo_8 @ 0x2a
[0m[91m-f undo_7 @ 0x2b
[0m[91m-f undo_6 @ 0x2c
[0m[91m-f undo_5 @ 0x2d
[0m[91m-f undo_4 @ 0x2e
[0m[91m-f undo_3 @ 0x2f
[0m[91m-f undo_2 @ 0x30
[0m[91m-f undo_1 @ 0x31
[0m[91m-f undo_0 @ 0x32
[0m[91m-# Current seek @ 0x100
[0m[91m-0x100
[0m[91m-
[0m

-- stderr
Command 'sh*' does not exist.

[**]                                    db/cmd/manyundo       10 OK         0 BR        2 XX        0 FX
[**]                                       db/cmd/cmd_w       33 OK         0 BR        2 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_afcl [33mafcl: mips-32[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bits=64
e asm.arch=mips
e asm.bits=32
afcl
' --
-- stdout
[36m@@ -1,3 +1,3 @@[0m
[92m+reg
[0m n32
 o32
[91m-reg
[0m


[A[2K[31m[XX][0m db/cmd/cmd_afcl [33mafcl: arm-64[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bits=32
e asm.arch=arm
e asm.bits=64
afcl
' --
-- stdout
[36m@@ -1,3 +1,3 @@[0m
[91m-arm64
[0m reg
[92m+arm64
[0m swift



[A[2K[31m[XX][0m db/cmd/cmd_afcl [33mafcl: x86-64[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bits=32
e asm.arch=x86
e asm.bits=64
afcl
' --
-- stdout
[36m@@ -1,5 +1,5 @@[0m
[92m+swift
[0m amd64
 amd64syscall
 ms
 reg
[91m-swift
[0m


[A[2K[31m[XX][0m db/cmd/cmd_afcl [33mafcl: mips-32-override[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -a mips -b 64 -Qc afcl bins/elf/libc.so.0
-- stdout
[36m@@ -1,3 +1,3 @@[0m
[92m+reg
[0m n32
 o32
[91m-reg
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly


[A[2K[31m[XX][0m db/cmd/cmd_tcc [33mtccj, tccl, tcc* outputs[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'tccj
tccl
tcc*
' bins/elf/ls
-- stdout
[36m@@ -4,8 +4,8 @@[0m
 rax ms (rcx, rdx, r8, r9, stack);
 rdi reg (rdi, rsi, rdx, rcx);
 rax r13.swift (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4) r12;
[91m-tcc "rax amd64 (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4);"
[0m[91m-tcc "rax amd64syscall (rdi, rsi, rdx, r10, r8, r9);"
[0m[91m-tcc "rax ms (rcx, rdx, r8, r9, stack);"
[0m[91m-tcc "rdi reg (rdi, rsi, rdx, rcx);"
[0m[91m-tcc "rax r13.swift (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4) r12;"
[0m[92m+tfc rax amd64 (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4);
[0m[92m+tfc rax amd64syscall (rdi, rsi, rdx, r10, r8, r9);
[0m[92m+tfc rax ms (rcx, rdx, r8, r9, stack);
[0m[92m+tfc rdi reg (rdi, rsi, rdx, rcx);
[0m[92m+tfc rax r13.swift (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4) r12;
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly


[A[2K[31m[XX][0m db/cmd/cmd_tcc [33mtcc[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc tcc bins/elf/ls
-- stdout
[36m@@ -1,5 +1,5 @@[0m
[92m+swift
[0m amd64
 amd64syscall
 ms
 reg
[91m-swift
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly


[A[2K[31m[XX][0m db/cmd/cmd_tcc [33mtcc-star[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'tcc
tcc-*
tcc
' bins/elf/ls
-- stdout
[36m@@ -1,5 +1,5 @@[0m
[92m+swift
[0m amd64
 amd64syscall
 ms
 reg
[91m-swift
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly

[**]                                     db/cmd/cmd_tcc       37 OK         7 BR        9 XX        0 FX
[**]                                       db/cmd/basic       44 OK         7 BR        9 XX        0 FX
[**]                                     db/cmd/cmd_agf       45 OK         7 BR        9 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_graph [33msuper mario block (#8788)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e emu.str=true
s 0x0008049c
af+ 0x0008049c super_mario_fix
afb+ 0x0008049c 0x0008049c 8
e io.cache=true
wx c2a2c2a2c2a2 @ 0x80510
e bin.str.enc=utf8
agf
e scr.strconv=asciidot
agf
' bins/elf/analysis/hello-android-mips
-- stdout
[36m@@ -1,7 +1,7 @@[0m
 [0x0008049c]>  # super_mario_fix ();
 .--------------------------------------------.
 |  0x8049c                                   |
[91m-| super_mario_fix ();                        |
[0m[92m+| 8: super_mario_fix ();                     |
[0m |    ; segment.ehdr                          |
 | lui v0, 8                                  |
 |    ; "\u00a2\u00a2\u00a2World" sym..rodata |
[36m@@ -10,7 +10,7 @@[0m
 [0x0008049c]>  # super_mario_fix ();
 .-----------------------------.
 |  0x8049c                    |
[91m-| super_mario_fix ();         |
[0m[92m+| 8: super_mario_fix ();      |
[0m |    ; segment.ehdr           |
 | lui v0, 8                   |
 |    ; "...World" sym..rodata |


[**]                                    db/cmd/cmd_afcl       50 OK         8 BR       10 XX        0 FX
[**]                                     db/cmd/cmd_pde       61 OK         9 BR       10 XX        0 FX
[**]                                  db/cmd/feat_input       82 OK         9 BR       10 XX        0 FX
[**]                                      db/cmd/cmd_dr       89 OK         9 BR       10 XX        0 FX
[**]                                      db/cmd/cmd_px       90 OK         9 BR       10 XX        0 FX
[**]                                      db/cmd/cmd_pc      105 OK         9 BR       10 XX        0 FX
[**]                                       db/cmd/sugar      107 OK         9 BR       10 XX        0 FX
[**]                                 db/cmd/feat_base64      108 OK         9 BR       10 XX        0 FX
[**]                                     db/cmd/unified      110 OK         9 BR       10 XX        0 FX
[**]                                  db/cmd/cmd_macros      121 OK         9 BR       10 XX        0 FX
[**]                                      db/cmd/cmd_ah      129 OK         9 BR       10 XX        0 FX
[**]                                 db/cmd/feat_segoff      131 OK         9 BR       10 XX        0 FX
[**]                                    db/cmd/cmd_task      133 OK         9 BR       10 XX        0 FX
[**]                                         db/cmd/hex      143 OK         9 BR       10 XX        0 FX
[**]                                    db/cmd/cmd_yank      146 OK         9 BR       10 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_search [33msearch range hex @(A..B)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'w ABCD @ 0x100
b 0x100
/x 41424344 @(0x50 0x90)
' malloc://1024
-- stdout
[36m@@ -0,0 +1 @@[0m
[92m+0x00000100 hit0_0 41424344
[0m

-- stderr
rz_num_calc error: ( ')' expected) in ((0x50 0x90))
Searching 4 bytes in [0x0-0x400]
[2Khits: 1

[**]                                        db/cmd/m68k      219 OK        11 BR       11 XX        0 FX
[**]                                   db/cmd/cmd_graph      220 OK        11 BR       11 XX        0 FX
[**]                                     db/cmd/cmd_fnj      225 OK        11 BR       11 XX        0 FX
[**]                                     db/cmd/cmd_afv      230 OK        11 BR       11 XX        0 FX
[**]                                      db/cmd/cmd_ec      231 OK        11 BR       11 XX        0 FX
[**]                                    db/cmd/cmd_aesb      232 OK        11 BR       11 XX        0 FX
[**]                                     db/cmd/cmd_aek      235 OK        12 BR       11 XX        0 FX
[**]                                     db/cmd/cmd_aea      238 OK        12 BR       11 XX        0 FX
[**]                              db/cmd/cmd_print_misc      239 OK        12 BR       11 XX        0 FX

[A[2K[31m[XX][0m db/cmd/midbb [33masm.bb.middle disasm[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e analysis.vars.stackname=true
e asm.bytes=false
e asm.comments=false
e asm.var=false
s 0x560e67
af
e asm.bb.middle=true
pD 0x560eb3-$$
?e
e asm.bb.middle=false
pD 0x560eb3-$$
' bins/pe/cmd_adf_sample0.exe
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00560e67 (int32_t arg_0h);
[0m[92m+/ 6412: fcn.00560e67 (int32_t arg_0h);
[0m |           0x00560e67      push  esi
 |       ,=< 0x00560e68      jmp   0x560e7d
         |   0x00560e6d      push  ecx
[36m@@ -34,7 +34,7 @@[0m
 |      ||   0x00560eb1      pop   edx
 |      ||   0x00560eb2      pop   eax
 
[91m-/ fcn.00560e67 (int32_t arg_0h);
[0m[92m+/ 6412: fcn.00560e67 (int32_t arg_0h);
[0m |           0x00560e67      push  esi
 |       ,=< 0x00560e68      jmp   0x560e7d
         |   0x00560e6d      push  ecx



[A[2K[31m[XX][0m db/cmd/midbb [33masm.bb.middle and asm.flags.middle[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.xrefs=false
s 0x560e67
af
e asm.bb.middle=true
e asm.flags.middle=2
f sym.dummy @ 0x560e7d
pd 2 @ 0x560e7a
?e
fm 0x560e7c @ sym.dummy
pd 3 @ 0x560e7a
?e
fm 0x560e96 @ sym.dummy
pd 2 @ 0x560e95
?e
fm 0x560e97 @ sym.dummy
pd 3 @ 0x560e95
?e
e asm.bb.middle=false
f sym.real @ 0x00560e95
pd 3 @ 0x560e95
?e
pd 3 @ 0x560e95 @e:scr.color=1
' bins/pe/cmd_adf_sample0.exe
-- stdout
[36m@@ -12,18 +12,18 @@[0m
 |           0x00560e96      0f31           rdtsc
 
             0x00560e95  ~   ba0f31e914     mov   edx, 0x14e9310f
[91m-|           ;-- (0x00560e97) sym.dummy:
[0m |           0x00560e96  ~   0f31           rdtsc
[91m-|           0x00560e98      e914000000     jmp   0x560eb1
[0m[92m+|           ;-- sym.dummy:
[0m[92m+|           0x00560e97      31e9           xor   ecx, ebp
[0m 
             ;-- sym.real:
[91m-|           ;-- (0x00560e97) sym.dummy:
[0m             0x00560e95  ~   ba0f31e914     mov   edx, 0x14e9310f
[91m-|           0x00560e9a      0000           add   byte [eax], al
[0m[91m-|           0x00560e9c      00a836dc5264   add   byte [eax + 0x6452dc36], ch
[0m[92m+|           ;-- sym.dummy:
[0m[92m+|           0x00560e97      31e9           xor   ecx, ebp
[0m[92m+|           0x00560e99      1400           adc   al, 0
[0m 
             [36m;-- sym.real:[0m
[91m-[36m|[0m           [36m;-- [32m(0x00560e97)[36m sym.dummy:[0m
[0m             [32m0x00560e95[0m  ~   [37mba[37m0f[33m31[37me9[37m14[0m     [37mmov  [36m edx[0m,[36m[36m [33m0x14e9310f[0m[0m[0m
[91m-[36m|[0m           [32m0x00560e9a[0m      [32m00[32m00[0m           [33madd   byte[36m [0m[[36meax[0m][36m[0m,[36m[36m al[0m[0m[0m
[0m[91m-[36m|[0m           [32m0x00560e9c[0m      [32m00[37ma8[33m36[37mdc[33m52[33m64[0m   [33madd   byte [0m[[36meax [0m+[36m[36m [33m0x6452dc36[0m][36m[0m,[36m[36m ch[0m[0m[0m
[0m[92m+[36m|[0m           [36m;-- sym.dummy:[0m
[0m[92m+[36m|[0m           [32m0x00560e97[0m      [33m31[37me9[0m           [36mxor  [36m ecx[0m,[36m[36m ebp[0m[0m[0m
[0m[92m+[36m|[0m           [32m0x00560e99[0m      [37m14[32m00[0m           [33madc  [36m al[0m,[36m[36m [33m0[0m[0m[0m
[0m

[**]                                       db/cmd/midbb      243 OK        12 BR       13 XX        0 FX
[**]                                     db/cmd/seekbug      251 OK        12 BR       13 XX        0 FX
[**]                                      db/cmd/cmd_ao      254 OK        12 BR       13 XX        0 FX

[A[2K[31m[XX][0m db/cmd/types [33mahts nested[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct foo {int bar;int cow;};"
td "struct spam {int ham;struct foo _foo;int eggs;};"
ahts 8 ~spam
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-spam._foo.cow
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33maht aligned[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
td "struct foo {char gap;int bar __attribute__((__aligned__(4)));};"
td "struct foo2 {char gap[1];int bar __attribute__((__aligned__(4)));};"
td "struct foo3 {char gap[3];int bar __attribute__((__aligned__(4)));};"
td "struct foo4 {char gap[4];int bar;};"
td "struct foo5 {int gap;int bar;};"
ahts 4 ~foo
?e =
wx c7400400000000
aht foo.bar
pd 1
' -
-- stdout
[36m@@ -1,7 +1,2 @@[0m
[91m-foo.bar
[0m[91m-foo2.bar
[0m[91m-foo3.bar
[0m[91m-foo4.bar
[0m[91m-foo5.bar
[0m =
[91m-            0x00000000      c74004000000.  mov   dword [rax + foo.bar], 0
[0m[92m+            0x00000000      c74004000000.  mov   dword [rax + 4], 0
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
<string>:1: error: declaration expected
<string>:1: error: declaration expected
<string>:1: error: declaration expected
wrong type for opcode offset


[A[2K[31m[XX][0m db/cmd/types [33mtd empty struct[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'wx 0xa00f
wx 0x401f @ 0x4
wx 0800000000000080 @ 0x8
td "struct foo {};"
tl foo @ 0x0
pd 1
' -
-- stdout
[36m@@ -1 +1 @@[0m
[91m-(foo)
[0m[92m+            0x00000000      movabs al, byte [0x800001f4000000f]        ; [0x800001f4000000f:1]=255
[0m

-- stderr
<string>:1: error: declaration expected
unknown type foo

[**]                                         db/cmd/egg      254 OK        13 BR       16 XX        0 FX

[A[2K[31m[XX][0m db/cmd/types [33mtd uint64_t[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'wx 0xa00f
wx 0x401f @ 0x4
wx 0800000000000080 @ 0x8
td "struct foo {int a; int b; uint64_t c;};"
tl foo @ 0x0
pd 1
' -
-- stdout
[36m@@ -1,4 +1 @@[0m
[91m-(foo)
[0m[91m- a : 0x00000000 = 4000
[0m[91m- b : 0x00000004 = 8000
[0m[91m- c : 0x00000008 = (qword)0x8000000000000008
[0m[92m+            0x00000000      movabs al, byte [0x800001f4000000f]        ; [0x800001f4000000f:1]=255
[0m

-- stderr
<string>:1: error: declaration expected
unknown type foo


[A[2K[31m[XX][0m db/cmd/types [33mtd union[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "union foo {int a;char b;}"
tu*~foo
ts*~foo
t*~foo
t foo
tu* foo
' -
-- stdout
[36m@@ -1,9 +0,0 @@[0m
[91m-pf.foo dc a b
[0m[91m-tk foo=union
[0m[91m-tk union.foo=a,b
[0m[91m-tk union.foo.a=int32_t,0,0
[0m[91m-tk union.foo.a.meta=0
[0m[91m-tk union.foo.b=char,0,0
[0m[91m-tk union.foo.b.meta=2
[0m[91m-pf dc a b
[0m[91m-pf.foo dc a b
[0m

-- stderr
<string>:1: error: declaration expected
Cannot find 'foo' type
Cannot find 'foo' type

[**]                                     db/cmd/cmd_avr      259 OK        13 BR       18 XX        0 FX

[A[2K[31m[XX][0m db/cmd/types [33mtypes size[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct s1 { int a; int size; int b; };"
tk~struct.s1
' -
-- stdout
[36m@@ -1,7 +0,0 @@[0m
[91m-struct.s1=a,size,b
[0m[91m-struct.s1.a=int32_t,0,0
[0m[91m-struct.s1.a.meta=0
[0m[91m-struct.s1.b=int32_t,8,0
[0m[91m-struct.s1.b.meta=0
[0m[91m-struct.s1.size=int32_t,4,0
[0m[91m-struct.s1.size.meta=0
[0m

-- stderr
<string>:1: error: declaration expected

[**]                                  db/cmd/cmd_search      262 OK        13 BR       19 XX        0 FX

[A[2K[31m[XX][0m db/cmd/types [33mtn common[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'tn 8
tn
tn- 0x8
tn
tn-*
tn
' bins/pe/pe.exe
-- stdout
[36m@@ -1,13 +1,13 @@[0m
[91m-0x8
[0m[92m+RtlRaiseException
[0m[92m+FreeLibraryAndExitThread
[0m ExitProcess
[91m-ExitThread
[0m FatalExit
[91m-FreeLibraryAndExitThread
[0m RaiseException
[92m+ExitThread
[0m[92m+0x8
[0m RtlRaiseException
[92m+FreeLibraryAndExitThread
[0m ExitProcess
[91m-ExitThread
[0m FatalExit
[91m-FreeLibraryAndExitThread
[0m RaiseException
[91m-RtlRaiseException
[0m[92m+ExitThread
[0m


[A[2K[31m[XX][0m db/cmd/types [33mCaller to callee propgation (64 bits)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.lines=false
e asm.bytes=true
e asm.xrefs=false
aa
aaft
s sym.funcarg
pd 1
' bins/elf/arg_down_prop
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-sym.funcarg (char *arg1, uint32_t arg2);
[0m[92m+154: sym.funcarg (char *arg1, uint32_t arg2);
[0m ; var uint32_t var_ch @ rbp-0xc
 ; var char *var_8h @ rbp-0x8
 ; arg char *arg1 @ rdi


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/cmd/types [33mCaller to caller propgation (32 bits)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.lines=false
e asm.bytes=true
e asm.xrefs=false
aa
aaft
s sym.funcarg
pd 1
' bins/elf/arg_down_32
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-sym.funcarg (char *arg_8h, uint32_t arg_ch);
[0m[92m+147: sym.funcarg (char *arg_8h, uint32_t arg_ch);
[0m ; var int32_t var_4h @ ebp-0x4
 ; arg char *arg_8h @ ebp+0x8
 ; arg uint32_t arg_ch @ ebp+0xc


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/cmd/types [33mtcd test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 't-*
td "typedef char FILE_NAME;"
td "union x{int x; int y; int z;}"
td "enum Foo {COW=1,BAR=2};"
td "struct three_elements{int x; char y; float z;}"
tcd
' -
-- stdout
[36m@@ -1,4 +0,0 @@[0m
[91m-union x {int32_t x; int32_t y; int32_t z;};
[0m[91m-struct three_elements {int32_t x; char y; float z;};
[0m[91m-typedef char FILE_NAME;
[0m[91m-enum Foo {COW = 1, BAR = 2};
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
<string>:1: error: declaration expected
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33mttc test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "typedef char FILE_NAME;"
ttc FILE_NAME
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-typedef char FILE_NAME;
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33mtuc test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "union x{int x; int y; int z;}"
tuc x
' -
-- stdout
[36m@@ -1,5 +0,0 @@[0m
[91m-union x {
[0m[91m-	int32_t x;
[0m[91m-	int32_t y;
[0m[91m-	int32_t z;
[0m[91m-};
[0m

-- stderr
<string>:1: error: declaration expected

[**]                                     db/cmd/cmd_aae      283 OK        13 BR       25 XX        0 FX

[A[2K[31m[XX][0m db/cmd/types [33mtec test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum Foo {COW=1,BAR=2};"
tec Foo
' -
-- stdout
[36m@@ -1,4 +0,0 @@[0m
[91m-enum Foo {
[0m[91m-	COW = 1,
[0m[91m-	BAR = 2
[0m[91m-};
[0m

-- stderr
<string>:1: error: declaration expected
Foo is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mted test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum Foo {COW=1,BAR=2};"
ted Foo
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-enum Foo {COW = 1, BAR = 2};
[0m

-- stderr
<string>:1: error: declaration expected
Foo is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mtsc with array[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct with_array{int x; char y[50]; float z;}"
tsc with_array
' -
-- stdout
[36m@@ -1,5 +0,0 @@[0m
[91m-struct with_array {
[0m[91m-	int32_t x;
[0m[91m-	char y[50];
[0m[91m-	float z;
[0m[91m-};
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33mts general pointers test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct normal {int a;char b;};"
td "struct pointer {char *y;struct normal *obj;};"
ts pointer
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-pf zp y obj
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
Cannot find 'pointer' type


[A[2K[31m[XX][0m db/cmd/types [33mts function pointer test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bits=64
ws hello @ 0xc
td "struct foo {int x; int (*fp)(int a , int b ); char *b;};"
ts foo
.ts foo
' -
-- stdout
[36m@@ -1,4 +0,0 @@[0m
[91m-pf dpz x fp b
[0m[91m-  x : 0x00000000 = 0
[0m[91m- fp : 0x00000004 = (qword)0x0000000000000000
[0m[91m-  b : 0x0000000c = "\x05hello"
[0m

-- stderr
<string>:1: error: declaration expected
Cannot find 'foo' type
Cannot find 'foo' type


[A[2K[31m[XX][0m db/cmd/types [33mtsc test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct three_elements{int x; char y; float z;}"
tsc three_elements
' -
-- stdout
[36m@@ -1,5 +0,0 @@[0m
[91m-struct three_elements {
[0m[91m-	int32_t x;
[0m[91m-	char y;
[0m[91m-	float z;
[0m[91m-};
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33mBasic union test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aa
td "union Books {char  title[50];char  author[50]; char  subject[100];};"
tu
tu Books
s main
tl Books 0x00177f88
afv~Books
s 0x000006d2
pd 1
' bins/elf/union_sample
-- stdout
[36m@@ -1,4 +1 @@[0m
[91m-Books
[0m[91m-pf [50]z[50]z[100]z title author subject
[0m[91m-var union Books @ rbp-0x70
[0m[91m-|           0x000006d2      488d4590       lea   rax, [Books]
[0m[92m+|           0x000006d2      488d4590       lea   rax, [var_70h]
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K<string>:1: error: declaration expected
Cannot find 'Books' type
unknown type Books 0x00177f88


[A[2K[31m[XX][0m db/cmd/types [33mtl with ahr (return value hint)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aa
td "struct Test { int a; int  b; char *c;};"
s main
ahr 0x00000597 @ 0x00000592
tl Test 0x00002020
s 0x000005a8
?e
pd 3
' bins/elf/struct_2
-- stdout
[36m@@ -1,4 +1,4 @@[0m
 
[91m-|           0x000005a8      c70206000000   mov   dword [edx], 6        ; Test.a
[0m[91m-|           0x000005ae      8b55f4         mov   edx, dword [Test]     ; Test.a
[0m[91m-|           0x000005b1      c74204070000.  mov   dword [edx + Test.b], 7
[0m[92m+|           0x000005a8      c70206000000   mov   dword [edx], 6
[0m[92m+|           0x000005ae      8b55f4         mov   edx, dword [var_ch]
[0m[92m+|           0x000005b1      c74204070000.  mov   dword [edx + 4], 7
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K<string>:1: error: declaration expected
unknown type Test 0x00002020


[A[2K[31m[XX][0m db/cmd/types [33mComments and var in struct offset propagation[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aa
s main
td "struct Books {char  title[50];char  author[50]; char  subject[100];};"
tl Books 0x00177f18
?e
pdf~Books
' bins/elf/struct_sample
-- stdout
[36m@@ -1,9 +1 @@[0m
 
[91m-|           ; var struct Books @ rbp-0xe0
[0m[91m-|           0x00000684      488d8520ffff.  lea   rax, [Books]
[0m[91m-|           0x00000695      488910         mov   qword [rax], rdx      ; Books.title
[0m[91m-|           0x00000698      488d8520ffff.  lea   rax, [Books]
[0m[91m-|           0x000006ad      488908         mov   qword [rax], rcx      ; Books.author
[0m[91m-|           0x000006b0      488d8520ffff.  lea   rax, [Books]
[0m[91m-|           0x000006c5      488930         mov   qword [rax], rsi      ; Books.subject
[0m[91m-|           0x000006d5      b800000000     mov   eax, 0                ; Books.subject
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K<string>:1: error: declaration expected
unknown type Books 0x00177f18


[A[2K[31m[XX][0m db/cmd/types [33maat with multiple struct[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
e asm.comments=false
e asm.flags=false
td "struct bar {int x; int y; int z;};"
td "struct foo {int a; int b; int c;};"
wx 48C7C000010000488B5008488B480448C7C000020000488B5008488B48049090C3
tl bar 0x200
tl foo 0x100
af
aat
pdf
' -
-- stdout
[36m@@ -1,10 +1,10 @@[0m
[91m-/ fcn.00000000 ();
[0m[92m+/ 33: fcn.00000000 ();
[0m |           0x00000000      48c7c0000100.  mov   rax, 0x100
[91m-|           0x00000007      488b5008       mov   rdx, qword [rax + foo.c]
[0m[91m-|           0x0000000b      488b4804       mov   rcx, qword [rax + foo.b]
[0m[92m+|           0x00000007      488b5008       mov   rdx, qword [rax + 8]
[0m[92m+|           0x0000000b      488b4804       mov   rcx, qword [rax + 4]
[0m |           0x0000000f      48c7c0000200.  mov   rax, 0x200
[91m-|           0x00000016      488b5008       mov   rdx, qword [rax + bar.z]
[0m[91m-|           0x0000001a      488b4804       mov   rcx, qword [rax + bar.y]
[0m[92m+|           0x00000016      488b5008       mov   rdx, qword [rax + 8]
[0m[92m+|           0x0000001a      488b4804       mov   rcx, qword [rax + 4]
[0m |           0x0000001e      90             nop
 |           0x0000001f      90             nop
 \           0x00000020      c3             ret


-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
unknown type bar 0x200
unknown type foo 0x100


[A[2K[31m[XX][0m db/cmd/types [33mstruct offset propagate via tl[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
e asm.comments=false
td "struct bar {int a ; int b; int c;}"
wx 48C7C058190000488B5004488B4808483B500448BBEFBEADDE00000000488958089090C3
af
tl bar 0x1958
?e
pdf~bar.
' -
-- stdout
[36m@@ -1,5 +1 @@[0m
 
[91m-|           0x00000007      488b5004       mov   rdx, qword [rax + bar.b]
[0m[91m-|           0x0000000b      488b4808       mov   rcx, qword [rax + bar.c]
[0m[91m-|           0x0000000f      483b5004       cmp   rdx, qword [rax + bar.b]
[0m[91m-|           0x0000001d      48895808       mov   qword [rax + bar.c], rbx
[0m

-- stderr
<string>:1: error: declaration expected
unknown type bar 0x1958


[A[2K[31m[XX][0m db/cmd/types [33maat with single struct[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=x86
e asm.bits=64
e asm.comments=false
td "struct bar {int a ; int b; int c;}"
wx 48C7C058190000488B5004488B4808483B500448BBEFBEADDE00000000488958089090C3
tl bar 0x1958
af
aat @ fcn.00000000
?e
pdf~bar.
' -
-- stdout
[36m@@ -1,5 +1 @@[0m
 
[91m-|           0x00000007      488b5004       mov   rdx, qword [rax + bar.b]
[0m[91m-|           0x0000000b      488b4808       mov   rcx, qword [rax + bar.c]
[0m[91m-|           0x0000000f      483b5004       cmp   rdx, qword [rax + bar.b]
[0m[91m-|           0x0000001d      48895808       mov   qword [rax + bar.c], rbx
[0m

-- stderr
<string>:1: error: declaration expected
unknown type bar 0x1958


[A[2K[31m[XX][0m db/cmd/types [33mstruct offset for dst operand with aht[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=x86
e asm.bits=32
td "struct foo {int a; int b ; int c;}"
wx 8b40048951048d500883780800
?e
aht foo.b @ 0x00000000
aht foo.b @ 0x00000003
aht foo.c @ 0x00000006
aht foo.c @ 0x00000009
pd 4
' -
-- stdout
[36m@@ -1,5 +1,5 @@[0m
 
[91m-            0x00000000      8b4004         mov   eax, dword [eax + foo.b]
[0m[91m-            0x00000003      895104         mov   dword [ecx + foo.b], edx
[0m[91m-            0x00000006      8d5008         lea   edx, [eax + foo.c]
[0m[91m-            0x00000009      83780800       cmp   dword [eax + foo.c], 0
[0m[92m+            0x00000000      8b4004         mov   eax, dword [eax + 4]
[0m[92m+            0x00000003      895104         mov   dword [ecx + 4], edx
[0m[92m+            0x00000006      8d5008         lea   edx, [eax + 8]
[0m[92m+            0x00000009      83780800       cmp   dword [eax + 8], 0
[0m

-- stderr
<string>:1: error: declaration expected
wrong type for opcode offset
wrong type for opcode offset
wrong type for opcode offset
wrong type for opcode offset


[A[2K[31m[XX][0m db/cmd/types [33maht and arm[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=arm
e asm.bits=32
wx 082090e5040081e5
td "struct foo {int a; int b; int c;};"
aht foo.c @ 0x00000000
aht foo.b @ 0x00000004
?e
pd 2
' -
-- stdout
[36m@@ -1,3 +1,3 @@[0m
 
[91m-            0x00000000      082090e5       ldr   r2, [r0, foo.c]
[0m[91m-            0x00000004      040081e5       str   r0, [r1, foo.b]
[0m[92m+            0x00000000      082090e5       ldr   r2, [r0, 8]
[0m[92m+            0x00000004      040081e5       str   r0, [r1, 4]
[0m

-- stderr
<string>:1: error: declaration expected
wrong type for opcode offset
wrong type for opcode offset


[A[2K[31m[XX][0m db/cmd/types [33mtpx test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct foo {char* a; int b;}"
tpx foo 41414141441414141414420010000000
' -
-- stdout
[36m@@ -1,2 +0,0 @@[0m
[91m- a : 0x00000000 = "AAAAD\x14\x14\x14\x14\x14B"
[0m[91m- b : 0x0000000c = 16
[0m

-- stderr
<string>:1: error: declaration expected
Cannot find 'foo' type


[A[2K[31m[XX][0m db/cmd/types [33maht and mips[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=mips
wx 08007fac040053800800538c
td "struct foo {int a; int b; int c;};"
aht foo.c @ 0x00000000
aht foo.c @ 0x00000008
aht foo.b @ 0x00000004
?e
pd 3
' -
-- stdout
[36m@@ -1,4 +1,4 @@[0m
 
[91m-            0x00000000      08007fac       sw    ra, foo.c(v1)
[0m[91m-            0x00000004      04005380       lb    s3, foo.b(v0)
[0m[91m-            0x00000008      0800538c       lw    s3, foo.c(v0)
[0m[92m+            0x00000000      08007fac       sw    ra, 8(v1)
[0m[92m+            0x00000004      04005380       lb    s3, 4(v0)
[0m[92m+            0x00000008      0800538c       lw    s3, 8(v0)
[0m

-- stderr
<string>:1: error: declaration expected
wrong type for opcode offset
wrong type for opcode offset
wrong type for opcode offset


[A[2K[31m[XX][0m db/cmd/types [33mtpv[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct s16ui { uint16_t a_u; int16_t b_i; uint16_t c_u; int16_t d_i;}"
td "struct s16iu { int16_t a_i; uint16_t b_u; int16_t c_i; uint16_t d_u;}"
td "struct s32ui { uint32_t e_u; int16_t f_i;}"
td "struct s32iu { int32_t e_i; uint16_t f_u;}"
e asm.bits=16
e cfg.bigendian=true
tpv s16ui 0xcafebabecafebabe
tpv s16iu 0xcafebabecafebabe
tpv s32ui 0xcafebabecafebabe
tpv s32iu 0xcafebabecafebabe
e cfg.bigendian=false
tpv s16ui 0xcafebabecafebabe
tpv s16iu 0xcafebabecafebabe
tpv s32ui 0xcafebabecafebabe
tpv s32iu 0xcafebabecafebabe
e asm.bits=32
e cfg.bigendian=true
tpv s16ui 0xcafebabecafebabe
tpv s16iu 0xcafebabecafebabe
tpv s32ui 0xcafebabecafebabe
tpv s32iu 0xcafebabecafebabe
e cfg.bigendian=false
tpv s16ui 0xcafebabecafebabe
tpv s16iu 0xcafebabecafebabe
tpv s32ui 0xcafebabecafebabe
tpv s32iu 0xcafebabecafebabe
e asm.bits=64
e cfg.bigendian=true
tpv s16ui 0xcafebabecafebabe
tpv s16iu 0xcafebabecafebabe
tpv s32ui 0xcafebabecafebabe
tpv s32iu 0xcafebabecafebabe
e cfg.bigendian=false
tpv s16ui 0xcafebabecafebabe
tpv s16iu 0xcafebabecafebabe
tpv s32ui 0xcafebabecafebabe
tpv s32iu 0xcafebabecafebabe
' -
-- stdout
[36m@@ -1,72 +0,0 @@[0m
[91m- a_u : 0x00000000 = 0xbabe
[0m[91m- b_i : 0x00000002 = 0x0000
[0m[91m- c_u : 0x00000004 = 0x0000
[0m[91m- d_i : 0x00000006 = 0x0000
[0m[91m- a_i : 0x00000000 = 0xbabe
[0m[91m- b_u : 0x00000002 = 0x0000
[0m[91m- c_i : 0x00000004 = 0x0000
[0m[91m- d_u : 0x00000006 = 0x0000
[0m[91m- e_u : 0x00000000 = 3133014016
[0m[91m- f_i : 0x00000004 = 0x0000
[0m[91m- e_i : 0x00000000 = 3133014016
[0m[91m- f_u : 0x00000004 = 0x0000
[0m[91m- a_u : 0x00000000 = 0xbabe
[0m[91m- b_i : 0x00000002 = 0x0000
[0m[91m- c_u : 0x00000004 = 0x0000
[0m[91m- d_i : 0x00000006 = 0x0000
[0m[91m- a_i : 0x00000000 = 0xbabe
[0m[91m- b_u : 0x00000002 = 0x0000
[0m[91m- c_i : 0x00000004 = 0x0000
[0m[91m- d_u : 0x00000006 = 0x0000
[0m[91m- e_u : 0x00000000 = 47806
[0m[91m- f_i : 0x00000004 = 0x0000
[0m[91m- e_i : 0x00000000 = 47806
[0m[91m- f_u : 0x00000004 = 0x0000
[0m[91m- a_u : 0x00000000 = 0xcafe
[0m[91m- b_i : 0x00000002 = 0xbabe
[0m[91m- c_u : 0x00000004 = 0x0000
[0m[91m- d_i : 0x00000006 = 0x0000
[0m[91m- a_i : 0x00000000 = 0xcafe
[0m[91m- b_u : 0x00000002 = 0xbabe
[0m[91m- c_i : 0x00000004 = 0x0000
[0m[91m- d_u : 0x00000006 = 0x0000
[0m[91m- e_u : 0x00000000 = 3405691582
[0m[91m- f_i : 0x00000004 = 0x0000
[0m[91m- e_i : 0x00000000 = 3405691582
[0m[91m- f_u : 0x00000004 = 0x0000
[0m[91m- a_u : 0x00000000 = 0xbabe
[0m[91m- b_i : 0x00000002 = 0xcafe
[0m[91m- c_u : 0x00000004 = 0x0000
[0m[91m- d_i : 0x00000006 = 0x0000
[0m[91m- a_i : 0x00000000 = 0xbabe
[0m[91m- b_u : 0x00000002 = 0xcafe
[0m[91m- c_i : 0x00000004 = 0x0000
[0m[91m- d_u : 0x00000006 = 0x0000
[0m[91m- e_u : 0x00000000 = 3405691582
[0m[91m- f_i : 0x00000004 = 0x0000
[0m[91m- e_i : 0x00000000 = 3405691582
[0m[91m- f_u : 0x00000004 = 0x0000
[0m[91m- a_u : 0x00000000 = 0xcafe
[0m[91m- b_i : 0x00000002 = 0xbabe
[0m[91m- c_u : 0x00000004 = 0xcafe
[0m[91m- d_i : 0x00000006 = 0xbabe
[0m[91m- a_i : 0x00000000 = 0xcafe
[0m[91m- b_u : 0x00000002 = 0xbabe
[0m[91m- c_i : 0x00000004 = 0xcafe
[0m[91m- d_u : 0x00000006 = 0xbabe
[0m[91m- e_u : 0x00000000 = 3405691582
[0m[91m- f_i : 0x00000004 = 0xcafe
[0m[91m- e_i : 0x00000000 = 3405691582
[0m[91m- f_u : 0x00000004 = 0xcafe
[0m[91m- a_u : 0x00000000 = 0xbabe
[0m[91m- b_i : 0x00000002 = 0xcafe
[0m[91m- c_u : 0x00000004 = 0xbabe
[0m[91m- d_i : 0x00000006 = 0xcafe
[0m[91m- a_i : 0x00000000 = 0xbabe
[0m[91m- b_u : 0x00000002 = 0xcafe
[0m[91m- c_i : 0x00000004 = 0xbabe
[0m[91m- d_u : 0x00000006 = 0xcafe
[0m[91m- e_u : 0x00000000 = 3405691582
[0m[91m- f_i : 0x00000004 = 0xbabe
[0m[91m- e_i : 0x00000000 = 3405691582
[0m[91m- f_u : 0x00000004 = 0xbabe
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
<string>:1: error: declaration expected
<string>:1: error: declaration expected
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]
Usage: tpv [type] @ [value]


[A[2K[31m[XX][0m db/cmd/types [33mtp with varname[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct Books {char  title[50];char  author[50]; char  subject[100];};"
aa
s main
aei
aeim
aecu 0x000006d5
?e
tp Books var_e0h
' bins/elf/struct_sample
-- stdout
[36m@@ -1,4 +1 @@[0m
 
[91m-   title : 0x00177f18 = "Radare2"
[0m[91m-  author : 0x00177f4a = "pancake"
[0m[91m- subject : 0x00177f7c = "Reversing"
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
<string>:1: error: declaration expected
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2KCannot find 'Books' type


[A[2K[31m[XX][0m db/cmd/types [33mtp[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct person { int age; char name[10]; }"
s 14
w Carlos
s 10
wx 13
tp person @ 10
tp person 10
' -
-- stdout
[36m@@ -1,4 +0,0 @@[0m
[91m-  age : 0x0000000a = 19
[0m[91m- name : 0x0000000e = "Carlos"
[0m[91m-  age : 0x0000000a = 19
[0m[91m- name : 0x0000000e = "Carlos"
[0m

-- stderr
<string>:1: error: declaration expected
Cannot find 'person' type
Cannot find 'person' type


[A[2K[31m[XX][0m db/cmd/types [33mteb <enum> <name>[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum Foo {COW=1,BAR=2};"
teb Foo COW
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-0x1
[0m

-- stderr
<string>:1: error: declaration expected
Foo is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mte <enum> <value>[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum Foo {COW=1,BAR=2};"
te Foo 1
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-COW
[0m

-- stderr
<string>:1: error: declaration expected
Foo is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mte <enum>[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum Foo {COW=1,BAR=2};"
te
te Foo
' -
-- stdout
[36m@@ -1,3 +0,0 @@[0m
[91m-Foo
[0m[91m-COW = 0x1
[0m[91m-BAR = 0x2
[0m

-- stderr
<string>:1: error: declaration expected
Foo is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mArray of struct with ts[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct bar { int a; int b; };"
td "struct foo { int x; struct bar moo[2]; };"
ts foo
.ts foo
' -
-- stdout
[36m@@ -1,12 +0,0 @@[0m
[91m-pf d[2]? x (bar)moo
[0m[91m-   x : 0x00000000 = 0
[0m[91m- moo : 
[0m[91m-[
[0m[91m-                struct<bar>
[0m[91m-   a : 0x00000004 = 0
[0m[91m-   b : 0x00000008 = 0
[0m[91m-
[0m[91m-                struct<bar>
[0m[91m-   a : 0x0000000c = 0
[0m[91m-   b : 0x00000010 = 0
[0m[91m-]
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
Cannot find 'foo' type
Cannot find 'foo' type


[A[2K[31m[XX][0m db/cmd/types [33mtd twice[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "int foo(int bar);"
td "int foo(int bar);"
tk~foo
' -
-- stdout
[36m@@ -1,5 +0,0 @@[0m
[91m-foo=func
[0m[91m-func.foo.arg.0=int32_t,bar
[0m[91m-func.foo.args=1
[0m[91m-func.foo.cc=cdecl
[0m[91m-func.foo.ret=int32_t
[0m

-- stderr
[36m@@ -0,0 +1,2 @@[0m
[92m+<string>:1: error: declaration expected
[0m[92m+<string>:1: error: declaration expected
[0m


[A[2K[31m[XX][0m db/cmd/types [33mstruct of struct with ts and pf[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "struct bar { int a; int b; };"
td "struct foo { int x; struct bar moo; };"
ts foo
.ts foo
' -
-- stdout
[36m@@ -1,6 +0,0 @@[0m
[91m-pf d? x (bar)moo
[0m[91m-   x : 0x00000000 = 0
[0m[91m- moo : 
[0m[91m-                struct<bar>
[0m[91m-   a : 0x00000004 = 0
[0m[91m-   b : 0x00000008 = 0
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
Cannot find 'foo' type
Cannot find 'foo' type


[A[2K[31m[XX][0m db/cmd/types [33munions[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "union x{float a;int b;}"
tu
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-x
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33menum64[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum v { t=0x8000000000000001, p=0x8000000000000008 };"
te~?
tk enum.v.t
tk enum.v.p
' -
-- stdout
[36m@@ -1,3 +1 @@[0m
[91m-1
[0m[91m-0x8000000000000001
[0m[91m-0x8000000000000008
[0m[92m+0
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33menum32[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum v { t=0x123, p=0x321 };"
te~?
tk v
tk enum.v.t
tk enum.v.p
' -
-- stdout
[36m@@ -1,4 +1 @@[0m
[91m-1
[0m[91m-enum
[0m[91m-0x123
[0m[91m-0x321
[0m[92m+0
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33mtd struct[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 't-*
td "struct test_struct{int x;int y;};"
ts~?test_struct
' -
-- stdout
[36m@@ -1 +1 @@[0m
[91m-1
[0m[92m+0
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33mtt[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "typedef char FILE_NAME;"
tt FILE_NAME
td "typedef bool FLAG;"
tt FLAG
' -
-- stdout
[36m@@ -1,2 +0,0 @@[0m
[91m-char
[0m[91m-bool
[0m

-- stderr
<string>:1: error: declaration expected
This is not an typedef
<string>:1: error: declaration expected
This is not an typedef


[A[2K[31m[XX][0m db/cmd/types [33mtf and tfk[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'tf write
tfk write
' -
-- stdout
[36m@@ -1,6 +1,12 @@[0m
[91m-ssize_t write (int fd, const char * ptr, size_t nbytes);
[0m[92m+func.write.args=3
[0m func.write.arg.0=int,fd
 func.write.arg.1=const char *,ptr
 func.write.arg.2=size_t,nbytes
[91m-func.write.args=3
[0m func.write.ret=ssize_t
[92m+Usage: tf[...]   
[0m[92m+| tf           List all function definitions loaded
[0m[92m+| tf <name>    Show function signature
[0m[92m+| tfc <name>   Show function signature in C syntax
[0m[92m+| tfcj <name>  Same as above but in JSON
[0m[92m+| tfj          List all function definitions in JSON
[0m[92m+| tfj <name>   Show function signature in JSON
[0m


[A[2K[31m[XX][0m db/cmd/types [33mtek[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum FOO { A=1, B=0x100, C=0xFF, D=4, E=5 };"
td "enum BAR { G=0x800, Z=0xEE, P=4, E=5 };"
tek FOO
tek BAR
tek
' -
-- stdout
[36m@@ -1,40 +0,0 @@[0m
[91m-enum.FOO.0x100=B
[0m[91m-enum.FOO.0x1=A
[0m[91m-enum.FOO.0x4=D
[0m[91m-enum.FOO.0x5=E
[0m[91m-enum.FOO.0xff=C
[0m[91m-enum.FOO.A=0x1
[0m[91m-enum.FOO.B=0x100
[0m[91m-enum.FOO.C=0xff
[0m[91m-enum.FOO.D=0x4
[0m[91m-enum.FOO.E=0x5
[0m[91m-enum.FOO=A,B,C,D,E
[0m[91m-enum.BAR.0x4=P
[0m[91m-enum.BAR.0x5=E
[0m[91m-enum.BAR.0x800=G
[0m[91m-enum.BAR.0xee=Z
[0m[91m-enum.BAR.E=0x5
[0m[91m-enum.BAR.G=0x800
[0m[91m-enum.BAR.P=0x4
[0m[91m-enum.BAR.Z=0xee
[0m[91m-enum.BAR=G,Z,P,E
[0m[91m-enum.BAR.0x4=P
[0m[91m-enum.BAR.0x5=E
[0m[91m-enum.BAR.0x800=G
[0m[91m-enum.BAR.0xee=Z
[0m[91m-enum.BAR.E=0x5
[0m[91m-enum.BAR.G=0x800
[0m[91m-enum.BAR.P=0x4
[0m[91m-enum.BAR.Z=0xee
[0m[91m-enum.BAR=G,Z,P,E
[0m[91m-enum.FOO.0x100=B
[0m[91m-enum.FOO.0x1=A
[0m[91m-enum.FOO.0x4=D
[0m[91m-enum.FOO.0x5=E
[0m[91m-enum.FOO.0xff=C
[0m[91m-enum.FOO.A=0x1
[0m[91m-enum.FOO.B=0x100
[0m[91m-enum.FOO.C=0xff
[0m[91m-enum.FOO.D=0x4
[0m[91m-enum.FOO.E=0x5
[0m[91m-enum.FOO=A,B,C,D,E
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
FOO is not an enum
BAR is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mtej[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum FOO { A=1, B=0x100, C=0xFF, D=4, E=5 };"
td "enum BAR { G=0x800, Z=0xEE, P=4, E=5 };"
tej FOO
tej BAR
tej
' -
-- stdout
[36m@@ -1,3 +1 @@[0m
[91m-{"name":"FOO","values":{"A":1,"B":256,"C":255,"D":4,"E":5}}
[0m[91m-{"name":"BAR","values":{"G":2048,"Z":238,"P":4,"E":5}}
[0m[91m-[{"name":"BAR","values":{"G":2048,"Z":238,"P":4,"E":5}},{"name":"FOO","values":{"A":1,"B":256,"C":255,"D":4,"E":5}}]
[0m[92m+{}
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
FOO is not an enum
BAR is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mtef[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum FOO { A=1, B=0x100, C=0xFF, D=4, E=5 };"
td "enum BAR { G=0x800, Z=0xEE, P=4, E=5 };"
tef 0x800
tef 0x100
tef 4
tef 0x5
' -
-- stdout
[36m@@ -1,6 +0,0 @@[0m
[91m-BAR.G
[0m[91m-FOO.B
[0m[91m-BAR.P
[0m[91m-FOO.D
[0m[91m-BAR.E
[0m[91m-FOO.E
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
0x800 is not an enum
0x100 is not an enum
4 is not an enum
0x5 is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mte[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum pe_machine { IMAGE_FILE_MACHINE_IA64=0x200, IMAGE_FILE_MACHINE_I386=0x14c };"
te pe_machine 0x14c
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-IMAGE_FILE_MACHINE_I386
[0m

-- stderr
<string>:1: error: declaration expected
pe_machine is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mteb[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum pe_machine { IMAGE_FILE_MACHINE_IA64=0x200, IMAGE_FILE_MACHINE_I386=0x14c };"
teb pe_machine IMAGE_FILE_MACHINE_I386
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-0x14c
[0m

-- stderr
<string>:1: error: declaration expected
pe_machine is not an enum


[A[2K[31m[XX][0m db/cmd/types [33mt- union[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "union xoo{int x; int y; int z;}"
tk *~union
t- xoo
' -
-- stdout
[36m@@ -1,8 +0,0 @@[0m
[91m-union.xoo=x,y,z
[0m[91m-union.xoo.x=int32_t,0,0
[0m[91m-union.xoo.x.meta=0
[0m[91m-union.xoo.y=int32_t,0,0
[0m[91m-union.xoo.y.meta=0
[0m[91m-union.xoo.z=int32_t,0,0
[0m[91m-union.xoo.z.meta=0
[0m[91m-xoo=union
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33mt- enum[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum pe_machine { IMAGE_FILE_MACHINE_IA64=0x200, IMAGE_FILE_MACHINE_I386=0x14c };"
te~?pe_machine
t- pe_machine
te~?pe_machine
' -
-- stdout
[36m@@ -1,2 +1,2 @@[0m
[91m-1
[0m[92m+0
[0m 0


-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/types [33mList readable type links[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'tl int
wB -1
tl int 0x8
w test @ 0x10
tl "char *" 0x10
tll
' -
-- stdout
[36m@@ -1,6 +1,2 @@[0m
 (int)
 0x00000000 = -1
[91m-(int)
[0m[91m-0x00000008 = 0
[0m[91m-(char *)
[0m[91m-0x00000010 = "test"
[0m

-- stderr
Cannot find any function here
unknown type int 0x8
unknown type "char *" 0x10


[A[2K[31m[XX][0m db/cmd/types [33mList type links[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'tl int 0x4
w test @ 0x10
tl "char *" 0x10
tl
' -
-- stdout
[36m@@ -1,2 +0,0 @@[0m
[91m-0x00000004 = int
[0m[91m-0x00000010 = char *
[0m

-- stderr
unknown type int 0x4
unknown type "char *" 0x10


[A[2K[31m[XX][0m db/cmd/types [33mtd anonymous struct in typedef[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "typedef struct {int a;} Foo;"
td "typedef struct { char *hello; int world[]; } Bar;"
ts~Foo,Bar
ts Foo
ts Bar
' --
-- stdout
[36m@@ -1,4 +0,0 @@[0m
[91m-Bar
[0m[91m-Foo
[0m[91m-pf d a
[0m[91m-pf zd hello world
[0m

-- stderr
<string>:1: error: declaration expected
<string>:1: error: declaration expected
Cannot find 'Foo' type
Cannot find 'Bar' type


[A[2K[31m[XX][0m db/cmd/types [33mjni and SoP[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e analysis.vars.stackname=true
e asm.bytes=true
e asm.lines.bb=false
aa
s sym.Java_com_app_ndh_NDHActivity_print
to bins/headers/jni.h
tl JNINativeInterface 0x464c457f
pdf~JNINativeInterface
pdr~JNI?
' bins/elf/libverifyPass.so
-- stdout
[36m@@ -1,13 +1 @@[0m
[91m-| ; var struct JNINativeInterface @ sp+0x12c
[0m[91m-| 0x00000f74      4b93           str   r3, [JNINativeInterface]
[0m[91m-| 0x00000f76      039b           ldr   r3, [var_134h]                  ; JNINativeInterface.reserved0
[0m[91m-| 0x00000f7e      d358           ldr   r3, [r2, r3]                    ; JNINativeInterface.GetStringUTFChars
[0m[91m-| 0x00000f82      019a           ldr   r2, [var_13ch]                  ; JNINativeInterface.reserved0
[0m[91m-| 0x0000100e      d358           ldr   r3, [r2, r3]                    ; JNINativeInterface.GetStringLength
[0m[91m-| 0x00001012      019a           ldr   r2, [var_13ch]                  ; JNINativeInterface.reserved0
[0m[91m-| 0x00001066      d258           ldr   r2, [r2, r3]                    ; JNINativeInterface.NewStringUTF
[0m[91m-| 0x00001114      d258           ldr   r2, [r2, r3]                    ; JNINativeInterface.NewStringUTF
[0m[91m-| 0x0000112e      d258           ldr   r2, [r2, r3]                    ; JNINativeInterface.NewStringUTF
[0m[91m-| 0x00001144      4b9a           ldr   r2, [JNINativeInterface]
[0m[91m-| 0x00001148      9a42           cmp   r2, r3                          ; JNINativeInterface.reserved0
[0m[91m-12
[0m[92m+0
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2Kunknown type JNINativeInterface 0x464c457f

[**]                                   db/cmd/cmd_print      350 OK        16 BR       67 XX        0 FX
[**]                                      db/cmd/cmd_p-      416 OK        16 BR       67 XX        0 FX
[**]                                       db/cmd/cmd_0      418 OK        16 BR       67 XX        0 FX
[**]                                      db/cmd/tables      419 OK        16 BR       67 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_foreach [33miter flags with newline[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '(_;?v $$;?e)() @@f:reloc.std*
' bins/elf/ls
-- stdout
[36m@@ -1,4 +1,4 @@[0m
 0x22288
[91m-
[0m 0x222c0
 
[92m+
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly


[A[2K[31m[XX][0m db/cmd/types [33mtype xrefs[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aaaa
txf main
?e =
txf fcn.00011b90
?e =
tx size_t
?e =
tx "size_t *"
' bins/elf/ls.odd
-- stdout
[36m@@ -17,5 +17,3 @@[0m
 fcn.0000e780
 fcn.0000c0f0
 =
[91m-fcn.00011b90
[0m[91m-fcn.00014d50
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.
[ ] Finding function preludes[[x] Finding function preludes
[ ] Enable constraint types analysis for variables[[x] Enable constraint types analysis for variables

[**]                                       db/cmd/types      425 OK        16 BR       69 XX        0 FX
[**]                                     db/cmd/cmd_pFb      442 OK        16 BR       69 XX        0 FX
[**]                                     db/cmd/bitmask      449 OK        17 BR       69 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_pd_bugs [33mindent asm.lines.fcn=1, asm.lines.bb=0 for issue 9316[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
af+ 0 test
e asm.lines.fcn=1
e asm.lines.bb=0
pd 2
' -
-- stdout
[36m@@ -1,3 +1,3 @@[0m
[91m-/ test ();
[0m[92m+/ 0: test ();
[0m   0x00000000      0000           add   byte [rax], al
   0x00000002      0000           add   byte [rax], al



[A[2K[31m[XX][0m db/cmd/cmd_pd_bugs [33mindent asm.lines.fcn=0, asm.lines.bb=1 for issue 9316[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=x86
e asm.bits=64
af+ 0 test
e asm.lines.fcn=0
e asm.lines.bb=1
pd 2
' -
-- stdout
[36m@@ -1,3 +1,3 @@[0m
[91m-test ();
[0m[92m+0: test ();
[0m           0x00000000      0000           add   byte [rax], al
           0x00000002      0000           add   byte [rax], al



[A[2K[31m[XX][0m db/cmd/cmd_pfd [33mpfd.test E (elf_type)var0[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum elf_type {ET_HIPROC=0xffff};"
wx 0xffff
pfd.test E (elf_type)var0
pfd.test
' -
-- stdout
[36m@@ -1,4 +1,4 @@[0m
 digraph g { graph [ rank=same; rankdir=LR; ];
 root [ rank=1; shape=record
[91m-label="test|{0x0|E|var0|<var0>elf_type.ET_HIPROC}"];
[0m[92m+label="test|{0x0|E|var0|<var0>}"];
[0m }


-- stderr
<string>:1: error: declaration expected

[**]                                     db/cmd/cmd_pfd      450 OK        17 BR       72 XX        0 FX
[**]                                 db/cmd/cmd_foreach      454 OK        17 BR       72 XX        0 FX
[**]                                 db/cmd/cmd_pd_bugs      465 OK        18 BR       72 XX        0 FX
[**]                                  db/cmd/simple-elf      466 OK        18 BR       72 XX        0 FX
[**]                                          db/cmd/va      467 OK        18 BR       72 XX        0 FX
[**]                                      db/cmd/cmd_dh      471 OK        18 BR       72 XX        0 FX
[**]                                  db/cmd/cmd_tmpbuf      472 OK        18 BR       72 XX        0 FX
[**]                                        db/cmd/hash      476 OK        19 BR       72 XX        0 FX
[**]                               db/cmd/cmd_search_in      480 OK        19 BR       72 XX        0 FX
[**]                                     db/cmd/cmd_agC      492 OK        19 BR       72 XX        0 FX
[**]                                  db/cmd/feat_quote      519 OK        20 BR       72 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_pdr [33mpdrj and pirj ignore asm.bb.middle[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=x86
e asm.bits=64
e analysis.nopskip=false
e analysis.jmp.mid=true
e io.cache=true
wx 0f1f440000b8210000c1ebfdbb2c000000ebf0
af
e asm.bb.middle=true
?e
pdr
?e
pdrj~{}
?e
pir
?e
pirj~{}
' -
-- stdout
[36m@@ -1,5 +1,5 @@[0m
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 24: fcn.00000000 ();
[0m | 0x00000000      0f1f440000     nop   dword [rax + rax]
 | ----------- true: 0x00000005
 | ; CODE XREF from fcn.00000000 @ 0x11


[**]                                     db/cmd/cmd_arp      523 OK        20 BR       73 XX        0 FX
[**]                                      db/cmd/cmd_Ch      525 OK        20 BR       73 XX        0 FX
[**]                                    db/cmd/metadata      525 OK        20 BR       73 XX        0 FX
[**]                                     db/cmd/cmd_wfs      529 OK        20 BR       73 XX        0 FX
[**]                                 db/cmd/feat_astabs      530 OK        20 BR       73 XX        0 FX
[**]                               db/cmd/cmd_interpret      532 OK        20 BR       73 XX        0 FX
[**]                            db/cmd/cmd_flags_stress      535 OK        20 BR       73 XX        0 FX
[**]                                       db/cmd/utf32      536 OK        20 BR       73 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_pdr [33mpdr with backwards jmp[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aa
pdr @ entry.init0
' bins/elf/ls
-- stdout
[36m@@ -19,7 +19,7 @@[0m
 
 | 0x00005b78      c3             ret
 
[91m-/ entry.init0 ();
[0m[92m+/ 60: entry.init0 ();
[0m | 0x00005bd0      f30f1efa       endbr64
 | 0x00005bd4      e967ffffff     jmp   0x5b40
 | ----------- true: 0x00005b40


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K
[**]                                     db/cmd/cmd_pdr      537 OK        20 BR       74 XX        0 FX

[A[2K[31m[XX][0m db/cmd/undoredo [33mduplicate push[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's 0x0
s 0x0
s 0x1
s 0x2
# shouldn't contain multiple 0 at the start
shj
# regression test for deduplication not working on buffer edge
60sd +1
s 0x0
s 0x0
s 0x01
s 0x02
sh*~:-6..
' malloc://1024
-- stdout
[36m@@ -1,7 +0,0 @@[0m
[91m-[{"offset":0,"cursor":0,"current":false},{"offset":1,"cursor":0,"current":false},{"offset":2,"cursor":0,"current":true}]
[0m[91m-f undo_4 @ 0x3c
[0m[91m-f undo_3 @ 0x3d
[0m[91m-f undo_2 @ 0x3e
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x1
[0m[91m-# Current seek @ 0x2
[0m

-- stderr
Command 'shj' does not exist.


[A[2K[31m[XX][0m db/cmd/undoredo [33muninitialized bug[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'sd +10
?e should produce two identical results
sd +1
shj
shu
sd +1
shj
?e 0 0, or 22 23 but not 0 22
sd +10
sd +1
shj
shu
sd +2
shj
' malloc://1024
-- stdout
[36m@@ -1,6 +1 @@[0m
 should produce two identical results
[91m-[{"offset":0,"cursor":0,"current":false},{"offset":10,"cursor":0,"current":false},{"offset":11,"cursor":0,"current":true}]
[0m[91m-[{"offset":0,"cursor":0,"current":false},{"offset":10,"cursor":0,"current":false},{"offset":11,"cursor":0,"current":true}]
[0m[91m-0 0, or 22 23 but not 0 22
[0m[91m-[{"offset":0,"cursor":0,"current":false},{"offset":10,"cursor":0,"current":false},{"offset":11,"cursor":0,"current":false},{"offset":21,"cursor":0,"current":false},{"offset":22,"cursor":0,"current":true}]
[0m[91m-[{"offset":0,"cursor":0,"current":false},{"offset":10,"cursor":0,"current":false},{"offset":11,"cursor":0,"current":false},{"offset":21,"cursor":0,"current":false},{"offset":23,"cursor":0,"current":true}]
[0m

-- stderr
Command 'shj' does not exist.

[**]                       db/cmd/cmd_interactive_modes      538 OK        20 BR       76 XX        0 FX

[A[2K[31m[XX][0m db/cmd/undoredo [33mbasic json[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'shj
sd +10
shj
sd +10
shu
shj
shu
shj
?e undo at the start of list
shu
shj
?e redo to the end
shr; shr
shj
?e one more past the end
shr
shj
' malloc://1024
-- stdout
[36m@@ -1,10 +0,0 @@[0m
[91m-[{"offset":0,"cursor":0,"current":true}]
[0m[91m-[{"offset":0,"cursor":0,"current":false},{"offset":10,"cursor":0,"current":true}]
[0m[91m-[{"offset":0,"cursor":0,"current":false},{"offset":10,"cursor":0,"current":true},{"offset":20,"cursor":0,"current":false}]
[0m[91m-[{"offset":0,"cursor":0,"current":true},{"offset":10,"cursor":0,"current":false},{"offset":20,"cursor":0,"current":false}]
[0m[91m-undo at the start of list
[0m[91m-[{"offset":0,"cursor":0,"current":true},{"offset":10,"cursor":0,"current":false},{"offset":20,"cursor":0,"current":false}]
[0m[91m-redo to the end
[0m[91m-[{"offset":0,"cursor":0,"current":false},{"offset":10,"cursor":0,"current":false},{"offset":20,"cursor":0,"current":true}]
[0m[91m-one more past the end
[0m[91m-[{"offset":0,"cursor":0,"current":false},{"offset":10,"cursor":0,"current":false},{"offset":20,"cursor":0,"current":true}]
[0m

-- stderr
Command 'shj' does not exist.


[A[2K[31m[XX][0m db/cmd/undoredo [33mt/undoredo[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '?e No seeks.
sh* ; ?v $$
?e

?e But try undo/redo.
shu
shr
sh*
shr
shr
shu
shu
shu
shr
sh*
?e

?e First seeks.
s 0x10 ; sh* ; ?v $$
s 0x20 ; sh* ; ?v $$
s 0x30 ; sh* ; ?v $$
s 0x40 ; sh* ; ?v $$
?e

?e Undo all seeks (and some more).
shu ; sh* ; ?v $$ ; ?e
shu ; sh* ; ?v $$ ; ?e
shu ; sh* ; ?v $$ ; ?e
shu ; sh* ; ?v $$ ; ?e
# Test if more undos break something.
shu ; sh* ; ?v $$ ; ?e
shu ; sh* ; ?v $$ ; ?e

?e Then redo them (and some more).
shr ; sh* ; ?v $$ ; ?e
shr ; sh* ; ?v $$ ; ?e
shr ; sh* ; ?v $$ ; ?e
shr ; sh* ; ?v $$ ; ?e
# Test if more undos break something.
shr ; sh* ; ?v $$ ; ?e
shr ; sh* ; ?v $$ ; ?e

?e Undo some seeks and then seek somewhere else.
shu ; shu
sh* ; ?v $$ ; ?e
s 0x50
sh* ; ?v $$ ; ?e
# Redo now does nothing.
shr ; shr ; shr
sh* ; ?v $$ ; ?e

?e Undo all seeks again and perform a single seek with undo/redo.
shu ; shu ; shu
sh* ; ?v $$ ; ?e
s 0x100
sh* ; ?v $$ ; ?e
shu ; shr
sh* ; ?v $$ ; ?e
' malloc://1024
-- stdout
[36m@@ -1,149 +1 @@[0m
 No seeks.
[91m-# Current seek @ 0x0
[0m[91m-0x0
[0m[91m-
[0m[91m-But try undo/redo.
[0m[91m-# Current seek @ 0x0
[0m[91m-# Current seek @ 0x0
[0m[91m-
[0m[91m-First seeks.
[0m[91m-f undo_0 @ 0x0
[0m[91m-# Current seek @ 0x10
[0m[91m-0x10
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x10
[0m[91m-# Current seek @ 0x20
[0m[91m-0x20
[0m[91m-f undo_2 @ 0x0
[0m[91m-f undo_1 @ 0x10
[0m[91m-f undo_0 @ 0x20
[0m[91m-# Current seek @ 0x30
[0m[91m-0x30
[0m[91m-f undo_3 @ 0x0
[0m[91m-f undo_2 @ 0x10
[0m[91m-f undo_1 @ 0x20
[0m[91m-f undo_0 @ 0x30
[0m[91m-# Current seek @ 0x40
[0m[91m-0x40
[0m[91m-
[0m[91m-Undo all seeks (and some more).
[0m[91m-f undo_2 @ 0x0
[0m[91m-f undo_1 @ 0x10
[0m[91m-f undo_0 @ 0x20
[0m[91m-# Current seek @ 0x30
[0m[91m-f redo_0 @ 0x40
[0m[91m-0x30
[0m[91m-
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x10
[0m[91m-# Current seek @ 0x20
[0m[91m-f redo_0 @ 0x30
[0m[91m-f redo_1 @ 0x40
[0m[91m-0x20
[0m[91m-
[0m[91m-f undo_0 @ 0x0
[0m[91m-# Current seek @ 0x10
[0m[91m-f redo_0 @ 0x20
[0m[91m-f redo_1 @ 0x30
[0m[91m-f redo_2 @ 0x40
[0m[91m-0x10
[0m[91m-
[0m[91m-# Current seek @ 0x0
[0m[91m-f redo_0 @ 0x10
[0m[91m-f redo_1 @ 0x20
[0m[91m-f redo_2 @ 0x30
[0m[91m-f redo_3 @ 0x40
[0m[91m-0x0
[0m[91m-
[0m[91m-# Current seek @ 0x0
[0m[91m-f redo_0 @ 0x10
[0m[91m-f redo_1 @ 0x20
[0m[91m-f redo_2 @ 0x30
[0m[91m-f redo_3 @ 0x40
[0m[91m-0x0
[0m[91m-
[0m[91m-# Current seek @ 0x0
[0m[91m-f redo_0 @ 0x10
[0m[91m-f redo_1 @ 0x20
[0m[91m-f redo_2 @ 0x30
[0m[91m-f redo_3 @ 0x40
[0m[91m-0x0
[0m[91m-
[0m[91m-Then redo them (and some more).
[0m[91m-f undo_0 @ 0x0
[0m[91m-# Current seek @ 0x10
[0m[91m-f redo_0 @ 0x20
[0m[91m-f redo_1 @ 0x30
[0m[91m-f redo_2 @ 0x40
[0m[91m-0x10
[0m[91m-
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x10
[0m[91m-# Current seek @ 0x20
[0m[91m-f redo_0 @ 0x30
[0m[91m-f redo_1 @ 0x40
[0m[91m-0x20
[0m[91m-
[0m[91m-f undo_2 @ 0x0
[0m[91m-f undo_1 @ 0x10
[0m[91m-f undo_0 @ 0x20
[0m[91m-# Current seek @ 0x30
[0m[91m-f redo_0 @ 0x40
[0m[91m-0x30
[0m[91m-
[0m[91m-f undo_3 @ 0x0
[0m[91m-f undo_2 @ 0x10
[0m[91m-f undo_1 @ 0x20
[0m[91m-f undo_0 @ 0x30
[0m[91m-# Current seek @ 0x40
[0m[91m-0x40
[0m[91m-
[0m[91m-f undo_3 @ 0x0
[0m[91m-f undo_2 @ 0x10
[0m[91m-f undo_1 @ 0x20
[0m[91m-f undo_0 @ 0x30
[0m[91m-# Current seek @ 0x40
[0m[91m-0x40
[0m[91m-
[0m[91m-f undo_3 @ 0x0
[0m[91m-f undo_2 @ 0x10
[0m[91m-f undo_1 @ 0x20
[0m[91m-f undo_0 @ 0x30
[0m[91m-# Current seek @ 0x40
[0m[91m-0x40
[0m[91m-
[0m[91m-Undo some seeks and then seek somewhere else.
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x10
[0m[91m-# Current seek @ 0x20
[0m[91m-f redo_0 @ 0x30
[0m[91m-f redo_1 @ 0x40
[0m[91m-0x20
[0m[91m-
[0m[91m-f undo_2 @ 0x0
[0m[91m-f undo_1 @ 0x10
[0m[91m-f undo_0 @ 0x20
[0m[91m-# Current seek @ 0x50
[0m[91m-0x50
[0m[91m-
[0m[91m-f undo_2 @ 0x0
[0m[91m-f undo_1 @ 0x10
[0m[91m-f undo_0 @ 0x20
[0m[91m-# Current seek @ 0x50
[0m[91m-0x50
[0m[91m-
[0m[91m-Undo all seeks again and perform a single seek with undo/redo.
[0m[91m-# Current seek @ 0x0
[0m[91m-f redo_0 @ 0x10
[0m[91m-f redo_1 @ 0x20
[0m[91m-f redo_2 @ 0x50
[0m[91m-0x0
[0m[91m-
[0m[91m-f undo_0 @ 0x0
[0m[91m-# Current seek @ 0x100
[0m[91m-0x100
[0m[91m-
[0m[91m-f undo_0 @ 0x0
[0m[91m-# Current seek @ 0x100
[0m[91m-0x100
[0m[91m-
[0m

-- stderr
Command 'sh*' does not exist.

[**]                                    db/cmd/undoredo      538 OK        20 BR       78 XX        0 FX
[**]                                         db/cmd/elf      546 OK        20 BR       78 XX        0 FX
[**]                                     db/cmd/cmd_aii      548 OK        20 BR       78 XX        0 FX
[**]                                      db/cmd/spaces      549 OK        21 BR       78 XX        0 FX
[**]                                      db/cmd/cmd_to      557 OK        21 BR       78 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_help [33mold recursive help (json)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'zi?*j
' -
-- stdout
[36m@@ -1 +1 @@[0m
[91m-{"zi":{"cmd":"zi","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens","is_last":true}],"description":"","summary":"Show zignatures matching information"},"zij":{"cmd":"zij","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens","is_last":true}],"description":"","summary":"Show zignatures matching information (JSON mode)"},"zi*":{"cmd":"zi*","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens","is_last":true}],"description":"","summary":"Show zignatures matching information (rizin mode)"},"ziq":{"cmd":"ziq","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens","is_last":true}],"description":"","summary":"Show zignatures matching information (quiet mode)"},"zii":{"cmd":"zii","type":"argv","args_str":" <from> <to>","args":[{"type":"number","name":"from","required":true},{"type":"number","name":"to","required":true}],"description":"","summary":"Show zignatures matching information in range"}}
[0m[92m+{"zi":{"cmd":"zi","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens"}],"description":"","summary":"Show zignatures matching information"},"zij":{"cmd":"zij","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens"}],"description":"","summary":"Show zignatures matching information (JSON mode)"},"zi*":{"cmd":"zi*","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens"}],"description":"","summary":"Show zignatures matching information (rizin mode)"},"ziq":{"cmd":"ziq","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens"}],"description":"","summary":"Show zignatures matching information (quiet mode)"},"zii":{"cmd":"zii","type":"argv","args_str":" <from> <to>","args":[{"type":"number","name":"from","required":true},{"type":"number","name":"to","required":true}],"description":"","summary":"Show zignatures matching information in range"}}
[0m


[A[2K[31m[XX][0m db/cmd/cmd_help [33mrecursive help (json)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '?*j zi
' -
-- stdout
[36m@@ -1 +1 @@[0m
[91m-{"zi":{"cmd":"zi","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens","is_last":true}],"description":"","summary":"Show zignatures matching information"},"zij":{"cmd":"zij","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens","is_last":true}],"description":"","summary":"Show zignatures matching information (JSON mode)"},"zi*":{"cmd":"zi*","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens","is_last":true}],"description":"","summary":"Show zignatures matching information (rizin mode)"},"ziq":{"cmd":"ziq","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens","is_last":true}],"description":"","summary":"Show zignatures matching information (quiet mode)"},"zii":{"cmd":"zii","type":"argv","args_str":" <from> <to>","args":[{"type":"number","name":"from","required":true},{"type":"number","name":"to","required":true}],"description":"","summary":"Show zignatures matching information in range"}}
[0m[92m+{"zi":{"cmd":"zi","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens"}],"description":"","summary":"Show zignatures matching information"},"zij":{"cmd":"zij","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens"}],"description":"","summary":"Show zignatures matching information (JSON mode)"},"zi*":{"cmd":"zi*","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens"}],"description":"","summary":"Show zignatures matching information (rizin mode)"},"ziq":{"cmd":"ziq","type":"argv_modes","args_str":" [<commens>]","args":[{"type":"string","name":"commens"}],"description":"","summary":"Show zignatures matching information (quiet mode)"},"zii":{"cmd":"zii","type":"argv","args_str":" <from> <to>","args":[{"type":"number","name":"from","required":true},{"type":"number","name":"to","required":true}],"description":"","summary":"Show zignatures matching information in range"}}
[0m

[**]                             db/cmd/feat_arithmetic      567 OK        21 BR       80 XX        0 FX
[**]                                      db/cmd/cmd_ph      573 OK        21 BR       80 XX        0 FX
[**]                                      db/cmd/cmd_av      584 OK        21 BR       80 XX        0 FX
[**]                                    db/cmd/cmd_help      586 OK        21 BR       80 XX        0 FX
[**]                                       db/cmd/shell      612 OK        22 BR       80 XX        0 FX

[A[2K[31m[XX][0m db/cmd/midflags [33masm.flags.middle reset[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
e asm.bb.middle=false
e asm.flags.middle=2
wx b821c10010ebf9b8210011c1
af @ 3
f sym.dummy @ 9
pd 4 @ 0
' -
-- stdout
[36m@@ -1,7 +1,6 @@[0m
 |           ; CODE XREF from fcn.00000003 @ 0x5
[91m-|           ;-- (0x00000003) fcn.00000003:
[0m |           0x00000000  ~   b821c10010     mov   eax, 0x1000c121
[92m+/ 9: fcn.00000003 ();
[0m[92m+|           0x00000003      0010           add   byte [rax], dl
[0m |           0x00000005      ebf9           jmp   0
             0x00000007  ~   b8210011c1     mov   eax, 0xc1110021       ; '!'
[91m-            ;-- sym.dummy:
[0m[91m-            0x00000009      0011           add   byte [rcx], dl
[0m

[**]                                     db/cmd/project      629 OK        22 BR       81 XX        0 FX

[A[2K[31m[XX][0m db/cmd/cmd_ara [33marcc+tcc[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bits=64
afcl
e asm.arch=arm
e asm.bits=32
arcc
e asm.arch=x86
e asm.bits=64
arcc
tcc `arcc`
afcl
' -
-- stdout
[36m@@ -1,12 +1,12 @@[0m
[92m+swift
[0m amd64
 amd64syscall
 ms
 reg
[91m-swift
[0m r0 reg(r0, r1, r2, r3)
 rdi reg(rdi, rsi, rdx, rcx)
[92m+swift
[0m amd64
 amd64syscall
 ms
 reg
[91m-swift
[0m

[**]                                     db/cmd/cmd_ara      642 OK        23 BR       82 XX        0 FX
[**]                                    db/cmd/midflags      644 OK        23 BR       82 XX        0 FX
[**]                                    db/cmd/cmd_eval      686 OK        24 BR       82 XX        0 FX
[**]                                    db/cmd/cmd_hash      691 OK        24 BR       82 XX        0 FX
[**]                                db/cmd/bug_backtick      691 OK        24 BR       82 XX        1 FX
[**]                                      db/cmd/cmd_pf      693 OK        24 BR       82 XX        1 FX

[A[2K[31m[XX][0m db/cmd/dwarf [33m"function info integration c++"[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.dwarf=false
aaa
pd 13 @ main
' bins/elf/dwarf3_many_comp_units.elf
-- stdout
[36m@@ -1,6 +1,6 @@[0m
             ; DATA XREF from entry0 @ 0x10c1
             ;-- main:
[91m-/ int dbg.main (int argc, char **argv, char **envp);
[0m[92m+/ 139: int dbg.main (int argc, char **argv, char **envp);
[0m |           ; var int output @ rbp-0x24
 |           ; var Bird *b @ rbp-0x20
 |           ; var Mammal *m @ rbp-0x18


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Integrate dwarf function information.[[x] Integrate dwarf function information.
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.


[A[2K[31m[XX][0m db/cmd/dwarf [33m"function info integration ada"[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.dwarf=false
aaa
pdf @  dbg.main
' bins/elf/ada_test_dwarf
-- stdout
[36m@@ -1,6 +1,6 @@[0m
             ; DATA XREF from entry0 @ 0x2271
             ;-- main:
[91m-/ int dbg.main (int argc, char **argv, char **envp);
[0m[92m+/ 101: int dbg.main (int argc, char **argv, char **envp);
[0m |           ; var char **var_28h @ rbp-0x28
 |           ; var char **var_20h @ rbp-0x20
 |           ; var int64_t var_14h @ rbp-0x14


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Integrate dwarf function information.[[x] Integrate dwarf function information.
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.


[A[2K[31m[XX][0m db/cmd/dwarf [33m"pdf dwarf invalid main for analysis not found (aa)"[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.dwarf=true
e analysis.nopskip=true # if set to true it breaks the test
aa
pd 1 @main
' bins/src/dwarftest
-- stdout
[36m@@ -1,4 +1,4 @@[0m
             ; DATA XREF from entry0 @ 0x40045d
[91m-/ int main (int argc, char **argv, char **envp);
[0m[92m+/ 44: int main (int argc, char **argv, char **envp);
[0m |           ; var int64_t var_4h @ rbp-0x4
 |           0x0040052d      55             push  rbp                   ; dwarftest.c:4


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/cmd/dwarf [33m"big endian variable info"[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.dwarf=false
aaa
pdf @  dbg.init
' bins/elf/ppc64_sudoku_dwarf
-- stdout
[36m@@ -1,7 +1,7 @@[0m
             ; CALL XREF from dbg.main @ 0x10001ae8
             ;-- Grid::init():
             ;-- method.Grid.init:
[91m-/ dbg.init (Grid * const this);
[0m[92m+/ 64: dbg.init (Grid * const this);
[0m |           ; arg Grid * const this @ r3
 |           0x100012bc      39030144       addi  r8, r3, 0x144         ; arg1 [0m; void init(Grid * const this);
 |           0x100012c0      38e30168       addi  r7, r3, 0x168         ; arg1


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Finding xrefs in noncode section with analysis.in=io.maps[[x] Finding xrefs in noncode section with analysis.in=io.maps
[ ] Analyze value pointers (aav)[[x] Analyze value pointers (aav)
[ ] Value from 0x10000000 to 0x10002038 (aav)[[x] Value from 0x10000000 to 0x10002038 (aav)
[ ] 0x10000000-0x10002038 in 0x10000000-0x10002038 (aav)[[x] 0x10000000-0x10002038 in 0x10000000-0x10002038 (aav)
[ ] Emulate functions to find computed references (aaef)[[x] Emulate functions to find computed references (aaef)
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Integrate dwarf function information.[[x] Integrate dwarf function information.
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.

[**]                                      db/cmd/cmd_pB      697 OK        24 BR       86 XX        1 FX
[**]                                     db/cmd/cmd_psj      702 OK        24 BR       86 XX        1 FX
[**]                                    db/cmd/cmd_afvd      703 OK        24 BR       86 XX        1 FX
[**]                                     db/cmd/cmd_pix      706 OK        24 BR       86 XX        1 FX
[**]                                      db/cmd/cmd_ab      713 OK        24 BR       86 XX        1 FX
[**]                                     db/cmd/cmd_pxd      716 OK        24 BR       86 XX        1 FX
[**]                                 db/cmd/cmd_repeats      724 OK        24 BR       86 XX        1 FX
[**]                                     db/cmd/cmd_dmh      728 OK        24 BR       86 XX        1 FX
[**]                                  db/cmd/cmd_fuzzed      729 OK        24 BR       86 XX        1 FX

[A[2K[31m[XX][0m db/cmd/cmd_afb [33mafb misc[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aaa
s main
afbi
afbil
afbij~{}
afbj~{}
afb*
afbr
' bins/elf/hello_world
-- stdout
[36m@@ -1,4 +1,3 @@[0m
[91m-0x000007aa 0x00000806 00:0000 92 j 0x00000844 f 0x00000806
[0m jump: 0x00000844
 fail: 0x00000806
 opaddr: 0x000007aa


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.
Usage: afbi[j] <addr>

[**]                              db/cmd/cmd_search_hit      733 OK        24 BR       87 XX        1 FX
[**]                                     db/cmd/cmd_afn      736 OK        24 BR       87 XX        1 FX
[**]                                       db/cmd/cmd_k      737 OK        24 BR       87 XX        1 FX
[**]                                      db/cmd/malloc      738 OK        24 BR       87 XX        1 FX
[**]                                db/cmd/cmd_question      739 OK        24 BR       87 XX        1 FX
[**]                                  db/cmd/singleline      741 OK        24 BR       87 XX        1 FX
[**]                                     db/cmd/cmd_aex      742 OK        24 BR       87 XX        1 FX
[**]                                   db/cmd/print_bug      744 OK        24 BR       87 XX        1 FX
[**]                                     db/cmd/cmd_pdx      747 OK        24 BR       87 XX        1 FX
[**]                                        db/cmd/0000      747 OK        25 BR       87 XX        1 FX
[**]                                     db/cmd/cmd_env      751 OK        26 BR       87 XX        1 FX
[**]                                   db/cmd/cmd_shift      759 OK        27 BR       87 XX        1 FX

[A[2K[31m[XX][0m db/cmd/cmd_afb [33maf localflag[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aaa
afi~?
afi.
afbi
' bins/mach0/mac-ls2
-- stdout
[36m@@ -1,3 +1,11 @@[0m
 33
 entry0
[91m-0x1000011e8 0x100001211 00:0000 41 j 0x100001216 f 0x100001211
[0m[92m+jump: 0x100001216
[0m[92m+fail: 0x100001211
[0m[92m+opaddr: 0x1000011e8
[0m[92m+addr: 0x1000011e8
[0m[92m+size: 41
[0m[92m+inputs: 0
[0m[92m+outputs: 2
[0m[92m+ninstr: 14
[0m[92m+traced: true
[0m

-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for objc references[[x] Check for objc references
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.

[**]                                     db/cmd/cmd_afb      759 OK        27 BR       88 XX        1 FX
[**]                                    db/cmd/cmd_meta      767 OK        30 BR       88 XX        1 FX

[A[2K[31m[XX][0m db/cmd/cmd_i [33miRj[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iRj~{} bins/pe/standard.exe
-- stdout
[36m@@ -6,7 +6,7 @@[0m
     "vaddr": 4198784,
     "size": 5672,
     "lang": "LANG_NEUTRAL",
[91m-    "timestamp": "Thu Jan  1 00:00:00 1970"
[0m[92m+    "timestamp": "Thu Jan  1 05:30:00 1970"
[0m   },
   {
     "name": "10",
[36m@@ -15,7 +15,7 @@[0m
     "vaddr": 4205072,
     "size": 76,
     "lang": "LANG_NEUTRAL",
[91m-    "timestamp": "Thu Jan  1 00:00:00 1970"
[0m[92m+    "timestamp": "Thu Jan  1 05:30:00 1970"
[0m   },
   {
     "name": "788",
[36m@@ -24,7 +24,7 @@[0m
     "vaddr": 4204464,
     "size": 20,
     "lang": "LANG_NEUTRAL",
[91m-    "timestamp": "Thu Jan  1 00:00:00 1970"
[0m[92m+    "timestamp": "Thu Jan  1 05:30:00 1970"
[0m   },
   {
     "name": "1",
[36m@@ -33,7 +33,7 @@[0m
     "vaddr": 4204496,
     "size": 452,
     "lang": "LANG_NEUTRAL",
[91m-    "timestamp": "Thu Jan  1 00:00:00 1970"
[0m[92m+    "timestamp": "Thu Jan  1 05:30:00 1970"
[0m   },
   {
     "name": "1",
[36m@@ -42,6 +42,6 @@[0m
     "vaddr": 4204960,
     "size": 74,
     "lang": "LANG_NEUTRAL",
[91m-    "timestamp": "Thu Jan  1 00:00:00 1970"
[0m[92m+    "timestamp": "Thu Jan  1 05:30:00 1970"
[0m   }
 ]



[A[2K[31m[XX][0m db/cmd/cmd_i [33miS entropy and iSS entropy[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'iS entropy; iSS entropy' bins/elf/crackme0x05
-- stdout
[36m@@ -3,30 +3,30 @@[0m
 nth paddr        size vaddr       vsize perm entropy    name           type     flags
 -------------------------------------------------------------------------------------
 0   0x00000000    0x0 0x00000000    0x0 ---- 0.00000000                NULL     
[91m-1   0x00000154   0x13 0x08048154   0x13 -r-- 3.68188080 .interp        PROGBITS alloc
[0m[91m-2   0x00000168   0x20 0x08048168   0x20 -r-- 1.74868984 .note.ABI-tag  NOTE     alloc
[0m[91m-3   0x00000188   0x38 0x08048188   0x38 -r-- 1.23442903 .hash          HASH     alloc
[0m[91m-4   0x000001c0   0x20 0x080481c0   0x20 -r-- 1.99254169 .gnu.hash      GNU_HASH alloc
[0m[91m-5   0x000001e0   0x90 0x080481e0   0x90 -r-- 1.56755604 .dynsym        DYNSYM   alloc
[0m[91m-6   0x00000270   0x5f 0x08048270   0x5f -r-- 4.38707564 .dynstr        STRTAB   alloc
[0m[91m-7   0x000002d0   0x12 0x080482d0   0x12 -r-- 1.19417373 .gnu.version   VERSYM   alloc
[0m[91m-8   0x000002e4   0x20 0x080482e4   0x20 -r-- 1.66055053 .gnu.version_r VERNEED  alloc
[0m[91m-9   0x00000304    0x8 0x08048304    0x8 -r-- 2.75000000 .rel.dyn       REL      alloc
[0m[91m-10  0x0000030c   0x30 0x0804830c   0x30 -r-- 2.94082791 .rel.plt       REL      alloc
[0m[91m-11  0x0000033c   0x17 0x0804833c   0x17 -r-x 3.46241535 .init          PROGBITS alloc,execute
[0m[91m-12  0x00000354   0x70 0x08048354   0x70 -r-x 3.51876869 .plt           PROGBITS alloc,execute
[0m[91m-13  0x000003d0  0x274 0x080483d0  0x274 -r-x 5.76534324 .text          PROGBITS alloc,execute
[0m[91m-14  0x00000644   0x1a 0x08048644   0x1a -r-x 3.79621760 .fini          PROGBITS alloc,execute
[0m[91m-15  0x00000660   0x55 0x08048660   0x55 -r-- 4.59175306 .rodata        PROGBITS alloc
[0m[91m-16  0x000006b8    0x4 0x080486b8    0x4 -r-- 0.00000000 .eh_frame      PROGBITS alloc
[0m[91m-17  0x00000f0c    0x8 0x08049f0c    0x8 -rw- 1.00000000 .ctors         PROGBITS write,alloc
[0m[91m-18  0x00000f14    0x8 0x08049f14    0x8 -rw- 1.00000000 .dtors         PROGBITS write,alloc
[0m[91m-19  0x00000f1c    0x4 0x08049f1c    0x4 -rw- 0.00000000 .jcr           PROGBITS write,alloc
[0m[91m-20  0x00000f20   0xd0 0x08049f20   0xd0 -rw- 2.82161069 .dynamic       DYNAMIC  write,alloc
[0m[91m-21  0x00000ff0    0x4 0x08049ff0    0x4 -rw- 0.00000000 .got           PROGBITS write,alloc
[0m[91m-22  0x00000ff4   0x24 0x08049ff4   0x24 -rw- 2.98068211 .got.plt       PROGBITS write,alloc
[0m[91m-23  0x00001018    0xc 0x0804a018    0xc -rw- 1.58496250 .data          PROGBITS write,alloc
[0m[91m-24  0x00001024    0x0 0x0804a024    0x4 -rw- 0.00000000 .bss           NOBITS   write,alloc
[0m[92m+1   0x00000154   0x13 0x08048154   0x13 -r-- 3.68188080 .interp        PROGBITS alloc,
[0m[92m+2   0x00000168   0x20 0x08048168   0x20 -r-- 1.74868984 .note.ABI_tag  NOTE     alloc,
[0m[92m+3   0x00000188   0x38 0x08048188   0x38 -r-- 1.23442903 .hash          HASH     alloc,
[0m[92m+4   0x000001c0   0x20 0x080481c0   0x20 -r-- 1.99254169 .gnu.hash      GNU_HASH alloc,
[0m[92m+5   0x000001e0   0x90 0x080481e0   0x90 -r-- 1.56755604 .dynsym        DYNSYM   alloc,
[0m[92m+6   0x00000270   0x5f 0x08048270   0x5f -r-- 4.38707564 .dynstr        STRTAB   alloc,
[0m[92m+7   0x000002d0   0x12 0x080482d0   0x12 -r-- 1.19417373 .gnu.version   VERSYM   alloc,
[0m[92m+8   0x000002e4   0x20 0x080482e4   0x20 -r-- 1.66055053 .gnu.version_r VERNEED  alloc,
[0m[92m+9   0x00000304    0x8 0x08048304    0x8 -r-- 2.75000000 .rel.dyn       REL      alloc,
[0m[92m+10  0x0000030c   0x30 0x0804830c   0x30 -r-- 2.94082791 .rel.plt       REL      alloc,
[0m[92m+11  0x0000033c   0x17 0x0804833c   0x17 -r-x 3.46241535 .init          PROGBITS alloc,execute,
[0m[92m+12  0x00000354   0x70 0x08048354   0x70 -r-x 3.51876869 .plt           PROGBITS alloc,execute,
[0m[92m+13  0x000003d0  0x274 0x080483d0  0x274 -r-x 5.76534324 .text          PROGBITS alloc,execute,
[0m[92m+14  0x00000644   0x1a 0x08048644   0x1a -r-x 3.79621760 .fini          PROGBITS alloc,execute,
[0m[92m+15  0x00000660   0x55 0x08048660   0x55 -r-- 4.59175306 .rodata        PROGBITS alloc,
[0m[92m+16  0x000006b8    0x4 0x080486b8    0x4 -r-- 0.00000000 .eh_frame      PROGBITS alloc,
[0m[92m+17  0x00000f0c    0x8 0x08049f0c    0x8 -rw- 1.00000000 .ctors         PROGBITS write,alloc,
[0m[92m+18  0x00000f14    0x8 0x08049f14    0x8 -rw- 1.00000000 .dtors         PROGBITS write,alloc,
[0m[92m+19  0x00000f1c    0x4 0x08049f1c    0x4 -rw- 0.00000000 .jcr           PROGBITS write,alloc,
[0m[92m+20  0x00000f20   0xd0 0x08049f20   0xd0 -rw- 2.82161069 .dynamic       DYNAMIC  write,alloc,
[0m[92m+21  0x00000ff0    0x4 0x08049ff0    0x4 -rw- 0.00000000 .got           PROGBITS write,alloc,
[0m[92m+22  0x00000ff4   0x24 0x08049ff4   0x24 -rw- 2.98068211 .got.plt       PROGBITS write,alloc,
[0m[92m+23  0x00001018    0xc 0x0804a018    0xc -rw- 1.58496250 .data          PROGBITS write,alloc,
[0m[92m+24  0x00001024    0x0 0x0804a024    0x4 -rw- 0.00000000 .bss           NOBITS   write,alloc,
[0m 25  0x00001024  0x1b9 0x00000000  0x1b9 ---- 4.50015849 .comment       PROGBITS 
 26  0x000011dd   0xdb 0x00000000   0xdb ---- 4.21638420 .shstrtab      STRTAB   
 27  0x00001740  0x460 0x00000000  0x460 ---- 3.06854806 .symtab        SYMTAB   



[A[2K[31m[XX][0m db/cmd/cmd_i [33miSj[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iSj~{} bins/pe/hello-mingw32
-- stdout
[36m@@ -4,13 +4,6 @@[0m
     "size": 2560,
     "vsize": 4096,
     "perm": "-r-x",
[91m-    "flags": [
[0m[91m-      "CNT_CODE",
[0m[91m-      "CNT_INITIALIZED_DATA",
[0m[91m-      "ALIGN_16BYTES",
[0m[91m-      "MEM_EXECUTE",
[0m[91m-      "MEM_READ"
[0m[91m-    ],
[0m     "paddr": 1024,
     "vaddr": 4198400
   },
[36m@@ -19,12 +12,6 @@[0m
     "size": 512,
     "vsize": 4096,
     "perm": "-rw-",
[91m-    "flags": [
[0m[91m-      "CNT_INITIALIZED_DATA",
[0m[91m-      "ALIGN_4BYTES",
[0m[91m-      "MEM_READ",
[0m[91m-      "MEM_WRITE"
[0m[91m-    ],
[0m     "paddr": 3584,
     "vaddr": 4202496
   },
[36m@@ -33,11 +20,6 @@[0m
     "size": 512,
     "vsize": 4096,
     "perm": "-r--",
[91m-    "flags": [
[0m[91m-      "CNT_INITIALIZED_DATA",
[0m[91m-      "ALIGN_4BYTES",
[0m[91m-      "MEM_READ"
[0m[91m-    ],
[0m     "paddr": 4096,
     "vaddr": 4206592
   },
[36m@@ -46,12 +28,6 @@[0m
     "size": 0,
     "vsize": 4096,
     "perm": "-rw-",
[91m-    "flags": [
[0m[91m-      "CNT_UNINITIALIZED",
[0m[91m-      "ALIGN_8BYTES",
[0m[91m-      "MEM_READ",
[0m[91m-      "MEM_WRITE"
[0m[91m-    ],
[0m     "paddr": 0,
     "vaddr": 4210688
   },
[36m@@ -60,12 +36,6 @@[0m
     "size": 1024,
     "vsize": 4096,
     "perm": "-rw-",
[91m-    "flags": [
[0m[91m-      "CNT_INITIALIZED_DATA",
[0m[91m-      "ALIGN_4BYTES",
[0m[91m-      "MEM_READ",
[0m[91m-      "MEM_WRITE"
[0m[91m-    ],
[0m     "paddr": 4608,
     "vaddr": 4214784
   }



[A[2K[31m[XX][0m db/cmd/cmd_i [33miS (file x86_64)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/elf/analysis/hello-linux-x86_64
-- stdout
[36m@@ -3,32 +3,32 @@[0m
 nth paddr        size vaddr       vsize perm name               type       flags
 --------------------------------------------------------------------------------
 0   0x00000000    0x0 0x00000000    0x0 ----                    NULL       
[91m-1   0x00000200   0x1a 0x00400200   0x1a -r-- .interp            PROGBITS   alloc
[0m[91m-2   0x0000021c   0x20 0x0040021c   0x20 -r-- .note.ABI-tag      NOTE       alloc
[0m[91m-3   0x0000023c   0x24 0x0040023c   0x24 -r-- .note.gnu.build-id NOTE       alloc
[0m[91m-4   0x00000260   0x1c 0x00400260   0x1c -r-- .gnu.hash          GNU_HASH   alloc
[0m[91m-5   0x00000280   0x60 0x00400280   0x60 -r-- .dynsym            DYNSYM     alloc
[0m[91m-6   0x000002e0   0x3d 0x004002e0   0x3d -r-- .dynstr            STRTAB     alloc
[0m[91m-7   0x0000031e    0x8 0x0040031e    0x8 -r-- .gnu.version       VERSYM     alloc
[0m[91m-8   0x00000328   0x20 0x00400328   0x20 -r-- .gnu.version_r     VERNEED    alloc
[0m[91m-9   0x00000348   0x18 0x00400348   0x18 -r-- .rela.dyn          RELA       alloc
[0m[91m-10  0x00000360   0x48 0x00400360   0x48 -r-- .rela.plt          RELA       alloc
[0m[91m-11  0x000003a8   0x1a 0x004003a8   0x1a -r-x .init              PROGBITS   alloc,execute
[0m[91m-12  0x000003d0   0x40 0x004003d0   0x40 -r-x .plt               PROGBITS   alloc,execute
[0m[91m-13  0x00000410  0x1a4 0x00400410  0x1a4 -r-x .text              PROGBITS   alloc,execute
[0m[91m-14  0x000005b4    0x9 0x004005b4    0x9 -r-x .fini              PROGBITS   alloc,execute
[0m[91m-15  0x000005c0   0x10 0x004005c0   0x10 -r-- .rodata            PROGBITS   alloc
[0m[91m-16  0x000005d0   0x34 0x004005d0   0x34 -r-- .eh_frame_hdr      PROGBITS   alloc
[0m[91m-17  0x00000608   0xd4 0x00400608   0xd4 -r-- .eh_frame          PROGBITS   alloc
[0m[91m-18  0x000006e0    0x8 0x006006e0    0x8 -rw- .init_array        INIT_ARRAY write,alloc
[0m[91m-19  0x000006e8    0x8 0x006006e8    0x8 -rw- .fini_array        FINI_ARRAY write,alloc
[0m[91m-20  0x000006f0    0x8 0x006006f0    0x8 -rw- .jcr               PROGBITS   write,alloc
[0m[91m-21  0x000006f8  0x1d0 0x006006f8  0x1d0 -rw- .dynamic           DYNAMIC    write,alloc
[0m[91m-22  0x000008c8    0x8 0x006008c8    0x8 -rw- .got               PROGBITS   write,alloc
[0m[91m-23  0x000008d0   0x30 0x006008d0   0x30 -rw- .got.plt           PROGBITS   write,alloc
[0m[91m-24  0x00000900   0x10 0x00600900   0x10 -rw- .data              PROGBITS   write,alloc
[0m[91m-25  0x00000910    0x0 0x00600910    0x8 -rw- .bss               NOBITS     write,alloc
[0m[91m-26  0x00000910   0x11 0x00000000   0x11 ---- .comment           PROGBITS   merge,strings
[0m[92m+1   0x00000200   0x1a 0x00400200   0x1a -r-- .interp            PROGBITS   alloc,
[0m[92m+2   0x0000021c   0x20 0x0040021c   0x20 -r-- .note.ABI_tag      NOTE       alloc,
[0m[92m+3   0x0000023c   0x24 0x0040023c   0x24 -r-- .note.gnu.build_id NOTE       alloc,
[0m[92m+4   0x00000260   0x1c 0x00400260   0x1c -r-- .gnu.hash          GNU_HASH   alloc,
[0m[92m+5   0x00000280   0x60 0x00400280   0x60 -r-- .dynsym            DYNSYM     alloc,
[0m[92m+6   0x000002e0   0x3d 0x004002e0   0x3d -r-- .dynstr            STRTAB     alloc,
[0m[92m+7   0x0000031e    0x8 0x0040031e    0x8 -r-- .gnu.version       VERSYM     alloc,
[0m[92m+8   0x00000328   0x20 0x00400328   0x20 -r-- .gnu.version_r     VERNEED    alloc,
[0m[92m+9   0x00000348   0x18 0x00400348   0x18 -r-- .rela.dyn          RELA       alloc,
[0m[92m+10  0x00000360   0x48 0x00400360   0x48 -r-- .rela.plt          RELA       alloc,
[0m[92m+11  0x000003a8   0x1a 0x004003a8   0x1a -r-x .init              PROGBITS   alloc,execute,
[0m[92m+12  0x000003d0   0x40 0x004003d0   0x40 -r-x .plt               PROGBITS   alloc,execute,
[0m[92m+13  0x00000410  0x1a4 0x00400410  0x1a4 -r-x .text              PROGBITS   alloc,execute,
[0m[92m+14  0x000005b4    0x9 0x004005b4    0x9 -r-x .fini              PROGBITS   alloc,execute,
[0m[92m+15  0x000005c0   0x10 0x004005c0   0x10 -r-- .rodata            PROGBITS   alloc,
[0m[92m+16  0x000005d0   0x34 0x004005d0   0x34 -r-- .eh_frame_hdr      PROGBITS   alloc,
[0m[92m+17  0x00000608   0xd4 0x00400608   0xd4 -r-- .eh_frame          PROGBITS   alloc,
[0m[92m+18  0x000006e0    0x8 0x006006e0    0x8 -rw- .init_array        INIT_ARRAY write,alloc,
[0m[92m+19  0x000006e8    0x8 0x006006e8    0x8 -rw- .fini_array        FINI_ARRAY write,alloc,
[0m[92m+20  0x000006f0    0x8 0x006006f0    0x8 -rw- .jcr               PROGBITS   write,alloc,
[0m[92m+21  0x000006f8  0x1d0 0x006006f8  0x1d0 -rw- .dynamic           DYNAMIC    write,alloc,
[0m[92m+22  0x000008c8    0x8 0x006008c8    0x8 -rw- .got               PROGBITS   write,alloc,
[0m[92m+23  0x000008d0   0x30 0x006008d0   0x30 -rw- .got.plt           PROGBITS   write,alloc,
[0m[92m+24  0x00000900   0x10 0x00600900   0x10 -rw- .data              PROGBITS   write,alloc,
[0m[92m+25  0x00000910    0x0 0x00600910    0x8 -rw- .bss               NOBITS     write,alloc,
[0m[92m+26  0x00000910   0x11 0x00000000   0x11 ---- .comment           PROGBITS   merge,strings,
[0m 27  0x00000921  0x108 0x00000000  0x108 ---- .shstrtab          STRTAB     
 28  0x000011b0  0x648 0x00000000  0x648 ---- .symtab            SYMTAB     
 29  0x000017f8  0x23e 0x00000000  0x23e ---- .strtab            STRTAB     



[A[2K[31m[XX][0m db/cmd/cmd_i [33miz (__cfstring)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '?e -- default --
iz
?e -- geq 12 --
e bin.minstr=12
iz
?e -- leq 13 --
e bin.maxstr=12
iz
' bins/mach0/hello-objc-osx
-- stdout
[36m@@ -25,10 +25,9 @@[0m
 --------------------------------------------------------------------
 0   0x00000d73  0x100000d73 12  13   2.__TEXT.__cstring ascii Hello World 
 1   0x00000db9  0x100000db9 13  14   2.__TEXT.__cstring ascii v24@0:8i16i20
[91m-0   0x100001078 0x100001078 12  13                      ascii cstr.Hello World 
[0m[92m+4   0x100001078 0x100001078 12  13                      ascii cstr.
[0m -- leq 13 --
 [Strings]
[91m-nth paddr       vaddr       len size section            type  string
[0m[91m---------------------------------------------------------------------
[0m[91m-0   0x00000d73  0x100000d73 12  13   2.__TEXT.__cstring ascii Hello World 
[0m[91m-0   0x100001078 0x100001078 12  13                      ascii cstr.Hello World 
[0m[92m+nth paddr      vaddr       len size section            type  string
[0m[92m+-------------------------------------------------------------------
[0m[92m+0   0x00000d73 0x100000d73 12  13   2.__TEXT.__cstring ascii Hello World 
[0m


[A[2K[31m[XX][0m db/cmd/cmd_i [33miSq[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iSq bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -1,7 +1,7 @@[0m
 0x0 0x0 ---- 
 0x8048134 0x8048147 -r-- .interp
[91m-0x8048148 0x8048168 -r-- .note.ABI-tag
[0m[91m-0x8048168 0x804818c -r-- .note.gnu.build-id
[0m[92m+0x8048148 0x8048168 -r-- .note.ABI_tag
[0m[92m+0x8048168 0x804818c -r-- .note.gnu.build_id
[0m 0x804818c 0x80481ac -r-- .gnu.hash
 0x80481ac 0x80481fc -r-- .dynsym
 0x80481fc 0x8048246 -r-- .dynstr



[A[2K[31m[XX][0m db/cmd/cmd_i [33miSj[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iSj bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -1 +1 @@[0m
[91m-[{"name":"","size":0,"vsize":0,"perm":"----","type":"NULL","flags":[],"paddr":0,"vaddr":0},{"name":".interp","size":19,"vsize":19,"perm":"-r--","type":"PROGBITS","flags":["alloc"],"paddr":308,"vaddr":134512948},{"name":".note.ABI-tag","size":32,"vsize":32,"perm":"-r--","type":"NOTE","flags":["alloc"],"paddr":328,"vaddr":134512968},{"name":".note.gnu.build-id","size":36,"vsize":36,"perm":"-r--","type":"NOTE","flags":["alloc"],"paddr":360,"vaddr":134513000},{"name":".gnu.hash","size":32,"vsize":32,"perm":"-r--","type":"GNU_HASH","flags":["alloc"],"paddr":396,"vaddr":134513036},{"name":".dynsym","size":80,"vsize":80,"perm":"-r--","type":"DYNSYM","flags":["alloc"],"paddr":428,"vaddr":134513068},{"name":".dynstr","size":74,"vsize":74,"perm":"-r--","type":"STRTAB","flags":["alloc"],"paddr":508,"vaddr":134513148},{"name":".gnu.version","size":10,"vsize":10,"perm":"-r--","type":"VERSYM","flags":["alloc"],"paddr":582,"vaddr":134513222},{"name":".gnu.version_r","size":32,"vsize":32,"perm":"-r--","type":"VERNEED","flags":["alloc"],"paddr":592,"vaddr":134513232},{"name":".rel.dyn","size":8,"vsize":8,"perm":"-r--","type":"REL","flags":["alloc"],"paddr":624,"vaddr":134513264},{"name":".rel.plt","size":24,"vsize":24,"perm":"-r--","type":"REL","flags":["alloc"],"paddr":632,"vaddr":134513272},{"name":".init","size":35,"vsize":35,"perm":"-r-x","type":"PROGBITS","flags":["alloc","execute"],"paddr":656,"vaddr":134513296},{"name":".plt","size":64,"vsize":64,"perm":"-r-x","type":"PROGBITS","flags":["alloc","execute"],"paddr":704,"vaddr":134513344},{"name":".text","size":404,"vsize":404,"perm":"-r-x","type":"PROGBITS","flags":["alloc","execute"],"paddr":768,"vaddr":134513408},{"name":".fini","size":20,"vsize":20,"perm":"-r-x","type":"PROGBITS","flags":["alloc","execute"],"paddr":1172,"vaddr":134513812},{"name":".rodata","size":21,"vsize":21,"perm":"-r--","type":"PROGBITS","flags":["alloc"],"paddr":1192,"vaddr":134513832},{"name":".eh_frame_hdr","size":44,"vsize":44,"perm":"-r--","type":"PROGBITS","flags":["alloc"],"paddr":1216,"vaddr":134513856},{"name":".eh_frame","size":176,"vsize":176,"perm":"-r--","type":"PROGBITS","flags":["alloc"],"paddr":1260,"vaddr":134513900},{"name":".init_array","size":4,"vsize":4,"perm":"-rw-","type":"INIT_ARRAY","flags":["write","alloc"],"paddr":1436,"vaddr":134518172},{"name":".fini_array","size":4,"vsize":4,"perm":"-rw-","type":"FINI_ARRAY","flags":["write","alloc"],"paddr":1440,"vaddr":134518176},{"name":".jcr","size":4,"vsize":4,"perm":"-rw-","type":"PROGBITS","flags":["write","alloc"],"paddr":1444,"vaddr":134518180},{"name":".dynamic","size":232,"vsize":232,"perm":"-rw-","type":"DYNAMIC","flags":["write","alloc"],"paddr":1448,"vaddr":134518184},{"name":".got","size":4,"vsize":4,"perm":"-rw-","type":"PROGBITS","flags":["write","alloc"],"paddr":1680,"vaddr":134518416},{"name":".got.plt","size":24,"vsize":24,"perm":"-rw-","type":"PROGBITS","flags":["write","alloc"],"paddr":1684,"vaddr":134518420},{"name":".data","size":8,"vsize":8,"perm":"-rw-","type":"PROGBITS","flags":["write","alloc"],"paddr":1708,"vaddr":134518444},{"name":".bss","size":0,"vsize":4,"perm":"-rw-","type":"NOBITS","flags":["write","alloc"],"paddr":1716,"vaddr":134518452},{"name":".comment","size":17,"vsize":17,"perm":"----","type":"PROGBITS","flags":["merge","strings"],"paddr":1716,"vaddr":0},{"name":".shstrtab","size":262,"vsize":262,"perm":"----","type":"STRTAB","flags":[],"paddr":1733,"vaddr":0},{"name":".symtab","size":1104,"vsize":1104,"perm":"----","type":"SYMTAB","flags":[],"paddr":3196,"vaddr":0},{"name":".strtab","size":599,"vsize":599,"perm":"----","type":"STRTAB","flags":[],"paddr":4300,"vaddr":0}]
[0m[92m+[{"name":"","size":0,"vsize":0,"perm":"----","type":"NULL","flags":[],"paddr":0,"vaddr":0},{"name":".interp","size":19,"vsize":19,"perm":"-r--","type":"PROGBITS","flags":["alloc"],"paddr":308,"vaddr":134512948},{"name":".note.ABI_tag","size":32,"vsize":32,"perm":"-r--","type":"NOTE","flags":["alloc"],"paddr":328,"vaddr":134512968},{"name":".note.gnu.build_id","size":36,"vsize":36,"perm":"-r--","type":"NOTE","flags":["alloc"],"paddr":360,"vaddr":134513000},{"name":".gnu.hash","size":32,"vsize":32,"perm":"-r--","type":"GNU_HASH","flags":["alloc"],"paddr":396,"vaddr":134513036},{"name":".dynsym","size":80,"vsize":80,"perm":"-r--","type":"DYNSYM","flags":["alloc"],"paddr":428,"vaddr":134513068},{"name":".dynstr","size":74,"vsize":74,"perm":"-r--","type":"STRTAB","flags":["alloc"],"paddr":508,"vaddr":134513148},{"name":".gnu.version","size":10,"vsize":10,"perm":"-r--","type":"VERSYM","flags":["alloc"],"paddr":582,"vaddr":134513222},{"name":".gnu.version_r","size":32,"vsize":32,"perm":"-r--","type":"VERNEED","flags":["alloc"],"paddr":592,"vaddr":134513232},{"name":".rel.dyn","size":8,"vsize":8,"perm":"-r--","type":"REL","flags":["alloc"],"paddr":624,"vaddr":134513264},{"name":".rel.plt","size":24,"vsize":24,"perm":"-r--","type":"REL","flags":["alloc"],"paddr":632,"vaddr":134513272},{"name":".init","size":35,"vsize":35,"perm":"-r-x","type":"PROGBITS","flags":["alloc","execute"],"paddr":656,"vaddr":134513296},{"name":".plt","size":64,"vsize":64,"perm":"-r-x","type":"PROGBITS","flags":["alloc","execute"],"paddr":704,"vaddr":134513344},{"name":".text","size":404,"vsize":404,"perm":"-r-x","type":"PROGBITS","flags":["alloc","execute"],"paddr":768,"vaddr":134513408},{"name":".fini","size":20,"vsize":20,"perm":"-r-x","type":"PROGBITS","flags":["alloc","execute"],"paddr":1172,"vaddr":134513812},{"name":".rodata","size":21,"vsize":21,"perm":"-r--","type":"PROGBITS","flags":["alloc"],"paddr":1192,"vaddr":134513832},{"name":".eh_frame_hdr","size":44,"vsize":44,"perm":"-r--","type":"PROGBITS","flags":["alloc"],"paddr":1216,"vaddr":134513856},{"name":".eh_frame","size":176,"vsize":176,"perm":"-r--","type":"PROGBITS","flags":["alloc"],"paddr":1260,"vaddr":134513900},{"name":".init_array","size":4,"vsize":4,"perm":"-rw-","type":"INIT_ARRAY","flags":["write","alloc"],"paddr":1436,"vaddr":134518172},{"name":".fini_array","size":4,"vsize":4,"perm":"-rw-","type":"FINI_ARRAY","flags":["write","alloc"],"paddr":1440,"vaddr":134518176},{"name":".jcr","size":4,"vsize":4,"perm":"-rw-","type":"PROGBITS","flags":["write","alloc"],"paddr":1444,"vaddr":134518180},{"name":".dynamic","size":232,"vsize":232,"perm":"-rw-","type":"DYNAMIC","flags":["write","alloc"],"paddr":1448,"vaddr":134518184},{"name":".got","size":4,"vsize":4,"perm":"-rw-","type":"PROGBITS","flags":["write","alloc"],"paddr":1680,"vaddr":134518416},{"name":".got.plt","size":24,"vsize":24,"perm":"-rw-","type":"PROGBITS","flags":["write","alloc"],"paddr":1684,"vaddr":134518420},{"name":".data","size":8,"vsize":8,"perm":"-rw-","type":"PROGBITS","flags":["write","alloc"],"paddr":1708,"vaddr":134518444},{"name":".bss","size":0,"vsize":4,"perm":"-rw-","type":"NOBITS","flags":["write","alloc"],"paddr":1716,"vaddr":134518452},{"name":".comment","size":17,"vsize":17,"perm":"----","type":"PROGBITS","flags":["merge","strings"],"paddr":1716,"vaddr":0},{"name":".shstrtab","size":262,"vsize":262,"perm":"----","type":"STRTAB","flags":[],"paddr":1733,"vaddr":0},{"name":".symtab","size":1104,"vsize":1104,"perm":"----","type":"SYMTAB","flags":[],"paddr":3196,"vaddr":0},{"name":".strtab","size":599,"vsize":599,"perm":"----","type":"STRTAB","flags":[],"paddr":4300,"vaddr":0}]
[0m


[A[2K[31m[XX][0m db/cmd/cmd_i [33miS (file x86)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -3,32 +3,32 @@[0m
 nth paddr        size vaddr       vsize perm name               type       flags
 --------------------------------------------------------------------------------
 0   0x00000000    0x0 0x00000000    0x0 ----                    NULL       
[91m-1   0x00000134   0x13 0x08048134   0x13 -r-- .interp            PROGBITS   alloc
[0m[91m-2   0x00000148   0x20 0x08048148   0x20 -r-- .note.ABI-tag      NOTE       alloc
[0m[91m-3   0x00000168   0x24 0x08048168   0x24 -r-- .note.gnu.build-id NOTE       alloc
[0m[91m-4   0x0000018c   0x20 0x0804818c   0x20 -r-- .gnu.hash          GNU_HASH   alloc
[0m[91m-5   0x000001ac   0x50 0x080481ac   0x50 -r-- .dynsym            DYNSYM     alloc
[0m[91m-6   0x000001fc   0x4a 0x080481fc   0x4a -r-- .dynstr            STRTAB     alloc
[0m[91m-7   0x00000246    0xa 0x08048246    0xa -r-- .gnu.version       VERSYM     alloc
[0m[91m-8   0x00000250   0x20 0x08048250   0x20 -r-- .gnu.version_r     VERNEED    alloc
[0m[91m-9   0x00000270    0x8 0x08048270    0x8 -r-- .rel.dyn           REL        alloc
[0m[91m-10  0x00000278   0x18 0x08048278   0x18 -r-- .rel.plt           REL        alloc
[0m[91m-11  0x00000290   0x23 0x08048290   0x23 -r-x .init              PROGBITS   alloc,execute
[0m[91m-12  0x000002c0   0x40 0x080482c0   0x40 -r-x .plt               PROGBITS   alloc,execute
[0m[91m-13  0x00000300  0x194 0x08048300  0x194 -r-x .text              PROGBITS   alloc,execute
[0m[91m-14  0x00000494   0x14 0x08048494   0x14 -r-x .fini              PROGBITS   alloc,execute
[0m[91m-15  0x000004a8   0x15 0x080484a8   0x15 -r-- .rodata            PROGBITS   alloc
[0m[91m-16  0x000004c0   0x2c 0x080484c0   0x2c -r-- .eh_frame_hdr      PROGBITS   alloc
[0m[91m-17  0x000004ec   0xb0 0x080484ec   0xb0 -r-- .eh_frame          PROGBITS   alloc
[0m[91m-18  0x0000059c    0x4 0x0804959c    0x4 -rw- .init_array        INIT_ARRAY write,alloc
[0m[91m-19  0x000005a0    0x4 0x080495a0    0x4 -rw- .fini_array        FINI_ARRAY write,alloc
[0m[91m-20  0x000005a4    0x4 0x080495a4    0x4 -rw- .jcr               PROGBITS   write,alloc
[0m[91m-21  0x000005a8   0xe8 0x080495a8   0xe8 -rw- .dynamic           DYNAMIC    write,alloc
[0m[91m-22  0x00000690    0x4 0x08049690    0x4 -rw- .got               PROGBITS   write,alloc
[0m[91m-23  0x00000694   0x18 0x08049694   0x18 -rw- .got.plt           PROGBITS   write,alloc
[0m[91m-24  0x000006ac    0x8 0x080496ac    0x8 -rw- .data              PROGBITS   write,alloc
[0m[91m-25  0x000006b4    0x0 0x080496b4    0x4 -rw- .bss               NOBITS     write,alloc
[0m[91m-26  0x000006b4   0x11 0x00000000   0x11 ---- .comment           PROGBITS   merge,strings
[0m[92m+1   0x00000134   0x13 0x08048134   0x13 -r-- .interp            PROGBITS   alloc,
[0m[92m+2   0x00000148   0x20 0x08048148   0x20 -r-- .note.ABI_tag      NOTE       alloc,
[0m[92m+3   0x00000168   0x24 0x08048168   0x24 -r-- .note.gnu.build_id NOTE       alloc,
[0m[92m+4   0x0000018c   0x20 0x0804818c   0x20 -r-- .gnu.hash          GNU_HASH   alloc,
[0m[92m+5   0x000001ac   0x50 0x080481ac   0x50 -r-- .dynsym            DYNSYM     alloc,
[0m[92m+6   0x000001fc   0x4a 0x080481fc   0x4a -r-- .dynstr            STRTAB     alloc,
[0m[92m+7   0x00000246    0xa 0x08048246    0xa -r-- .gnu.version       VERSYM     alloc,
[0m[92m+8   0x00000250   0x20 0x08048250   0x20 -r-- .gnu.version_r     VERNEED    alloc,
[0m[92m+9   0x00000270    0x8 0x08048270    0x8 -r-- .rel.dyn           REL        alloc,
[0m[92m+10  0x00000278   0x18 0x08048278   0x18 -r-- .rel.plt           REL        alloc,
[0m[92m+11  0x00000290   0x23 0x08048290   0x23 -r-x .init              PROGBITS   alloc,execute,
[0m[92m+12  0x000002c0   0x40 0x080482c0   0x40 -r-x .plt               PROGBITS   alloc,execute,
[0m[92m+13  0x00000300  0x194 0x08048300  0x194 -r-x .text              PROGBITS   alloc,execute,
[0m[92m+14  0x00000494   0x14 0x08048494   0x14 -r-x .fini              PROGBITS   alloc,execute,
[0m[92m+15  0x000004a8   0x15 0x080484a8   0x15 -r-- .rodata            PROGBITS   alloc,
[0m[92m+16  0x000004c0   0x2c 0x080484c0   0x2c -r-- .eh_frame_hdr      PROGBITS   alloc,
[0m[92m+17  0x000004ec   0xb0 0x080484ec   0xb0 -r-- .eh_frame          PROGBITS   alloc,
[0m[92m+18  0x0000059c    0x4 0x0804959c    0x4 -rw- .init_array        INIT_ARRAY write,alloc,
[0m[92m+19  0x000005a0    0x4 0x080495a0    0x4 -rw- .fini_array        FINI_ARRAY write,alloc,
[0m[92m+20  0x000005a4    0x4 0x080495a4    0x4 -rw- .jcr               PROGBITS   write,alloc,
[0m[92m+21  0x000005a8   0xe8 0x080495a8   0xe8 -rw- .dynamic           DYNAMIC    write,alloc,
[0m[92m+22  0x00000690    0x4 0x08049690    0x4 -rw- .got               PROGBITS   write,alloc,
[0m[92m+23  0x00000694   0x18 0x08049694   0x18 -rw- .got.plt           PROGBITS   write,alloc,
[0m[92m+24  0x000006ac    0x8 0x080496ac    0x8 -rw- .data              PROGBITS   write,alloc,
[0m[92m+25  0x000006b4    0x0 0x080496b4    0x4 -rw- .bss               NOBITS     write,alloc,
[0m[92m+26  0x000006b4   0x11 0x00000000   0x11 ---- .comment           PROGBITS   merge,strings,
[0m 27  0x000006c5  0x106 0x00000000  0x106 ---- .shstrtab          STRTAB     
 28  0x00000c7c  0x450 0x00000000  0x450 ---- .symtab            SYMTAB     
 29  0x000010cc  0x257 0x00000000  0x257 ---- .strtab            STRTAB     



[A[2K[31m[XX][0m db/cmd/cmd_i [33mic*[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc ic* bins/elf/libmagic.so
-- stdout
[36m@@ -11,7 +11,7 @@[0m
 "f method._JNIEnv.CallStaticObjectMethod(_jclass*,__jmethodID*,_...) = 0x60ea"
 "f method._JNIEnv.CallStaticIntMethod(_jclass*,__jmethodID*,_...) = 0x695e"
 "f method._JNIEnv.CallStaticVoidMethod(_jclass*,__jmethodID*,_...) = 0x697c"
[91m-td "struct _JNIEnv { char empty[0];};"
[0m[92m+"td struct _JNIEnv { char empty[0];};"
[0m "f class.SystemClassLoaderInjector = 0x699c"
 "f method.SystemClassLoaderInjector.inject(_JNIEnv*,__jobject*,__jstring*,__jstring*) = 0x74f8"
 "f method.SystemClassLoaderInjector.findBaseDexClassloader(_JNIEnv*,__jobject*) = 0x699c"
[36m@@ -24,38 +24,38 @@[0m
 "f method.SystemClassLoaderInjector.appendArray(_JNIEnv*,__jobject*,__jobject*) = 0x6e5c"
 "f method.SystemClassLoaderInjector.injectInAliyunOs(_JNIEnv*,__jobject*,__jstring*,__jstring*) = 0x6f68"
 "f method.SystemClassLoaderInjector.injectBelowApiLevel14(_JNIEnv*,__jobject*,__jstring*,__jstring*) = 0x720c"
[91m-td "struct SystemClassLoaderInjector { char empty[0];};"
[0m[92m+"td struct SystemClassLoaderInjector { char empty[0];};"
[0m "f class.std = 0x886c"
 "f method.std.terminate() = 0x9470"
 "f method.std.uncaught_exception() = 0x886c"
 "f method.std.unexpected() = 0x9494"
 "f method.std.set_terminate(void_(*)()) = 0x94ac"
 "f method.std.set_unexpected(void_(*)()) = 0x94c8"
[91m-td "struct std { char empty[0];};"
[0m[92m+"td struct std { char empty[0];};"
[0m "f class.std::exception = 0x8884"
 "f method.std::exception.~exception() = 0x8884"
 "f method.std::exception.what()_const = 0x88f4"
[91m-td "struct std::exception { char empty[0];};"
[0m[92m+"td struct std::exception { char empty[0];};"
[0m "f class.std::bad_exception = 0x889c"
 "f method.std::bad_exception.~bad_exception() = 0x889c"
 "f method.std::bad_exception.what()_const = 0x8904"
[91m-td "struct std::bad_exception { char empty[0];};"
[0m[92m+"td struct std::bad_exception { char empty[0];};"
[0m "f class.cxxabiv1::__forced_unwind = 0x88c4"
 "f method.__cxxabiv1::__forced_unwind.~__forced_unwind() = 0x88c4"
[91m-td "struct __cxxabiv1::__forced_unwind { char empty[0];};"
[0m[92m+"td struct __cxxabiv1::__forced_unwind { char empty[0];};"
[0m "f class.cxxabiv1::__foreign_exception = 0x88dc"
 "f method.__cxxabiv1::__foreign_exception.~__foreign_exception() = 0x88dc"
[91m-td "struct __cxxabiv1::__foreign_exception { char empty[0];};"
[0m[92m+"td struct __cxxabiv1::__foreign_exception { char empty[0];};"
[0m "f class.eh_globals_init = 0x8984"
 "f method.__eh_globals_init.~__eh_globals_init() = 0x8984"
[91m-td "struct __eh_globals_init { char empty[0];};"
[0m[92m+"td struct __eh_globals_init { char empty[0];};"
[0m "f class.cxxabiv1 = 0x943c"
 "f method.__cxxabiv1.__terminate(void_(*)()) = 0x943c"
 "f method.__cxxabiv1.__unexpected(void_(*)()) = 0x9488"
[91m-td "struct __cxxabiv1 { char empty[0];};"
[0m[92m+"td struct __cxxabiv1 { char empty[0];};"
[0m "f class.cxxabiv1::__fundamental_type_info = 0x94e4"
 "f method.__cxxabiv1::__fundamental_type_info.~__fundamental_type_info() = 0x94e4"
[91m-td "struct __cxxabiv1::__fundamental_type_info { char empty[0];};"
[0m[92m+"td struct __cxxabiv1::__fundamental_type_info { char empty[0];};"
[0m "f class.std::type_info = 0x97bc"
 "f method.std::type_info.~type_info() = 0x97bc"
 "f method.std::type_info.__is_pointer_p()_const = 0x97d4"
[36m@@ -63,23 +63,23 @@[0m
 "f method.std::type_info.__do_catch(std::type_info_const*,_void**,_unsigned_int)_const = 0x9854"
 "f method.std::type_info.__do_upcast(__cxxabiv1::__class_type_info_const*,_void**)_const = 0x97e4"
 "f method.std::type_info.operator==(std::type_info_const&)_const = 0x9808"
[91m-td "struct std::type_info { char empty[0];};"
[0m[92m+"td struct std::type_info { char empty[0];};"
[0m "f class.cxxabiv1::__pointer_type_info = 0x9528"
 "f method.__cxxabiv1::__pointer_type_info.__is_pointer_p()_const = 0x9528"
 "f method.__cxxabiv1::__pointer_type_info.~__pointer_type_info() = 0x9530"
 "f method.__cxxabiv1::__pointer_type_info.__pointer_catch(__cxxabiv1::__pbase_type_info_const*,_void**,_unsigned_int)_const = 0x9574"
[91m-td "struct __cxxabiv1::__pointer_type_info { char empty[0];};"
[0m[92m+"td struct __cxxabiv1::__pointer_type_info { char empty[0];};"
[0m "f class.cxxabiv1::__pbase_type_info = 0x9dd0"
 "f method.__cxxabiv1::__pbase_type_info.~__pbase_type_info() = 0x9df0"
 "f method.__cxxabiv1::__pbase_type_info.__do_catch(std::type_info_const*,_void**,_unsigned_int)_const = 0x9e34"
 "f method.__cxxabiv1::__pbase_type_info.__pointer_catch(__cxxabiv1::__pbase_type_info_const*,_void**,_unsigned_int)_const = 0x9dd0"
[91m-td "struct __cxxabiv1::__pbase_type_info { char empty[0];};"
[0m[92m+"td struct __cxxabiv1::__pbase_type_info { char empty[0];};"
[0m "f class.cxxabiv1::__si_class_type_info = 0x95f4"
 "f method.__cxxabiv1::__si_class_type_info.~__si_class_type_info() = 0x95f4"
 "f method.__cxxabiv1::__si_class_type_info.__do_find_public_src(int,_void_const*,___cxxabiv1::__class_type_info_const*,_void_const*)_const = 0x9638"
 "f method.__cxxabiv1::__si_class_type_info.__do_dyncast(int,___cxxabiv1::__class_type_info::__sub_kind,___cxxabiv1::__class_type_info_const*,_void_const*,___cxxabiv1::__class_type_info_const*,_void_const*,___cxxabiv1::__class_type_info::__dyncast_result&)_const = 0x969c"
 "f method.__cxxabiv1::__si_class_type_info.__do_upcast(__cxxabiv1::__class_type_info_const*,_void_const*,___cxxabiv1::__class_type_info::__upcast_result&)_const = 0x977c"
[91m-td "struct __cxxabiv1::__si_class_type_info { char empty[0];};"
[0m[92m+"td struct __cxxabiv1::__si_class_type_info { char empty[0];};"
[0m "f class.cxxabiv1::__class_type_info = 0x9868"
 "f method.__cxxabiv1::__class_type_info.~__class_type_info() = 0x98d8"
 "f method.__cxxabiv1::__class_type_info.__do_upcast(__cxxabiv1::__class_type_info_const*,_void_const*,___cxxabiv1::__class_type_info::__upcast_result&)_const = 0x991c"
[36m@@ -87,25 +87,25 @@[0m
 "f method.__cxxabiv1::__class_type_info.__do_upcast(__cxxabiv1::__class_type_info_const*,_void**)_const = 0x9868"
 "f method.__cxxabiv1::__class_type_info.__do_find_public_src(int,_void_const*,___cxxabiv1::__class_type_info_const*,_void_const*)_const = 0x98c4"
 "f method.__cxxabiv1::__class_type_info.__do_dyncast(int,___cxxabiv1::__class_type_info::__sub_kind,___cxxabiv1::__class_type_info_const*,_void_const*,___cxxabiv1::__class_type_info_const*,_void_const*,___cxxabiv1::__class_type_info::__dyncast_result&)_const = 0x998c"
[91m-td "struct __cxxabiv1::__class_type_info { char empty[0];};"
[0m[92m+"td struct __cxxabiv1::__class_type_info { char empty[0];};"
[0m "f class.gnu_cxx = 0x9ec4"
 "f method.__gnu_cxx.__verbose_terminate_handler() = 0x9ec4"
 "f method.__gnu_cxx.__throw_concurrence_lock_error() = 0x12780"
 "f method.__gnu_cxx.__throw_concurrence_unlock_error() = 0x127c8"
[91m-td "struct __gnu_cxx { char empty[0];};"
[0m[92m+"td struct __gnu_cxx { char empty[0];};"
[0m "f class.gnu_cxx::__concurrence_lock_error = 0x126b0"
 "f method.__gnu_cxx::__concurrence_lock_error.what()_const = 0x126b0"
 "f method.__gnu_cxx::__concurrence_lock_error.~__concurrence_lock_error() = 0x126f8"
[91m-td "struct __gnu_cxx::__concurrence_lock_error { char empty[0];};"
[0m[92m+"td struct __gnu_cxx::__concurrence_lock_error { char empty[0];};"
[0m "f class.gnu_cxx::__concurrence_unlock_error = 0x126c0"
 "f method.__gnu_cxx::__concurrence_unlock_error.what()_const = 0x126c0"
 "f method.__gnu_cxx::__concurrence_unlock_error.~__concurrence_unlock_error() = 0x126d0"
[91m-td "struct __gnu_cxx::__concurrence_unlock_error { char empty[0];};"
[0m[92m+"td struct __gnu_cxx::__concurrence_unlock_error { char empty[0];};"
[0m "f class.std::bad_cast = 0x12bc8"
 "f method.std::bad_cast.~bad_cast() = 0x12bd8"
 "f method.std::bad_cast.what()_const = 0x12bc8"
[91m-td "struct std::bad_cast { char empty[0];};"
[0m[92m+"td struct std::bad_cast { char empty[0];};"
[0m "f class.std::bad_typeid = 0x12c1c"
 "f method.std::bad_typeid.~bad_typeid() = 0x12c2c"
 "f method.std::bad_typeid.what()_const = 0x12c1c"
[91m-td "struct std::bad_typeid { char empty[0];};"
[0m[92m+"td struct std::bad_typeid { char empty[0];};"
[0m

-- stderr
Cannot determine entrypoint, using 0x00005fa8.
Warning: run rizin with -e io.cache=true to fix relocations in disassembly


[A[2K[31m[XX][0m db/cmd/cmd_i [33mi (all) (malloc)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -a x86 -b 64 -Qc 'i
ia
ia*
ii
ii*
ie
ie*
is
is*
iS
iS*
iz
iz*
' malloc://1025
-- stdout
[36m@@ -61,7 +61,3 @@[0m
 --------------------------------------
 
 fs sections
[91m-[Strings]
[0m[91m-nth paddr vaddr len size section type string
[0m[91m---------------------------------------------
[0m[91m-fs strings
[0m


[A[2K[31m[XX][0m db/cmd/cmd_i [33miS query[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'iS size/sort,vaddr/cols/name' bins/elf/analysis/main
-- stdout
[36m@@ -16,10 +16,10 @@[0m
 0x004003a8 .init
 0x00400260 .gnu.hash
 0x00400200 .interp
[91m-0x0040021c .note.ABI-tag
[0m[92m+0x0040021c .note.ABI_tag
[0m 0x00400328 .gnu.version_r
 0x00000000 .comment
[91m-0x0040023c .note.gnu.build-id
[0m[92m+0x0040023c .note.gnu.build_id
[0m 0x006008d0 .got.plt
 0x004005d0 .eh_frame_hdr
 0x004002e0 .dynstr


[**]                                      db/cmd/sidbug      886 OK        35 BR       99 XX        2 FX
[**]                                       db/cmd/cmd_i      888 OK        35 BR       99 XX        2 FX
[**]                                      db/cmd/regexp      893 OK        35 BR       99 XX        2 FX

[A[2K[31m[XX][0m db/cmd/cmd_af [33mmissing bb fix[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=false
e asm.comments=false
s sym.register_tm_clones
af
pdf
' bins/elf/before-after-main
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ sym.register_tm_clones ();
[0m[92m+/ 53: sym.register_tm_clones ();
[0m |           0x08048410      mov   eax, obj.completed.6891
 |           0x08048415      sub   eax, obj.completed.6891
 |           0x0804841a      sar   eax, 2



[A[2K[31m[XX][0m db/cmd/cmd_af [33mafb+ with wrong size[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
s 0x004017c0
af+ 0x004017c0 fcn2.0x004017c0
afb+ 0x4017c0 0x4017c0 9 0x4017dd 0x4017cd
afi~size
afb
?e
pdf
?e
pdr
?e
afb+ 0x4017c0 0x4017c0 12 0x4017dd 0x4017cd
afi~size
afb
?e
pdf
?e
pdr
' bins/pe/a.exe
-- stdout
[36m@@ -1,13 +1,13 @@[0m
 size: 9
 0x004017c0 0x004017c9 00:0000 9 j 0x004017dd f 0x004017cd
 
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 9: fcn2.0x004017c0 ();
[0m |           0x004017c0      51             push  ecx
 |           0x004017c1      89e1           mov   ecx, esp
 |           0x004017c3      83c108         add   ecx, 8
 ..
 
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 9: fcn2.0x004017c0 ();
[0m | 0x004017c0      51             push  ecx
 | 0x004017c1      89e1           mov   ecx, esp
 | 0x004017c3      83c108         add   ecx, 8
[36m@@ -18,14 +18,14 @@[0m
 size: 12
 0x004017c0 0x004017cc 00:0000 12 j 0x004017dd f 0x004017cd
 
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 12: fcn2.0x004017c0 ();
[0m |           0x004017c0      51             push  ecx
 |           0x004017c1      89e1           mov   ecx, esp
 |           0x004017c3      83c108         add   ecx, 8
 |           0x004017c6      3d00100000     cmp   eax, 0x1000
 ..
 
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 12: fcn2.0x004017c0 ();
[0m | 0x004017c0      51             push  ecx
 | 0x004017c1      89e1           mov   ecx, esp
 | 0x004017c3      83c108         add   ecx, 8



[A[2K[31m[XX][0m db/cmd/cmd_af [33mafb+[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
s 0x004017c0
af+ 0x004017c0 fcn2.0x004017c0
afb+ 0x4017c0 0x4017c0 13 0x4017dd 0x4017cd
afi~size
afb
?e
pdf
?e
af-
af+ 0x004017c0 fcn2.0x004017c0
afb+ 0x4017c0 0x4017c0 6 0x4017dd 0x4017cd
afi~size
afb
?e
pdf
?e
afb+ 0x4017c0 0x4017c0 11 0x4017dd 0x4017cd
afi~size
afb
?e
pdf
' bins/pe/a.exe
-- stdout
[36m@@ -1,7 +1,7 @@[0m
 size: 13
 0x004017c0 0x004017cd 00:0000 13 j 0x004017dd f 0x004017cd
 
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 13: fcn2.0x004017c0 ();
[0m |           0x004017c0      51             push  ecx
 |           0x004017c1      89e1           mov   ecx, esp
 |           0x004017c3      83c108         add   ecx, 8
[36m@@ -11,7 +11,7 @@[0m
 size: 6
 0x004017c0 0x004017c6 00:0000 6 j 0x004017dd f 0x004017cd
 
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 6: fcn2.0x004017c0 ();
[0m |           0x004017c0      51             push  ecx
 |           0x004017c1      89e1           mov   ecx, esp
 \           0x004017c3      83c108         add   ecx, 8
[36m@@ -19,7 +19,7 @@[0m
 size: 11
 0x004017c0 0x004017cb 00:0000 11 j 0x004017dd f 0x004017cd
 
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 11: fcn2.0x004017c0 ();
[0m |           0x004017c0      51             push  ecx
 |           0x004017c1      89e1           mov   ecx, esp
 |           0x004017c3      83c108         add   ecx, 8


[**]                                      db/cmd/cmd_af      902 OK        38 BR      102 XX        2 FX
[**]                                    db/cmd/comments      911 OK        38 BR      102 XX        2 FX
[**]                                      db/cmd/cmd_pa      913 OK        38 BR      102 XX        2 FX
[**]                                    db/cmd/cmd_list      914 OK        38 BR      102 XX        2 FX
[**]                                        db/cmd/data      915 OK        38 BR      102 XX        2 FX

[A[2K[31m[XX][0m db/cmd/structures [33mstructure offset in disassembly[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aaa
s main
td "struct S1 { int a; int b; int c; char d[256]; short e; }"
afvn s1 var_110h
pd 4 @ 0x004004be~[2-4]
afvt s1 S1
pd 4 @ 0x004004be~[2-4]
' bins/elf/analysis/main_structure
-- stdout
[36m@@ -2,7 +2,7 @@[0m
 mov dword [var_10ch]
 mov dword [var_108h]
 lea rax [s1]
[91m-mov dword [s1.a]
[0m[91m-mov dword [s1.b]
[0m[91m-mov dword [s1.c]
[0m[91m-lea rax [s1.a]
[0m[92m+mov dword [s1]
[0m[92m+mov dword [var_10ch]
[0m[92m+mov dword [var_108h]
[0m[92m+lea rax [s1]
[0m

-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/structures [33mstructure variable delete shadowed[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aaa
s main
afvb*
td "struct S1 { int a; int b; int c; char d[256]; short e; }"
afvn s1 var_110h
afvt s1 S1
afvb*
' bins/elf/analysis/main_structure
-- stdout
[36m@@ -7,3 +7,6 @@[0m
 afvb -288 var_120h char ** @ 0x4004a6
 afvb -276 var_114h int64_t @ 0x4004a6
 afvb -272 s1 S1 @ 0x4004a6
[92m+afvb -268 var_10ch int64_t @ 0x4004a6
[0m[92m+afvb -264 var_108h int64_t @ 0x4004a6
[0m[92m+afvb -4 var_4h int64_t @ 0x4004a6
[0m

-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.
<string>:1: error: declaration expected

[**]                              db/cmd/feat_graphdiff      916 OK        38 BR      104 XX        2 FX

[A[2K[31m[XX][0m db/cmd/structures [33mstructure field rename reflects immediately[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aaa
s main
td "struct S1 { int a; int b; int c; char d[256]; short e; }"
afvn s1 var_110h
afvt s1 S1
pd 4 @ 0x004004be~[2-4]
td "struct S1 { int x; int y; int c; char d[256]; short e; }"
pd 4 @ 0x004004be~[2-4]
' bins/elf/analysis/main_structure
-- stdout
[36m@@ -1,8 +1,8 @@[0m
[91m-mov dword [s1.a]
[0m[91m-mov dword [s1.b]
[0m[91m-mov dword [s1.c]
[0m[91m-lea rax [s1.a]
[0m[91m-mov dword [s1.x]
[0m[91m-mov dword [s1.y]
[0m[91m-mov dword [s1.c]
[0m[91m-lea rax [s1.x]
[0m[92m+mov dword [s1]
[0m[92m+mov dword [var_10ch]
[0m[92m+mov dword [var_108h]
[0m[92m+lea rax [s1]
[0m[92m+mov dword [s1]
[0m[92m+mov dword [var_10ch]
[0m[92m+mov dword [var_108h]
[0m[92m+lea rax [s1]
[0m

-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.
<string>:1: error: declaration expected
<string>:1: error: declaration expected

[**]                                  db/cmd/structures      916 OK        38 BR      105 XX        2 FX
[**]                                     db/cmd/cmd_wox      934 OK        38 BR      105 XX        2 FX

[A[2K[31m[XX][0m db/cmd/feat_cmdsubst [33mcmd substitution in @@s:[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'wx 9091909190919090909090
/x 90 @(2 6)
/x 90 @($(?e 0 4))
' malloc://1024
-- stdout
[36m@@ -1,4 +1,16 @@[0m
[91m-0x00000002 hit0_0 90
[0m[91m-0x00000004 hit0_1 90
[0m[92m+0x00000000 hit0_0 90
[0m[92m+0x00000002 hit0_1 90
[0m[92m+0x00000004 hit0_2 90
[0m[92m+0x00000006 hit0_3 90
[0m[92m+0x00000007 hit0_4 90
[0m[92m+0x00000008 hit0_5 90
[0m[92m+0x00000009 hit0_6 90
[0m[92m+0x0000000a hit0_7 90
[0m 0x00000000 hit1_0 90
 0x00000002 hit1_1 90
[92m+0x00000004 hit1_2 90
[0m[92m+0x00000006 hit1_3 90
[0m[92m+0x00000007 hit1_4 90
[0m[92m+0x00000008 hit1_5 90
[0m[92m+0x00000009 hit1_6 90
[0m[92m+0x0000000a hit1_7 90
[0m

-- stderr
rz_num_calc error: ( ')' expected) in ((2 6))
Searching 1 byte in [0x0-0x400]
[2Khits: 8
rz_num_calc error: ( ')' expected) in ((0 4))
Searching 1 byte in [0x0-0x400]
[2Khits: 8


[A[2K[31m[XX][0m db/cmd/feat_cmdsubst [33mcmd substitution in @@s:[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's @@s:0x10 $(?e 0x20 4)
' malloc://1024
-- stdout
[36m@@ -1,4 +0,0 @@[0m
[91m-0x10
[0m[91m-0x14
[0m[91m-0x18
[0m[91m-0x1c
[0m

-- stderr
Error while parsing command: `s @@s:0x10 $(?e 0x20 4)
`

[**]                                  db/cmd/cmd_pf_elf      949 OK        38 BR      107 XX        2 FX
[**]                               db/cmd/feat_cmdsubst      951 OK        38 BR      107 XX        2 FX

[A[2K[31m[XX][0m db/cmd/noreturn [33mnoreturn real test[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aa
s main
pdf
' bins/elf/analysis/noreturn
-- stdout
[36m@@ -1,5 +1,5 @@[0m
             ; DATA XREF from entry0 @ 0x40048d
[91m-/ int main (int argc, char **argv, char **envp);
[0m[92m+/ 41: int main (int argc, char **argv, char **envp);
[0m |           ; var int64_t var_4h @ rbp-0x4
 |           0x00400566      55             push  rbp
 |           0x00400567      4889e5         mov   rbp, rsp


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K
[**]                                      db/cmd/cmd_an      954 OK        38 BR      108 XX        2 FX
[**]                                    db/cmd/noreturn      962 OK        38 BR      108 XX        2 FX

[A[2K[31m[XX][0m db/cmd/cmd_pipe [33mrzpipe.py[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '?q `env~?^ASAN=1$`
?+ env LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libasan.so.5
#!pipe python3 scripts/get-funcs.py
' 'bins/elf/_Exit (42)'
-- stdout
[36m@@ -1,17 +0,0 @@[0m
[91m-
[0m[91m-Function names:
[0m[91m-entry0
[0m[91m-sym.imp._Exit
[0m[91m-
[0m[91m-Disassembly of entry0:
[0m[91m-            ;-- section..text:
[0m[91m-            ;-- .text:
[0m[91m-            ;-- _start():
[0m[91m-/ entry0 ();
[0m[91m-|           0x08049020      push  ebp                                  ; [10] -r-x section size 16 named .text
[0m[91m-|           0x08049021      mov   ebp, esp
[0m[91m-|           0x08049023      sub   esp, 8
[0m[91m-|           0x08049026      sub   esp, 0xc
[0m[91m-|           0x08049029      push  0x2a                                 ; '*' ; 42
[0m[91m-\           0x0804902b      call  sym.imp._Exit                        ; void _Exit(int status)
[0m[91m-
[0m

-- stderr
Traceback (most recent call last):
  File "scripts/get-funcs.py", line 1, in <module>
    import rzpipe
ModuleNotFoundError: No module named 'rzpipe'

[**]                                    db/cmd/cmd_pipe      982 OK        38 BR      109 XX        2 FX
[**]                                   db/cmd/cmd_flags     1011 OK        38 BR      109 XX        2 FX
[**]                                      db/cmd/cmd_ac     1027 OK        38 BR      109 XX        2 FX
[**]                                   db/cmd/feat_grep     1053 OK        39 BR      109 XX        3 FX

[A[2K[31m[XX][0m db/cmd/dwarf [33m"function info integration 1 rust"[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.dwarf=false
aaa
pd 75 @ dbg.main
' bins/elf/dwarf_rust_bubble
-- stdout
[36m@@ -1,6 +1,6 @@[0m
             ; DATA XREF from main @ 0x5b0d
             ;-- rust::main::h523dcf5432fcfd88:
[91m-/ int dbg.main (int argc, char **argv);
[0m[92m+/ 940: int dbg.main (int argc, char **argv);
[0m |           ; var int64_t var_8h @ rsp+0x8
 |           ; var int64_t var_10h @ rsp+0x10
 |           ; var int64_t var_18h @ rsp+0x18


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Integrate dwarf function information.[[x] Integrate dwarf function information.
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.

[**]                                       db/cmd/print     1064 OK        39 BR      110 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_pd [33mprint fcn header with asm.flags.real[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.flags.real=true
e asm.lines.fcn=false
aaa
pdf @ 0x08048484~:1
' bins/elf/crackme0x05
-- stdout
[36m@@ -1 +1 @@[0m
[91m-parell (char *s);
[0m[92m+66: parell (char *s);
[0m

-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.


[A[2K[31m[XX][0m db/cmd/cmd_pd [33mprint fcn header without asm.flags.real[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.flags.real=false
e asm.lines.fcn=false
aaa
pdf @ 0x08048484~:1
' bins/elf/crackme0x05
-- stdout
[36m@@ -1 +1 @@[0m
[91m-sym.parell (char *s);
[0m[92m+66: sym.parell (char *s);
[0m

-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.


[A[2K[31m[XX][0m db/cmd/dwarf [33m"function info integration 2 rust"[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.dwarf=false
aaa
pd 40 @  dbg.bubble_sort_i32
' bins/elf/dwarf_rust_bubble
-- stdout
[36m@@ -1,7 +1,7 @@[0m
             ; CALL XREF from rust::main::h523dcf5432fcfd88 @ 0x5875 ; dbg.main
             ;-- rust::bubble_sort::h0777bc845caabc60:
             ;-- dbg.bubble_sort_i32:
[91m-/ dbg.bubble_sort<i32> (int64_t arg1, int64_t arg2);
[0m[92m+/ 614: dbg.bubble_sort<i32> (int64_t arg1, int64_t arg2);
[0m |           ; var int64_t var_fh @ rsp+0xf
 |           ; var int64_t var_10h @ rsp+0x10
 |           ; var int64_t var_18h @ rsp+0x18


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Integrate dwarf function information.[[x] Integrate dwarf function information.
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.


[A[2K[31m[XX][0m db/cmd/cmd_pd [33mpdf show entry0 disasm instead of main[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aa
pdf
' bins/elf/ls
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ entry0 (int64_t arg3);
[0m[92m+/ 46: entry0 (int64_t arg3);
[0m |           ; arg int64_t arg3 @ rdx
 |           0x00005ae0      f30f1efa       endbr64
 |           0x00005ae4      31ed           xor   ebp, ebp


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K
[**]                                   db/cmd/feat_yank     1076 OK        39 BR      114 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_pd [33mpdJ flags[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
s main
pdJ 1 @ 0x00400506
aa
pdJ 1 @ 0x00400506
' bins/elf/analysis/main
-- stdout
[36m@@ -1,2 +1,2 @@[0m
 [{"offset":4195590,"text":"            ;-- main:"},{"offset":4195590,"text":"            0x00400506      55             push  rbp"}]
[91m-[{"offset":4195590,"text":"            ; DATA XREF from entry0 @ 0x40042d"},{"offset":4195590,"text":"/ int main (int argc, char **argv, char **envp);"},{"offset":4195590,"text":"|           0x00400506      55             push  rbp"}]
[0m[92m+[{"offset":4195590,"text":"            ; DATA XREF from entry0 @ 0x40042d"},{"offset":4195590,"text":"/ 16: int main (int argc, char **argv, char **envp);"},{"offset":4195590,"text":"|           0x00400506      55             push  rbp"}]
[0m

-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/cmd/cmd_pd [33mvarsub for rip variable[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aa; s main
e asm.syntax=att
e asm.var=0
e asm.lines.bb=0
e asm.bytes=0
e asm.comments=false
pdf
' bins/elf/varsub_2
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ int main (int argc, char **argv, char **envp);
[0m[92m+/ 21: int main (int argc, char **argv, char **envp);
[0m | 0x0000061a      pushq %rbp
 | 0x0000061b      movq  %rsp, %rbp
 | 0x0000061e      movl  $1, obj.sa


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/cmd/dwarf [33m"function info integration freepascal"[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.dwarf=false
aaa
pd 20 @  dbg.palya
' bins/efi/freepascal_test_dwarf
-- stdout
[36m@@ -1,6 +1,6 @@[0m
             ; CALL XREFS from sym.main @ +0x1a87, +0x1c7d, +0x23f3, +0x3679
             ;-- P$MOZGKIGYO_$$_PALYA$SMALLINT$SMALLINT:
[91m-/ dbg.palya ();
[0m[92m+/ 439: dbg.palya ();
[0m |           ; var int64_t var_28h @ rbp-0x28
 |           ; var int64_t var_20h @ rbp-0x20
 |           ; var SmallInt i @ rbp-0x14


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Integrate dwarf function information.[[x] Integrate dwarf function information.
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.

[**]                                       db/cmd/dwarf     1121 OK        39 BR      117 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_pd [33mpdf fcnline[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.lines.fcn=true
s 0x004017c0
af+ 0x004017c0 fcn2.0x004017c0
afb+ 0x4017c0 0x4017c0 13 0x4017dd 0x4017cd
pdf
?e
e asm.lines.fcn=false
pdf
' bins/pe/a.exe
-- stdout
[36m@@ -1,11 +1,11 @@[0m
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 13: fcn2.0x004017c0 ();
[0m |           0x004017c0      51             push  ecx
 |           0x004017c1      89e1           mov   ecx, esp
 |           0x004017c3      83c108         add   ecx, 8
 |           0x004017c6      3d00100000     cmp   eax, 0x1000
 \       ,=< 0x004017cb      7210           jb    0x4017dd
 
[91m-fcn2.0x004017c0 ();
[0m[92m+13: fcn2.0x004017c0 ();
[0m           0x004017c0      51             push  ecx
           0x004017c1      89e1           mov   ecx, esp
           0x004017c3      83c108         add   ecx, 8



[A[2K[31m[XX][0m db/cmd/cmd_pd [33mpdf fcnline with size[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.lines.fcn=true
s 0x004017c0
af+ 0x004017c0 fcn2.0x004017c0
afb+ 0x4017c0 0x4017c0 13 0x4017dd 0x4017cd
pdf
?e
e asm.lines.fcn=false
e asm.fcn.size=true
pdf
' bins/pe/a.exe
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn2.0x004017c0 ();
[0m[92m+/ 13: fcn2.0x004017c0 ();
[0m |           0x004017c0      51             push  ecx
 |           0x004017c1      89e1           mov   ecx, esp
 |           0x004017c3      83c108         add   ecx, 8


-- stderr
rz_config_set: variable 'asm.fcn.size' not found

[**]                                      db/cmd/cmd_pd     1179 OK        39 BR      119 XX        3 FX
[**]                                   db/cmd/cmd_alias     1184 OK        39 BR      119 XX        3 FX

[A[2K[31m[XX][0m db/cmd/feat_variables [33m$s{flag} and $SS (sections context)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'iSS~LOAD1
iS~.preinit_array
?e
s segment.LOAD1
?vi $s{segment.LOAD1}
?vi $s{section..preinit_array}
?vi $SS
' bins/elf/before-after-main
-- stdout
[36m@@ -1,5 +1,5 @@[0m
 3   0x00000ed4  0x14c 0x08049ed4  0x150 -rw- LOAD1
[91m-18  0x00000ed4    0x8 0x08049ed4    0x8 -rw- .preinit_array     PREINIT_ARRAY write,alloc
[0m[92m+18  0x00000ed4    0x8 0x08049ed4    0x8 -rw- .preinit_array     PREINIT_ARRAY write,alloc,
[0m 
 336
 8


[**]                                     db/cmd/cmd_aes     1185 OK        39 BR      120 XX        3 FX

[A[2K[31m[XX][0m db/cmd/feat_variables [33m$$ (x86-simple)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '?v $$
s 42
?v $$
shu
?v $$
' bins/elf/analysis/x86-simple
-- stdout
[36m@@ -1,3 +1,2 @@[0m
 0x8048060
 0x2a
[91m-0x8048060
[0m

-- stderr
Command 'shu' does not exist.


[A[2K[31m[XX][0m db/cmd/feat_variables [33m$o (x86-simple)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '?v $o
s 42
?v $o
shu
?v $o
' bins/elf/analysis/x86-simple
-- stdout
[36m@@ -1,3 +1,2 @@[0m
 0x60
 0x2a
[91m-0x60
[0m

-- stderr
Command 'shu' does not exist.


[A[2K[31m[XX][0m db/cmd/feat_variables [33m$o (malloc)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '?v $o
s 42
?v $o
shu
?v $o
' malloc://1024
-- stdout
[36m@@ -1,3 +1,2 @@[0m
 0x0
 0x2a
[91m-0x0
[0m

-- stderr
Command 'shu' does not exist.


[A[2K[31m[XX][0m db/cmd/feat_variables [33m$$ (malloc)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '?v $$
s 42
?v $$
shu
?v $$
' malloc://1024
-- stdout
[36m@@ -1,3 +1,2 @@[0m
 0x0
 0x2a
[91m-0x0
[0m

-- stderr
Command 'shu' does not exist.

[**]                              db/cmd/feat_variables     1205 OK        39 BR      124 XX        3 FX
[**]                                  db/cmd/cmd_visual     1211 OK        39 BR      124 XX        3 FX
[**]                                     db/cmd/cmd_pf2     1236 OK        39 BR      124 XX        3 FX
[**]                                      db/cmd/cmd_ax     1240 OK        39 BR      124 XX        3 FX
[**]                               db/cmd/feat_redirect     1249 OK        39 BR      124 XX        3 FX
[**]                                 db/cmd/feat_arroba     1252 OK        39 BR      124 XX        3 FX
[**]                                db/cmd/feat_foreach     1253 OK        39 BR      124 XX        3 FX
[**]                                db/cmd/cmd_pd_bytes     1263 OK        40 BR      124 XX        3 FX
[**]                                      db/cmd/cmd_ds     1268 OK        40 BR      124 XX        3 FX
[**]                                        db/cmd/cmds     1270 OK        40 BR      124 XX        3 FX
[**]                                      db/cmd/cmd_pi     1273 OK        40 BR      124 XX        3 FX
[**]                                db/cmd/display_flag     1274 OK        40 BR      124 XX        3 FX
[**]                                   db/cmd/lea_intel     1275 OK        40 BR      124 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_seek [33mseek silent to register[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bits=32
dr eax=0x200
dr ebx=0x300
s 0x100
s
sh*
?e
sr eax
s
sh*
?e
sr ebx @e:cfg.seek.silent=true
s
sh*
' -
-- stdout
[36m@@ -1,13 +1 @@[0m
 0x100
[91m-f undo_0 @ 0x0
[0m[91m-# Current seek @ 0x100
[0m[91m-
[0m[91m-0x200
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x100
[0m[91m-# Current seek @ 0x200
[0m[91m-
[0m[91m-0x300
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x100
[0m[91m-# Current seek @ 0x300
[0m

-- stderr
Command 'sh*' does not exist.


[A[2K[31m[XX][0m db/cmd/cmd_seek [33mseek silent[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's 0x100
s
sh*
?e
s 0x200
s
sh*
?e
s 0x300 @e:cfg.seek.silent=true
s
sh*
' -
-- stdout
[36m@@ -1,13 +1 @@[0m
 0x100
[91m-f undo_0 @ 0x0
[0m[91m-# Current seek @ 0x100
[0m[91m-
[0m[91m-0x200
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x100
[0m[91m-# Current seek @ 0x200
[0m[91m-
[0m[91m-0x300
[0m[91m-f undo_1 @ 0x0
[0m[91m-f undo_0 @ 0x100
[0m[91m-# Current seek @ 0x300
[0m

-- stderr
Command 'sh*' does not exist.

[**]                             db/cmd/mm_search_issue     1278 OK        40 BR      126 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_seek [33mRedodups[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's $$
s $$
s $$
s $$
sh*~?
' malloc://512
-- stdout
[36m@@ -1 +1 @@[0m
[91m-1
[0m[92m+0
[0m

-- stderr
Command 'sh*' does not exist.

[**]                                        db/cmd/echo     1286 OK        40 BR      127 XX        3 FX
[**]                                  db/cmd/cmd_extend     1290 OK        40 BR      127 XX        3 FX
[**]                                         db/cmd/err     1292 OK        40 BR      127 XX        3 FX
[**]                                db/cmd/cmd_dr_equal     1293 OK        40 BR      127 XX        3 FX
[**]                                    db/cmd/cmd_aecb     1295 OK        40 BR      127 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_att [33matt varsub 2 with asm.sub.varonly disabled[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aa; s main
e asm.syntax=att
e asm.var=0
e asm.lines.bb=0
e asm.bytes=0
e asm.comments=false
e asm.sub.varonly=false
pdf
' bins/elf/varsub
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ int main (int argc, char **argv, char **envp);
[0m[92m+/ 42: int main (int argc, char **argv, char **envp);
[0m | 0x004004a6      pushq %rbp
 | 0x004004a7      movq  %rsp, %rbp
 | 0x004004aa      movq  arg_8h(%rsp), %rax


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/cmd/cmd_att [33matt varsub 2[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aa; s main
e asm.syntax=att
e asm.var=0
e asm.lines.bb=0
e asm.bytes=0
e asm.comments=false
pdf
' bins/elf/varsub
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ int main (int argc, char **argv, char **envp);
[0m[92m+/ 42: int main (int argc, char **argv, char **envp);
[0m | 0x004004a6      pushq %rbp
 | 0x004004a7      movq  %rsp, %rbp
 | 0x004004aa      movq  arg_8h, %rax


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/cmd/cmd_att [33matt varsub[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'af
e asm.syntax=att
e asm.var=0
e asm.lines.bb=0
e asm.bytes=0
e asm.comments=false
pd 20
' bins/mach0/mac-ls
-- stdout
[36m@@ -1,6 +1,6 @@[0m
   ;-- entry0:
   ;-- func.100001058:
[91m-/ int main (int argc, char **argv);
[0m[92m+/ 2259: int main (int argc, char **argv);
[0m | 0x100001058      pushq %rbp
 | 0x100001059      movq  %rsp, %rbp
 | 0x10000105c      pushq %r15


[**]                                     db/cmd/cmd_att     1296 OK        40 BR      130 XX        3 FX

[A[2K[31m[XX][0m db/cmd/write [33mWrite reanalysis of child of non-modified block[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -a x86 -b 64 -e analysis.detectwrites=true -Qc 'e asm.bytes=true
wx eb020000000075fac3
af
wx eb04eb02
pdr
af-
wx eb020000eb020000000075fac3
af
wx eb040000eb02 @ 4
pdr
' -
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00000000 ();
[0m[92m+/ 7: fcn.00000000 ();
[0m | 0x00000000      eb04           jmp   6
 | ----------- true: 0x00000006
 | 0x00000002      eb02           jmp   6
[36m@@ -8,7 +8,7 @@[0m
 | ----------- true: 0x00000002  false: 0x00000008
 \ 0x00000008      c3             ret
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 11: fcn.00000000 ();
[0m | 0x00000000      eb02           jmp   4
 | ----------- true: 0x00000004
 | ; CODE XREF from fcn.00000000 @ 


[**]                                     db/cmd/retries     1300 OK        40 BR      131 XX        3 FX

[A[2K[31m[XX][0m db/cmd/write [33mAutomatically reanalyze function control flow after a write[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -a x86 -b 64 -e analysis.detectwrites=true -Qc 'e asm.bytes=true
wa jne 6 @ 2
wa ret @ 8
af
pdr
wa jne 8 @ 4
pdr
wa mov rax, [rbp-4]
pdr
afvn test var_4h
wa jne 0 @ 4
pdr
wx 00000000
afv # check var was deleted
' -
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00000000 ();
[0m[92m+/ 9: fcn.00000000 ();
[0m | 0x00000000      0000           add   byte [rax], al
 | 0x00000002      7502           jne   6
 | ----------- true: 0x00000006  false: 0x00000004
[36m@@ -7,7 +7,7 @@[0m
 | 0x00000006      0000           add   byte [rax], al
 \ 0x00000008      c3             ret
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 9: fcn.00000000 ();
[0m | 0x00000000      0000           add   byte [rax], al
 | 0x00000002      7502           jne   6
 | ----------- true: 0x00000006  false: 0x00000004
[36m@@ -17,7 +17,7 @@[0m
 | ----------- true: 0x00000008
 \ 0x00000008      c3             ret
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 9: fcn.00000000 ();
[0m | ; var int64_t var_4h @ rbp-0x4
 | 0x00000000      488b45fc       mov   rax, qword [var_4h]
 | 0x00000004      7502           jne   8
[36m@@ -26,7 +26,7 @@[0m
 | ----------- true: 0x00000008
 \ 0x00000008      c3             ret
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 9: fcn.00000000 ();
[0m | ; var int64_t test @ rbp-0x4
 | 0x00000000      488b45fc       mov   rax, qword [test]
 | 0x00000004      75fa           jne   fcn.00000000


-- stderr
Written 2 byte(s) (jne 6) = wx 7502
Written 1 byte(s) (ret) = wx c3
Written 2 byte(s) (jne 8) = wx 7502
Written 4 byte(s) (mov rax, [rbp-4]) = wx 488b45fc
Written 2 byte(s) (jne 0) = wx 75fa


[A[2K[31m[XX][0m db/cmd/write [33mWrite misaligns jump instruction, control flow is reanalyzed[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -a x86 -b 64 -e analysis.detectwrites=true -Qc 'e asm.bytes=true
wx e80200000075020000c3
af
pdr
wa jne 9
pdr
wx e802
pdr
' -
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00000000 ();
[0m[92m+/ 10: fcn.00000000 ();
[0m | 0x00000000      e802000000     call  7
 | 0x00000005      7502           jne   9
 | ----------- true: 0x00000009  false: 0x00000007
[36m@@ -7,7 +7,7 @@[0m
 | ----------- true: 0x00000009
 \ 0x00000009      c3             ret
 
[91m-/ fcn.00000000 (int64_t arg_2h);
[0m[92m+/ 10: fcn.00000000 (int64_t arg_2h);
[0m | ; arg int64_t arg_2h @ rbp+0x2
 | 0x00000000      7507           jne   9
 | ----------- true: 0x00000009  false: 0x00000002
[36m@@ -18,7 +18,7 @@[0m
 | ----------- true: 0x00000009
 \ 0x00000009      c3             ret
 
[91m-/ fcn.00000000 (int64_t arg_2h);
[0m[92m+/ 10: fcn.00000000 (int64_t arg_2h);
[0m | ; arg int64_t arg_2h @ rbp+0x2
 | 0x00000000      e802000000     call  7
 | 0x00000005      7502           jne   9


-- stderr
Written 2 byte(s) (jne 9) = wx 7507


[A[2K[31m[XX][0m db/cmd/write [33mWrite reanalysis keeps already unreachable block[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -a x86 -b 64 -e analysis.detectwrites=true -Qc 'e asm.bytes=true
wx 0000c300c3
af
afb+ 0 4 1
pdr
wa add byte [rax], bl
pdr
' -
-- stdout
[36m@@ -1,10 +1,10 @@[0m
[91m-/ fcn.00000000 ();
[0m[92m+/ 4: fcn.00000000 ();
[0m | 0x00000000      0000           add   byte [rax], al
 | 0x00000002      c3             ret
 
 \ 0x00000004      c3             ret
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 4: fcn.00000000 ();
[0m | 0x00000000      0018           add   byte [rax], bl
 | 0x00000002      c3             ret
 


-- stderr
Written 2 byte(s) (add byte [rax], bl) = wx 0018

[**]                                    db/cmd/cmd_seek     1306 OK        40 BR      134 XX        3 FX
[**]                                    db/cmd/cmd_json     1307 OK        41 BR      134 XX        3 FX
[**]                                     db/cmd/cmd_pif     1312 OK        43 BR      134 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_tc [33mtest cmd tuc[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "union Data {int i,j;};"
tuc
' -
-- stdout
[36m@@ -1,4 +0,0 @@[0m
[91m-union Data {
[0m[91m-	int32_t i;
[0m[91m-	int32_t j;
[0m[91m-};
[0m

-- stderr
<string>:1: error: declaration expected

[**]                                       db/cmd/write     1337 OK        44 BR      135 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_tc [33mttj typedef[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 't-*
td "typedef char *string;"
ttj
' -
-- stdout
[36m@@ -1 +1 @@[0m
[91m-{"string":"char *"}
[0m[92m+{}
[0m

-- stderr
<string>:1: error: declaration expected

[**]                             db/cmd/cmd_disassembly     1339 OK        44 BR      136 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_tc [33mtest cmd tec[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "enum foo {bar = 1, cow = 3};"
tec
' -
-- stdout
[36m@@ -1,4 +0,0 @@[0m
[91m-enum foo {
[0m[91m-	bar = 1,
[0m[91m-	cow = 3
[0m[91m-};
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/cmd_tc [33mtest cmd tf[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'tf main
tf entry0
' bins/mach0/objc-employee
-- stdout
[36m@@ -1,2 +1,5 @@[0m
[91m-int main (int argc, char ** argv, char ** envp);
[0m[91m-void entry0 ();
[0m[92m+func.main.arg.2=char **,envp
[0m[92m+func.main.arg.0=int,argc
[0m[92m+func.main.arg.1=char **,argv
[0m[92m+func.main.ret=int
[0m[92m+func.main.args=3
[0m


[A[2K[31m[XX][0m db/cmd/cmd_tc [33mtc typedef[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'td "typedef char *string;"
ttc string
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-typedef char * string;
[0m

-- stderr
<string>:1: error: declaration expected


[A[2K[31m[XX][0m db/cmd/cmd_tc [33mtc3 iOS14 arm64[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc ic* bins/mach0/objc-employee-ios14-arm64
-- stdout
[36m@@ -25,4 +25,4 @@[0m
 "f field.Employee.Employee::(property)firstName = 0x00000000"
 "f field.Employee.Employee::(property)shortWord = 0x00000000"
 "f field.Employee.Employee::(property)wideWord = 0x00000000"
[91m-td "struct Employee { struct objc_class * isa; short _shortWord; struct NSString* _username; struct NSString* _firstName; uint64_t _wideWord; void* username; void* firstName; void* shortWord; void* wideWord;};"
[0m[92m+"td struct Employee { struct objc_class * isa; short _shortWord; struct NSString* _username; struct NSString* _firstName; uint64_t _wideWord; void* username; void* firstName; void* shortWord; void* wideWord;};"
[0m


[A[2K[31m[XX][0m db/cmd/cmd_tc [33mtc3 iOS14 arm64e[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc ic* bins/mach0/objc-employee-ios14-arm64e
-- stdout
[36m@@ -24,4 +24,4 @@[0m
 "f field.Employee.Employee::(property)firstName = 0x00000000"
 "f field.Employee.Employee::(property)shortWord = 0x00000000"
 "f field.Employee.Employee::(property)wideWord = 0x00000000"
[91m-td "struct Employee { struct objc_class * isa; short _shortWord; struct NSString* _username; struct NSString* _firstName; uint64_t _wideWord; void* username; void* firstName; void* shortWord; void* wideWord;};"
[0m[92m+"td struct Employee { struct objc_class * isa; short _shortWord; struct NSString* _username; struct NSString* _firstName; uint64_t _wideWord; void* username; void* firstName; void* shortWord; void* wideWord;};"
[0m


[A[2K[31m[XX][0m db/cmd/cmd_tc [33mtc3[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc ic* bins/mach0/objc-employee
-- stdout
[36m@@ -24,4 +24,4 @@[0m
 "f field.Employee.Employee::(property)firstName = 0x00000000"
 "f field.Employee.Employee::(property)shortWord = 0x00000000"
 "f field.Employee.Employee::(property)wideWord = 0x00000000"
[91m-td "struct Employee { struct objc_class * isa; short _shortWord; struct NSString* _username; struct NSString* _firstName; uint64_t _wideWord; void* username; void* firstName; void* shortWord; void* wideWord;};"
[0m[92m+"td struct Employee { struct objc_class * isa; short _shortWord; struct NSString* _username; struct NSString* _firstName; uint64_t _wideWord; void* username; void* firstName; void* shortWord; void* wideWord;};"
[0m

[**]                                      db/cmd/cmd_tc     1352 OK        44 BR      142 XX        3 FX
[**]                                     db/cmd/cmd_wop     1362 OK        45 BR      142 XX        3 FX
[**]                             db/cmd/section-mapping     1362 OK        46 BR      142 XX        3 FX
[**]                                     db/cmd/cmd_rop     1375 OK        46 BR      142 XX        3 FX
[**]                                 db/cmd/file_malloc     1384 OK        46 BR      142 XX        3 FX
[**]                                     db/cmd/cmd_pxw     1389 OK        46 BR      142 XX        3 FX
[**]                                     db/cmd/md5sha1     1390 OK        46 BR      142 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_pd2 [33masm.bb.line fcnline glitches fix, bblines btw bb & non-bb[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bb.line=true
e asm.bytes=false
e asm.comments=false
e asm.fcn.signature=false
e asm.var=false
s sym.deregister_tm_clones
aF
s sym.deregister_tm_clones-1
pd 3
?e
s sym.deregister_tm_clones+38
pd 4
?e
s entry.fini0
aF
s entry.fini0+32
pd 3
' bins/elf/before-after-main
-- stdout
[36m@@ -1,6 +1,5 @@[0m
             0x080483cf      nop
[91m-/ (fcn) sym.deregister_tm_clones 40
[0m[91m-|   sym.deregister_tm_clones ();
[0m[92m+/ 40: sym.deregister_tm_clones ();
[0m |           0x080483d0      mov   eax, obj.completed.6891
 |           0x080483d5      cmp   eax, obj.completed.6891
 


-- stderr
rz_config_set: variable 'asm.fcn.signature' not found


[A[2K[31m[XX][0m db/cmd/cmd_pd2 [33maht asm.cmt.right=false fix (#12330)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=x86
e asm.bits=64
e io.cache=true
wx 488b4608
td "struct ms { char b[8]; int member1; int member2; };"
aht ms.member1
e asm.cmt.right=true
pd 1
e asm.cmt.right=false
pd 1
' -
-- stdout
[36m@@ -1,2 +1,2 @@[0m
[91m-            0x00000000      488b4608       mov   rax, qword [rsi + ms.member1]
[0m[91m-            0x00000000      488b4608       mov rax, qword [rsi + ms.member1]
[0m[92m+            0x00000000      488b4608       mov   rax, qword [rsi + 8]
[0m[92m+            0x00000000      488b4608       mov rax, qword [rsi + 8]
[0m

-- stderr
<string>:1: error: declaration expected
wrong type for opcode offset


[A[2K[31m[XX][0m db/cmd/cmd_pd2 [33mesil func cmts[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'tn- __libc_start_main
e asm.bytes=true
e asm.emu=true
e emu.write=true
s 0x8174
af
e asm.cmt.right=true
pdf
?e
e asm.cmt.right=false
pdf
?e
agf
' bins/elf/arm1.bin
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00008174 (func main, int argc);
[0m[92m+/ 8: fcn.00008174 (func main, int argc);
[0m |           ; arg func main @ r0
 |           ; arg int argc @ r1
 |           0x00008174      b80000eb       bl    sym.__libc_start_main ; lr=0x8178 -> 0xeb0002a4 ; pc=0x845c -> 0xe92d41f0
[36m@@ -6,7 +6,7 @@[0m
 \           0x00008178      a40200eb       bl    sym.abort             ; lr=0x817c -> 0xe92d4030 ; pc=0x8c10 -> 0xe59f62a0
 \                                                                      ; void abort(void)
 
[91m-/ fcn.00008174 (func main, int argc);
[0m[92m+/ 8: fcn.00008174 (func main, int argc);
[0m |           ; arg func main @ r0
 |           ; arg int argc @ r1
 |              ; lr=0x8178 -> 0xeb0002a4
[36m@@ -21,7 +21,7 @@[0m
 [0x00008174]>  # fcn.00008174 (func main, int argc);
 .----------------------------------------------------.
 |  0x8174                                            |
[91m-| fcn.00008174 (func main, int argc);                |
[0m[92m+| 8: fcn.00008174 (func main, int argc);             |
[0m | ; arg func main @ r0                               |
 | ; arg int argc @ r1                                |
 |    ; lr=0x8178 -> 0xeb0002a4                       |



[A[2K[31m[XX][0m db/cmd/cmd_pd2 [33mpdf entry0 pe[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -A -Qc pdf bins/pe/ConsoleApplication1.exe
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ entry0 ();
[0m[92m+/ 329: entry0 ();
[0m |       :   ; var int32_t var_24h @ ebp-0x24
 |       :   ; var int32_t var_19h @ ebp-0x19
 |       :   ; var int32_t var_4h @ ebp-0x4


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.

[**]                                     db/cmd/cmd_ahi     1431 OK        46 BR      146 XX        3 FX
[**]                             db/cmd/cmd_long_string     1432 OK        47 BR      146 XX        3 FX

[A[2K[31m[XX][0m db/cmd/cmd_pd2 [33mpdf hidden code in sparse fix[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.var=false
e io.cache=true
wx 90eb09 @ 0x560e71
wx e904000000 @ 0x560e68
wx e940c5edff @ 0x560eb2
s 0x560e67
af+ 0x00560e67 fcn.00560e67
afb+ 0x00560e67 0x00560e67 6 0x00560e71
afb+ 0x00560e67 0x00560e71 3 0x00560e7d
afb+ 0x00560e67 0x00560e7d 8 0x00560e96
afb+ 0x00560e67 0x00560e96 7 0x00560eb1
afb+ 0x00560e67 0x00560eb1 6
pdf
?e
pdr.
' bins/pe/cmd_adf_sample0.exe
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00560e67 ();
[0m[92m+/ 30: fcn.00560e67 ();
[0m |       :   0x00560e67      56             push  esi
 |      ,==< 0x00560e68      e904000000     jmp   0x560e71
 ..
[36m@@ -16,7 +16,7 @@[0m
 |     ||:   0x00560eb1      5a             test           al, 0x36
 \     ||`=< 0x00560eb2      e940c5edff     jmp   0x43d3f7
 
[91m-/ fcn.00560e67 ();
[0m[92m+/ 30: fcn.00560e67 ();
[0m | 0x00560e67      56             push  esi
 | 0x00560e68      e904000000     jmp   0x560e71
 | ----------- true: 0x00560e71



[A[2K[31m[XX][0m db/cmd/cmd_pd2 [33mrealign after sparse (#11810)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e analysis.vars.stackname=true
e asm.bytes=false
e asm.comments=false
s 0x560e67
af+ 0x00560e67 fcn.00560e67
afb+ 0x00560e67 0x00560e67 6 0x00560e7d
afb+ 0x00560e67 0x00560e7d 8 0x00560e96
afb+ 0x00560e67 0x00560e96 7 0x00560eb1
afb+ 0x00560e67 0x00560eb1 297
pdf
' bins/pe/cmd_adf_sample0.exe
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00560e67 ();
[0m[92m+/ 318: fcn.00560e67 ();
[0m |       :   0x00560e67      push  esi
 |      ,==< 0x00560e68      jmp   0x560e7d
 ..


[**]                                     db/cmd/cmd_pd2     1436 OK        48 BR      148 XX        3 FX
[**]                                db/cmd/cmd_pf_write     1436 OK        49 BR      148 XX        3 FX
[**]                                    db/cmd/cmd_cond     1444 OK        49 BR      148 XX        3 FX
[**]                                       db/cmd/cmd_b     1447 OK        49 BR      148 XX        3 FX
[**]                                    db/cmd/bug_3788     1456 OK        49 BR      148 XX        3 FX
[**]                                      db/cmd/cmd_ag     1459 OK        49 BR      148 XX        3 FX
[**]                                      db/cmd/cmd_ps     1460 OK        49 BR      148 XX        3 FX
[**]                                    db/cmd/describe     1463 OK        50 BR      148 XX        3 FX
[**]                                db/cmd/cmd_ownshell     1464 OK        50 BR      148 XX        3 FX
[**]                                     db/cmd/cmd_pae     1467 OK        50 BR      148 XX        3 FX
[**]                                     db/cmd/cmd_pad     1471 OK        50 BR      148 XX        3 FX
[**]                                       db/cmd/cmd_r     1475 OK        50 BR      148 XX        3 FX
[**]                                       db/cmd/cmd_c     1481 OK        50 BR      148 XX        3 FX
[**]                                db/cmd/backtickgrep     1486 OK        50 BR      148 XX        3 FX
[**]                                  db/cmd/cmd_system     1489 OK        50 BR      148 XX        3 FX
[**]                                     db/cmd/cmd_idp     1496 OK        50 BR      148 XX        3 FX
[**]                                    db/cmd/cmd_open     1535 OK        51 BR      148 XX        3 FX
[**]                                        db/asm/java     1685 OK        51 BR      148 XX        3 FX
[**]                                        db/asm/or1k     1838 OK        51 BR      148 XX        3 FX
[**]                                         db/asm/avr     1911 OK        51 BR      148 XX        3 FX
[**]                                 db/asm/pic_pic18_8     1927 OK        52 BR      148 XX        3 FX
[**]                                 db/asm/mips.gnu_64     2013 OK        52 BR      148 XX        3 FX
[**]                                      db/asm/x86_32     3722 OK       665 BR      148 XX        4 FX
[**]                                          db/asm/ws     3730 OK       668 BR      148 XX        4 FX
[**]                                         db/asm/z80     4866 OK       668 BR      148 XX        4 FX
[**]                           db/asm/arm.gnu_cortex_16     4867 OK       668 BR      148 XX        4 FX
[**]                                  db/asm/mips_v2_64     5970 OK       688 BR      148 XX        4 FX
[**]                                      db/asm/arm_16     5980 OK       688 BR      148 XX        4 FX
[**]                                          db/asm/sh     5988 OK       688 BR      148 XX        4 FX
[**]                             db/asm/tms320_c55x+_32     6016 OK       688 BR      148 XX        4 FX
[**]                                       db/asm/h8300     6148 OK       688 BR      148 XX        4 FX
[**]                                          db/asm/gb     6762 OK       691 BR      148 XX        4 FX
[**]                                     db/asm/mips_64     6833 OK       700 BR      148 XX        4 FX
[**]                                  db/asm/arm.gnu_32     6834 OK       700 BR      148 XX        4 FX
[**]                                        db/asm/8051     6968 OK       700 BR      148 XX        4 FX
[**]                               db/cmd/cmd_zignature     7171 OK       718 BR      148 XX        4 FX
[**]                                     db/asm/snes_16     7322 OK       718 BR      148 XX        4 FX
[**]                                      db/asm/arm_64     7323 OK       718 BR      148 XX        4 FX
[**]                                       db/asm/chip8     7372 OK       718 BR      148 XX        4 FX
[**]                                      db/asm/arc_16     7399 OK       719 BR      148 XX        4 FX
[**]                              db/asm/tms320_c55x_32     7750 OK       719 BR      148 XX        4 FX
[**]                                      db/asm/msp430     7804 OK       719 BR      148 XX        4 FX
[**]                                      db/asm/arm_32     7978 OK       819 BR      148 XX        9 FX
[**]                                      db/asm/spc700     8232 OK       819 BR      148 XX        9 FX
[**]                                    db/asm/riscv_32     8417 OK       819 BR      148 XX        9 FX
[**]                             db/asm/amd29k_29000_32     8487 OK       821 BR      148 XX        9 FX
[**]                                      db/asm/x86_16     8498 OK       822 BR      148 XX        9 FX
[**]                                       db/asm/i4004     8545 OK       822 BR      148 XX        9 FX
[**]                                         db/asm/ebc     8588 OK       822 BR      148 XX        9 FX
[**]                                      db/asm/lh5801     8749 OK       829 BR      148 XX        9 FX
[**]                                        db/asm/v810     8806 OK       829 BR      148 XX        9 FX
[**]                                      db/asm/dalvik     9044 OK       830 BR      148 XX        9 FX
[**]                                      db/asm/arc_32     9094 OK       837 BR      148 XX        9 FX
[**]                                        db/asm/cr16     9171 OK       837 BR      148 XX        9 FX
[**]                               db/asm/arm_cortex_16     9173 OK       837 BR      148 XX        9 FX
[**]                                        db/asm/wasm     9299 OK       838 BR      148 XX        9 FX
[**]                                     db/asm/hexagon     9324 OK       838 BR      148 XX        9 FX
[**]                              db/asm/arm.winedbg_32     9375 OK       839 BR      148 XX        9 FX
[**]                                      db/asm/x86_64    10423 OK       862 BR      148 XX        9 FX

[A[2K[31m[XX][0m db/analysis/java [33muse java set_flags and flags_str_at to reset the access flag on class file entities[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.comments=false
e asm.cmt.flgrefs=false
e scr.color=false
e asm.lines.bb=false
e asm.xrefs=false
wx cafebabe0000002f004008002208003a08003c0700310700360700370700380700390900040019090004001c090004001d0a000400170a000400180a0006001e0a0006001f0a000600200a000700160a0007001a0a0007001b0a000700210a000800160c002e00250c0031002b0c0031002c0c003100300c003200260c0032002a0c003300300c003400300c003500270c003b00230c003d00280c003e002401000001000328294901001428294c6a6176612f6c616e672f537472696e673b01000328295601001b2843294c6a6176612f6c616e672f537472696e674275666665723b01000428492943010016284949294c6a6176612f6c616e672f537472696e673b010026284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e673b01002c284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e674275666665723b010038284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e673b01004a284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e673b0100083c636c696e69743e0100063c696e69743e010004436f64650100124c6a6176612f6c616e672f537472696e673b01000161010006617070656e6401000162010001630100066368617241740100136a6176612f6c616e672f457863657074696f6e0100106a6176612f6c616e672f537472696e670100166a6176612f6c616e672f537472696e674275666665720100106a6176612f7574696c2f566563746f720100086b77696373356a650100066c656e6774680100086f736d666e73656e010009737562737472696e67010008746f537472696e67010008537461636b4d617000310004000800000003000a003100300000000a003300300000000a00340030000000050001002e00250001002f0000001100010001000000052ab70015b1000000000009003100290001002f0000002300030001000000172ab20009b2000ab8000db3000b2ab2000bb8000c594bb000000000000a0031002c0001002f000000dc00040005000000572ab6000f3b12014e04360415049900442db6000f1aa20036bb000759b700112db600132bb600132cb60013b600144cbb000759b700112db600132b031008b60010b60013b600144ea7ffc8033604a7ffbda70004572db00001000b0051005400050001003f0000006b0006000b0005010700060700060700060100000010000501070006070006070006010000004b000501070006070006070006010000005100050107000607000607000601000000540005010700060700060700060100010700050055000501070006070006070006010000000a0031002b0001002f000000bc000400040000003dbb000759b700114d043e1d990029033e1d2ab6000fa2001a2c2a1db6000e2b1db6000e8292b6001257840301a7ffe4033ea7ffd9a70004572cb60014b00001000a0034003700050001003f000000650006000a000407000607000607000701000000100004070006070006070007010000002f00040700060700060700070100000034000407000607000607000701000000370004070006070006070007010001070005003800040700060700060700070100000008002d00250001002f0000001c00010000000000101202b300091203b3000a1201b3000bb1000000000000
ib;af;
s 0x425; p8 2;
java flags_str_at m 0x425
java set_flags 0x425 m "public static"
p8 2;
java flags_str_at m 0x425
' malloc://4096
-- stdout
[36m@@ -1,4 +1,4 @@[0m
 000a
 Method Access Flags String: private static
[91m-0009
[0m[91m-Method Access Flags String: public static
[0m[92m+0008
[0m[92m+Method Access Flags String: static
[0m

[**]                                   db/analysis/java    10437 OK       863 BR      149 XX        9 FX
[**]                                  db/analysis/riscv    10449 OK       863 BR      149 XX        9 FX
[**]                                  db/analysis/thumb    10470 OK       864 BR      149 XX        9 FX

[A[2K[31m[XX][0m db/analysis/x86_32 [33mtiny1 aae non-start-bb first[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e io.cache=true
$orig_end=?e `omt va_end/cols~[0]:3`
omr 1 `omt size/cols~[0]:3`+2
s `$orig_end`
wa jmp entry0
aF
aae
agf
?e
afl
' bins/elf/analysis/tiny1
-- stdout
[36m@@ -10,18 +10,18 @@[0m
 || mov bl, 0x2a                              |
 || xor eax, eax                              |
 || inc eax                                   |
[91m-|| ;-- syscall.exit:                         |
[0m[92m+|| ;-- syscall.close:                        |
[0m || int 0x80                                  |
 |`-------------------------------------------'
 |    v
 |    |
 |    '----------.
 |               |
[91m-|           .--------------------.
[0m[91m-|           |  0x804805b         |
[0m[91m-|           | fcn.0804805b ();   |
[0m[91m-|           | jmp entry0         |
[0m[91m-|           `--------------------'
[0m[92m+|           .---------------------.
[0m[92m+|           |  0x804805b          |
[0m[92m+|           | 9: fcn.0804805b (); |
[0m[92m+|           | jmp entry0          |
[0m[92m+|           `---------------------'
[0m |               v
 |               |
 `---------------'


-- stderr
Written 2 byte(s) (jmp entry0) = wx ebf7


[A[2K[31m[XX][0m db/analysis/x86_32 [33mtiny1 aae[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aF
aae
pdf
' bins/elf/analysis/tiny1
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ entry0 ();
[0m[92m+/ 7: entry0 ();
[0m |           0x08048054      mov   bl, 0x2a                             ; '*' ; 42
 |           0x08048056      xor   eax, eax
 |           0x08048058      inc   eax



[A[2K[31m[XX][0m db/analysis/x86_32 [33mtiny1 aaef[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aF
aaef
pdf
# TODO eip flag?
' bins/elf/analysis/tiny1
-- stdout
[36m@@ -1,5 +1,5 @@[0m
             ;-- eip:
[91m-/ entry0 ();
[0m[92m+/ 7: entry0 ();
[0m |           0x08048054      mov   bl, 0x2a                             ; '*' ; 42
 |           0x08048056      xor   eax, eax
 |           0x08048058      inc   eax



[A[2K[31m[XX][0m db/analysis/x86_32 [33mget function in, node before entry[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.lines=false;e asm.comments=false;e asm.bytes=true;af @ main; pdr @ 0x1180' bins/elf/fcn_in_test.elf
-- stdout
[36m@@ -2,7 +2,7 @@[0m
 0x00001180      31c0           xor   eax, eax
 0x00001182      eb06           jmp   loc.start
 | ----------- true: 0x0000118a
[91m-int main (int argc, char **argv, char **envp);
[0m[92m+18: int main (int argc, char **argv, char **envp);
[0m 0x00001184      31c0           xor   eax, eax
 0x00001186      75f8           jne   loc.start2
 | ----------- true: 0x00001180  false: 0x00001188


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly

[**]                                    db/analysis/avr    10492 OK       864 BR      153 XX        9 FX

[A[2K[31m[XX][0m db/analysis/x86_32 [33mensure jump within a function is added to the basic block[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aaa
s 0xf34
afbi
' bins/elf/echo
-- stdout
[36m@@ -1 +1,8 @@[0m
[91m-0x00000f34 0x00000f4b 00:0000 23 j 0x00001144
[0m[92m+jump: 0x00001144
[0m[92m+opaddr: 0x00000f34
[0m[92m+addr: 0x00000f34
[0m[92m+size: 23
[0m[92m+inputs: 1
[0m[92m+outputs: 1
[0m[92m+ninstr: 6
[0m[92m+traced: true
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.


[A[2K[31m[XX][0m db/analysis/x86_32 [33mx86: fastcall argument analysis[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'aa ; s sym.fastcaslled ; e asm.bytes=true; afc fastcall ; afva ; pdf~arg,var' bins/elf/analysis/fast
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ sym.fastcaslled (int32_t arg1, int32_t arg2, int32_t arg_8h, int32_t arg_ch);
[0m[92m+/ 59: sym.fastcaslled (int32_t arg1, int32_t arg2, int32_t arg_8h, int32_t arg_ch);
[0m |           ; var int32_t var_20h @ ebp-0x20
 |           ; var int32_t var_1ch @ ebp-0x1c
 |           ; var int32_t var_10h @ ebp-0x10


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/analysis/x86_32 [33mcyclomatic[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's 0x140002510;af;afi~complex[1]
afbi@0x14000253e
' bins/pe/rz-bin.exe
-- stdout
[36m@@ -1,2 +1,8 @@[0m
 67
[91m-0x14000253e 0x14000255e 00:0000 32 s 0x140002579 s 0x14000255e s 0x1400025e1 s 0x14000258c s 0x1400025a1 s 0x1400025b6 s 0x1400025c9
[0m[92m+opaddr: 0x14000253e
[0m[92m+addr: 0x14000253e
[0m[92m+size: 32
[0m[92m+inputs: 1
[0m[92m+outputs: 7
[0m[92m+ninstr: 6
[0m[92m+traced: false
[0m

[**]                                db/analysis/tricore    10553 OK       867 BR      156 XX        9 FX
[**]                                    db/analysis/z80    10554 OK       867 BR      156 XX        9 FX

[A[2K[31m[XX][0m db/analysis/x86_32 [33mhang-on-aa/-aac fix (#15004)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e analysis.vars.stackname=true
aa
e asm.var=false
pdb
' bins/pe/15004.file
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ entry0 (int32_t arg_40h, int32_t arg_44h);
[0m[92m+/ 337: entry0 (int32_t arg_40h, int32_t arg_44h);
[0m |           0x006453a1      e8d8170000     call  fcn.00646b7e
 |           0x006453a6      8d642444       lea   esp, [arg_44h]
 |       ,=< 0x006453aa      0f85a6300000   jne   0x648456


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/analysis/sparc [33mcyclomatic sparc[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's main
af
afi~complex[1]
afbi@main
' bins/elf/elf-Linux-SparcV8-bash
-- stdout
[36m@@ -1,2 +1,10 @@[0m
 165
[91m-0x0002bca0 0x0002bccc 00:0000 44 j 0x0002c534 f 0x0002bccc
[0m[92m+jump: 0x0002c534
[0m[92m+fail: 0x0002bccc
[0m[92m+opaddr: 0x0002bca0
[0m[92m+addr: 0x0002bca0
[0m[92m+size: 44
[0m[92m+inputs: 0
[0m[92m+outputs: 2
[0m[92m+ninstr: 13
[0m[92m+traced: false
[0m


[A[2K[31m[XX][0m db/analysis/sparc [33mafb sparc[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
s sym.zwrite
af
afb
?e
pdf
' bins/elf/elf-Linux-SparcV8-bash
-- stdout
[36m@@ -9,7 +9,7 @@[0m
 0x000a0dec 0x000a0e04 00:0000 24 j 0x000a0d98 f 0x000a0e04
 0x000a0e04 0x000a0e0c 00:0000 8
 
[91m-/ sym.zwrite (int fd, const char *ptr, size_t nbytes);
[0m[92m+/ 140: sym.zwrite (int fd, const char *ptr, size_t nbytes);
[0m |           ; arg int fd @ i0
 |           ; arg const char *ptr @ i1
 |           ; arg size_t nbytes @ i2


[**]                                 db/analysis/xtensa    10563 OK       867 BR      159 XX        9 FX
[**]                                   db/analysis/m68k    10564 OK       867 BR      159 XX        9 FX
[**]                                 db/analysis/x86_32    10575 OK       868 BR      159 XX        9 FX
[**]                         db/analysis/tms320.c64x_32    10591 OK       868 BR      159 XX        9 FX
[**]                                     db/analysis/sh    10594 OK       868 BR      159 XX        9 FX
[**]                             db/analysis/arm.gnu_16    10613 OK       868 BR      159 XX        9 FX

[A[2K[31m[XX][0m db/analysis/vars [33mVariable access with misc registers (x86)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -a x86 -b 64 -Qc 'e asm.flags=false
e asm.bytes=true
e analysis.vars.stackname=true
e analysis.cc=ms
wx 488bc448895808488970104889781841574881ecb00000008364242000488d48884c8d9c24b0000000498b5b10498b7318498b7b20498be3415fc3
af
aaef
afvx
pdf
' -
-- stdout
[36m@@ -14,7 +14,7 @@[0m
    var_18h  0x7
    var_10h  0xb
    var_a0h
[91m-/ fcn.00000000 ();
[0m[92m+/ 59: fcn.00000000 ();
[0m |           ; var int64_t var_c0h @ rsp+0x20
 |           ; var int64_t var_a0h @ rsp+0x40
 |           ; var int64_t var_30h @ rsp+0xb0



[A[2K[31m[XX][0m db/analysis/vars [33mVariable access with misc registers (ARM)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -a arm -b 16 -Qc 'e asm.bytes=true
e asm.flags=false
e asm.comments=false
e analysis.vars.stackname=true
wx 80b483b000af78600b467b8013467b707b78002b03d07a887b689a6103e07b881a047b689a6100bf0c37bd465df8047b7047
af
aaef
afvx
pdf
' -
-- stdout
[36m@@ -16,7 +16,7 @@[0m
     var_eh  0xa
     var_fh  0xe
     var_4h
[91m-/ fcn.00000000 (int16_t arg1, int16_t arg2, int16_t arg3);
[0m[92m+/ 50: fcn.00000000 (int16_t arg1, int16_t arg2, int16_t arg3);
[0m |           ; var int16_t var_10h @ sp+0x0
 |           ; var int8_t var_fh @ sp+0x1
 |           ; var int16_t var_eh @ sp+0x2



[A[2K[31m[XX][0m db/analysis/vars [33mDetect register args used only by callee[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=x86
e asm.bits=64
e analysis.cc=ms
wx 40534883ec20418bd8e80a00000003c34883c4205bc3cccc2bca8bc1c3
aa
pd 13
' -
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00000000 (int64_t arg1, int64_t arg2, int64_t arg3);
[0m[92m+/ 22: fcn.00000000 (int64_t arg1, int64_t arg2, int64_t arg3);
[0m |           ; arg int64_t arg1 @ rcx
 |           ; arg int64_t arg2 @ rdx
 |           ; arg int64_t arg3 @ r8
[36m@@ -13,7 +13,7 @@[0m
             0x00000016      cc             int3
             0x00000017      cc             int3
             ; CALL XREF from fcn.00000000 @ 0x9
[91m-/ fcn.00000018 (int64_t arg1, int64_t arg2);
[0m[92m+/ 5: fcn.00000018 (int64_t arg1, int64_t arg2);
[0m |           ; arg int64_t arg1 @ rcx
 |           ; arg int64_t arg2 @ rdx
 |           0x00000018      2bca           sub   ecx, edx              ; arg2


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K
[**]                                   db/analysis/6502    10619 OK       868 BR      162 XX        9 FX
[**]                                   db/analysis/vars    10620 OK       868 BR      162 XX        9 FX
[**]                                   db/analysis/sysz    10628 OK       868 BR      162 XX        9 FX
[**]                                   db/analysis/mips    10634 OK       868 BR      162 XX        9 FX
[**]                                  db/analysis/arm64    10640 OK       868 BR      162 XX        9 FX
[**]                                  db/analysis/mach0    10641 OK       868 BR      162 XX        9 FX
[**]                                db/analysis/classes    10649 OK       868 BR      162 XX        9 FX
[**]                                   db/analysis/8051    10659 OK       868 BR      162 XX        9 FX
[**]                                  db/analysis/chip8    10670 OK       868 BR      162 XX        9 FX
[**]                                 db/analysis/msp430    10672 OK       869 BR      162 XX        9 FX
[**]                                   db/analysis/path    10673 OK       869 BR      162 XX        9 FX
[**]                                   db/analysis/snes    10684 OK       870 BR      162 XX        9 FX
[**]                                 db/analysis/x86_16    10685 OK       870 BR      162 XX        9 FX
[**]                                    db/analysis/ppc    10688 OK       870 BR      162 XX        9 FX
[**]                                   db/analysis/v850    10694 OK       870 BR      162 XX        9 FX
[**]                               db/analysis/noreturn    10698 OK       871 BR      162 XX        9 FX
[**]                                  db/analysis/m680x    10742 OK       874 BR      162 XX        9 FX
[**]                                    db/analysis/arm    10746 OK       874 BR      162 XX        9 FX
[**]                                 db/analysis/dalvik    10747 OK       874 BR      162 XX        9 FX

[A[2K[31m[XX][0m db/analysis/x86_64 [33mlea pseudo improvements (pseudo enabled)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
e asm.comments=false
e asm.pseudo=true
wx 544889e5b40266b83333b85555444448b8bebafecaefbeadde4889d8488d03488b4308488d4308488d041b488d441b0a488d430a488d44240c488d450b488d45f5488d442404488d4508488d45f8
aa
pd 19
' -
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00000000 (int64_t arg_8h, int64_t arg_bh, int64_t arg_ch);
[0m[92m+/ 512: fcn.00000000 (int64_t arg_8h, int64_t arg_bh, int64_t arg_ch);
[0m |           ; var int64_t var_bh @ rbp-0xb
 |           ; var int64_t var_8h @ rbp-0x8
 |           ; arg int64_t arg_8h @ rbp+0x8


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/analysis/x86_64 [33mlea pseudo improvements (pseudo disabled)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.arch=x86
e asm.bits=64
e asm.comments=false
e asm.pseudo=false
wx 544889e5b40266b83333b85555444448b8bebafecaefbeadde4889d8488d03488b4308488d4308488d041b488d441b0a488d430a488d44240c488d450b488d45f5488d442404488d4508488d45f8
aa
pd 19
' -
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00000000 (int64_t arg_8h, int64_t arg_bh, int64_t arg_ch);
[0m[92m+/ 512: fcn.00000000 (int64_t arg_8h, int64_t arg_bh, int64_t arg_ch);
[0m |           ; var int64_t var_bh @ rbp-0xb
 |           ; var int64_t var_8h @ rbp-0x8
 |           ; arg int64_t arg_8h @ rbp+0x8


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K
[**]                                db/analysis/hexagon    10749 OK       874 BR      164 XX        9 FX

[A[2K[31m[XX][0m db/analysis/x86_64 [33mMicrosoft x64 CC Args/Vars[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.comments=0
e analysis.vars.stackname=true
s 0x140001080
e analysis.cc=ms
af
pdf
' bins/pe/testx64.exe
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.140001080 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4);
[0m[92m+/ 82: fcn.140001080 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4);
[0m |           ; var int64_t var_50h @ rsp+0x20
 |           ; var int64_t var_20h @ rsp+0x50
 |           ; var int64_t var_18h @ rsp+0x58



[A[2K[31m[XX][0m db/analysis/x86_64 [33mbasic block overlaps function start[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
e io.cache=true
wx b821c10010ebf9
s 3
af; afi; ?e; afb; ?e; pdr; ?e; agf; ?e; pdf
?e
e asm.bb.middle=false
pd 2 @ 0
?e
e asm.bb.middle=true
pd 3 @ 0
' -
-- stdout
[36m@@ -29,10 +29,11 @@[0m
 0x00000005 0x00000007 00:0000 2 j 0x00000000
 
 | ; CODE XREF from fcn.00000003 @ 0x5
[91m-| ;-- (0x00000003) fcn.00000003:
[0m | 0x00000000  ~   b821c10010     mov   eax, 0x1000c121
[92m+/ 9: fcn.00000003 ();
[0m[92m+| 0x00000003      0010           add   byte [rax], dl
[0m | ----------- true: 0x00000005
[91m-/ fcn.00000003 ();
[0m[92m+/ 9: fcn.00000003 ();
[0m | 0x00000003      0010           add   byte [rax], dl
 | ----------- true: 0x00000005
 | 0x00000005      ebf9           jmp   0
[36m@@ -43,10 +44,11 @@[0m
 |    |
 |.-------------------------------------.   .-----------------------.
 ||  0x0                                |   |  0x3                  |
[91m-|| ; CODE XREF from fcn.00000003 @ 0x5 |   | fcn.00000003 ();      |
[0m[91m-|| ;-- (0x00000003) fcn.00000003:      |   | add byte [rax], dl    |
[0m[91m-|| mov eax, 0x1000c121                 |   `-----------------------'
[0m[91m-|`-------------------------------------'       v
[0m[92m+|| ; CODE XREF from fcn.00000003 @ 0x5 |   | 9: fcn.00000003 ();   |
[0m[92m+|| mov eax, 0x1000c121                 |   | add byte [rax], dl    |
[0m[92m+|| 9: fcn.00000003 ();                 |   `-----------------------'
[0m[92m+|| add byte [rax], dl                  |       v
[0m[92m+|`-------------------------------------'       |
[0m |    v                                         |
 |    |                                         |
 |    '----------------------------.            |
[36m@@ -60,17 +62,17 @@[0m
 |                             |
 `-----------------------------'
 
[91m-/ fcn.00000003 ();
[0m[92m+/ 9: fcn.00000003 ();
[0m |           0x00000003      0010           add   byte [rax], dl
 |           0x00000005      ebf9           jmp   0
 
 |           ; CODE XREF from fcn.00000003 @ 0x5
[91m-|           ;-- (0x00000003) fcn.00000003:
[0m |           0x00000000  ~   b821c10010     mov   eax, 0x1000c121
[91m-|           0x00000005      ebf9           jmp   0
[0m[92m+/ 9: fcn.00000003 ();
[0m[92m+|           0x00000003      0010           add   byte [rax], dl
[0m 
 |           ; CODE XREF from fcn.00000003 @ 0x5
 |           0x00000000  ~   b821c10010     mov   eax, 0x1000c121
[91m-/ fcn.00000003 ();
[0m[92m+/ 9: fcn.00000003 ();
[0m |           0x00000003      0010           add   byte [rax], dl
 |           0x00000005      ebf9           jmp   0



[A[2K[31m[XX][0m db/analysis/x86_64 [33moverlapping basic blocks and analysis.jmp.mid[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
e analysis.nopskip=false
e asm.bb.middle=true
e analysis.jmp.mid=true
e io.cache=true
"(show_fcn bin; wx $0; af-*; af; afi; ?e; afb; ?e; pdr; ?e; agf; ?e; e asm.bb.middle=true; pdf; ?e; e asm.bb.middle=false; pdf)"
.(show_fcn b8210000c1ebfdbb2c000000cc)
?e
.(show_fcn b8210000c1ebfdbb2c000000ebf6)
?e
.(show_fcn b8210000c1ebfdbb2c000000ebf7)
?e
.(show_fcn 0f1f440000b8210000c1ebfdbb2c000000ebf0)
' -
-- stdout
[36m@@ -27,7 +27,7 @@[0m
 0x00000000 0x00000007 00:0000 7 j 0x00000004
 0x00000004 0x0000000d 00:0000 9
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 16: fcn.00000000 ();
[0m | 0x00000000      b8210000c1     mov   eax, 0xc1000021                 ; '!'
 | 0x00000005      ebfd           jmp   4
 | ----------- true: 0x00000004
[36m@@ -40,7 +40,7 @@[0m
 [0x00000000]>  # fcn.00000000 ();
       .------------------------.
       |  0x0                   |
[91m-      | fcn.00000000 ();       |
[0m[92m+      | 16: fcn.00000000 ();   |
[0m       | ; '!'                  |
       | mov eax, 0xc1000021    |
       | jmp 4                  |
[36m@@ -58,14 +58,14 @@[0m
 | int3                                |
 `-------------------------------------'
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 16: fcn.00000000 ();
[0m |           0x00000000  ~   b8210000c1     mov   eax, 0xc1000021       ; '!'
 |           ; CODE XREF from fcn.00000000 @ 0x5
 |       .-> 0x00000004      c1ebfd         shr   ebx, 0xfd
 |           0x00000007      bb2c000000     mov   ebx, 0x2c             ; ','
 \           0x0000000c      cc             int3
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 16: fcn.00000000 ();
[0m |           0x00000000      b8210000c1     mov   eax, 0xc1000021       ; '!'
 |       `=< 0x00000005      ebfd           jmp   4
 |           0x00000007      bb2c000000     mov   ebx, 0x2c             ; ','
[36m@@ -100,7 +100,7 @@[0m
 0x00000000 0x00000007 00:0000 7 j 0x00000004
 0x00000004 0x0000000e 00:0000 10 j 0x00000004
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 17: fcn.00000000 ();
[0m | 0x00000000      b8210000c1     mov   eax, 0xc1000021                 ; '!'
 | 0x00000005      ebfd           jmp   4
 | ----------- true: 0x00000004
[36m@@ -113,7 +113,7 @@[0m
 [0x00000000]>  # fcn.00000000 ();
           .------------------------.
           |  0x0                   |
[91m-          | fcn.00000000 ();       |
[0m[92m+          | 17: fcn.00000000 ();   |
[0m           | ; '!'                  |
           | mov eax, 0xc1000021    |
           | jmp 4                  |
[36m@@ -139,14 +139,14 @@[0m
 |    |
 `----'
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 17: fcn.00000000 ();
[0m |           0x00000000  ~   b8210000c1     mov   eax, 0xc1000021       ; '!'
 |           ; CODE XREFS from fcn.00000000 @ 0x5, 0xc
 |      ..-> 0x00000004      c1ebfd         shr   ebx, 0xfd
 |       :   0x00000007      bb2c000000     mov   ebx, 0x2c             ; ','
 \       `=< 0x0000000c      ebf6           jmp   4
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 17: fcn.00000000 ();
[0m |           0x00000000      b8210000c1     mov   eax, 0xc1000021       ; '!'
 |      `==< 0x00000005      ebfd           jmp   4
 |       :   0x00000007      bb2c000000     mov   ebx, 0x2c             ; ','
[36m@@ -182,7 +182,7 @@[0m
 0x00000004 0x0000000e 00:0000 10 j 0x00000005
 0x00000005 0x00000007 00:0000 2 j 0x00000004
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 17: fcn.00000000 ();
[0m | 0x00000000      b8210000c1     mov   eax, 0xc1000021                 ; '!'
 | ----------- true: 0x00000005
 | ; CODE XREF from fcn.00000000 @ 0x5
[36m@@ -197,7 +197,7 @@[0m
 [0x00000000]>  # fcn.00000000 ();
        .------------------------.
        |  0x0                   |
[91m-       | fcn.00000000 ();       |
[0m[92m+       | 17: fcn.00000000 ();   |
[0m        | ; '!'                  |
        | mov eax, 0xc1000021    |
        `------------------------'
[36m@@ -226,7 +226,7 @@[0m
 |    |
 `----'
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 17: fcn.00000000 ();
[0m |           0x00000000  ~   b8210000c1     mov   eax, 0xc1000021       ; '!'
 |           ; CODE XREF from fcn.00000000 @ 0x5
 |       .-> 0x00000004  ~   c1ebfd         shr   ebx, 0xfd
[36m@@ -235,7 +235,7 @@[0m
 |      :    0x00000007      bb2c000000     mov   ebx, 0x2c             ; ','
 \      `==< 0x0000000c      ebf7           jmp   5
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 17: fcn.00000000 ();
[0m |           0x00000000      b8210000c1     mov   eax, 0xc1000021       ; '!'
 |       |   ; CODE XREF from fcn.00000000 @ 0xc
 |      .`=< 0x00000005      ebfd           jmp   4
[36m@@ -273,7 +273,7 @@[0m
 0x00000005 0x0000000c 00:0000 7 j 0x00000009
 0x00000009 0x00000013 00:0000 10 j 0x00000003
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 24: fcn.00000000 ();
[0m | 0x00000000      0f1f440000     nop   dword [rax + rax]
 | ----------- true: 0x00000005
 | ; CODE XREF from fcn.00000000 @ 0x11
[36m@@ -291,7 +291,7 @@[0m
 [0x00000000]>  # fcn.00000000 ();
        .--------------------------.
        |  0x0                     |
[91m-       | fcn.00000000 ();         |
[0m[92m+       | 24: fcn.00000000 ();     |
[0m        | nop dword [rax + rax]    |
        `--------------------------'
            v
[36m@@ -330,7 +330,7 @@[0m
 |    |
 `----'
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 24: fcn.00000000 ();
[0m |           0x00000000  ~   0f1f440000     nop   dword [rax + rax]
 |           ; CODE XREF from fcn.00000000 @ 0x11
 |       .-> 0x00000003      0000           add   byte [rax], al
[36m@@ -340,7 +340,7 @@[0m
 |       :   0x0000000c      bb2c000000     mov   ebx, 0x2c             ; ','
 \       `=< 0x00000011      ebf0           jmp   3
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 24: fcn.00000000 ();
[0m |           0x00000000      0f1f440000     nop   dword [rax + rax]
 |       :   0x00000005      b8210000c1     mov   eax, 0xc1000021       ; '!'
 |      `==< 0x0000000a      ebfd           jmp   9



[A[2K[31m[XX][0m db/analysis/x86_64 [33mr_analysis_fcn_split_bb FITFCNSZ fix (#12008)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.arch=x86
e asm.bytes=true
e asm.bits=64
e analysis.jmp.mid=false
e io.cache=true
wx b8210000c1ebfdbb2c000000000
af
afi
?e
afb
?e
e asm.bb.middle=true
pdf
?e
e asm.bb.middle=false
pdf
' -
-- stdout
[36m@@ -27,11 +27,11 @@[0m
 0x00000000 0x00000004 00:0000 4 j 0x00000004
 0x00000004 0x00000007 00:0000 3 j 0x00000004
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 7: fcn.00000000 ();
[0m |           0x00000000  ~   b8210000c1     mov   eax, 0xc1000021       ; '!'
 |           ; CODE XREF from fcn.00000000 @ 0x5
 \       .-> 0x00000004      c1ebfd         shr   ebx, 0xfd
 
[91m-/ fcn.00000000 ();
[0m[92m+/ 7: fcn.00000000 ();
[0m |           0x00000000      b8210000c1     mov   eax, 0xc1000021       ; '!'
 \       `=< 0x00000005      ebfd           jmp   4



[A[2K[31m[XX][0m db/analysis/x86_64 [33mrefs with afr[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
e asm.lines.bb=false
e asm.lines.fcn=false
e analysis.jmp.cref=true
aa
afr
pd 1 @0x400730
pd 1 @0x4007f0
pd 1 @0x400610
' bins/elf/crackme
-- stdout
[36m@@ -1,8 +1,8 @@[0m
   ; DATA XREF from entry0 @ 0x4005cf
[91m-sym.__libc_csu_fini ();
[0m[92m+2: sym.__libc_csu_fini ();
[0m 0x00400730      f3c3           ret
 ; CODE XREF from sym.__do_global_ctors_aux @ 0x4007fd
 0x004007f0      4883eb08       sub   rbx, 8
   ; CALL XREF from sym._fini @ 0x40080c
[91m-sym.__do_global_dtors_aux ();
[0m[92m+100: sym.__do_global_dtors_aux ();
[0m 0x00400610      55             push  rbp


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K

[A[2K[31m[XX][0m db/analysis/x86_64 [33mafva for fastcall with no esp vars[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
aa
s sym.fastcaslled
afc fastcall
afc
afva
pdf
' bins/elf/analysis/fast
-- stdout
[36m@@ -1,6 +1,6 @@[0m
 fastcall
             ; CALL XREF from main @ 0x80484c7
[91m-/ sym.fastcaslled (int32_t arg1, int32_t arg2, int32_t arg_8h, int32_t arg_ch);
[0m[92m+/ 59: sym.fastcaslled (int32_t arg1, int32_t arg2, int32_t arg_8h, int32_t arg_ch);
[0m |           ; var int32_t var_20h @ ebp-0x20
 |           ; var int32_t var_1ch @ ebp-0x1c
 |           ; var int32_t var_10h @ ebp-0x10


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K
[**]                                  db/analysis/sparc    10830 OK       875 BR      170 XX        9 FX

[A[2K[31m[XX][0m db/analysis/x86_64 [33mMixed reg/stack callee arguments type matching[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
s 0x14000b54c
aei
aeim
af
aft
pdf
' bins/pe/testapp-msvc64.exe
-- stdout
[36m@@ -1,5 +1,5 @@[0m
             ;-- rip:
[91m-/ fcn.14000b54c ();
[0m[92m+/ 59: fcn.14000b54c ();
[0m |           ; var DWORD dwCreationDisposition @ rsp+0x20
 |           ; var DWORD dwFlagsAndAttributes @ rsp+0x28
 |           ; var HANDLE hTemplateFile @ rsp+0x30



[A[2K[31m[XX][0m db/analysis/x86_64 [33m⁝ and XREF cmt[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e scr.utf8=true
e asm.bytes=false
s main
af
s sym.imp.puts
?e
pd 3
' bins/elf/strenc-ctrlchars
-- stdout
[36m@@ -1,6 +1,6 @@[0m
 
         ╎   ; CALL XREF from main @ 0x400406
[91m-┌ int sym.imp.puts (const char *s);
[0m[92m+┌ 6: int sym.imp.puts (const char *s);
[0m └       ╎   0x004003f0      jmp   qword [reloc.puts]                   ; [0x601018:8]=0x4003f6
         ╎   0x004003f6      push  0
         └─< 0x004003fb      jmp   sym..plt



[A[2K[31m[XX][0m db/analysis/x86_64 [33manalysis/fcn_subname[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's 0x0040042c
af
afi~name
pd 1~sym.call_gmon_start:0
' bins/elf/analysis/main-g
-- stdout
[36m@@ -1,2 +1,2 @@[0m
 name: sym.call_gmon_start
[91m-/ sym.call_gmon_start ();
[0m[92m+/ 23: sym.call_gmon_start ();
[0m


[A[2K[31m[XX][0m db/analysis/x86_64 [33manalysis/fcn_name[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's 0x0040042c
af
pd 1~sym.call_gmon_start:0
' bins/elf/analysis/main-g
-- stdout
[36m@@ -1 +1 @@[0m
[91m-/ sym.call_gmon_start ();
[0m[92m+/ 23: sym.call_gmon_start ();
[0m


[A[2K[31m[XX][0m db/analysis/x86_64 [33miS. and iSj. implementation[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 's 0x188
iS.
s 0x08058000
iS.
s 0x760
iSj.
' bins/elf/lab1B
-- stdout
[36m@@ -2,7 +2,7 @@[0m
 
 nth paddr       size vaddr       vsize perm name               type flags
 -------------------------------------------------------------------------
[91m-0   0x00000188  0x24 0x08048188   0x24 -r-- .note.gnu.build-id NOTE alloc
[0m[92m+0   0x00000188  0x24 0x08048188   0x24 -r-- .note.gnu.build_id NOTE alloc,
[0m 
 Current section
 



[A[2K[31m[XX][0m db/analysis/x86_64 [33mreflines in noreturn[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.sub.rel=false
e asm.bytes=false
e asm.leahints=false
e scr.utf8=false
e scr.color=false
e asm.lines.wide=true
e asm.comments=0
aaa >/dev/null
s 0x00012740
pdf
' bins/elf/analysis/ls-alxchk
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00012740 (int64_t arg1, int64_t arg2);
[0m[92m+/ 76: fcn.00012740 (int64_t arg1, int64_t arg2);
[0m |           ; var int64_t var_8h @ rbp-0x8
 |           ; arg int64_t arg1 @ rdi
 |           ; arg int64_t arg2 @ rsi


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
rz_config_set: variable 'asm.leahints' not found
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.

[**]                                    db/analysis/arc    10938 OK       881 BR      176 XX        9 FX
[**]                                    db/formats/java    10945 OK       881 BR      176 XX        9 FX
[**]                                  db/formats/menuet    10948 OK       881 BR      176 XX        9 FX
[**]                                     db/formats/nes    10951 OK       881 BR      176 XX        9 FX

[A[2K[31m[XX][0m db/analysis/x86_64 [33mblock takeover[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.comments=false
e asm.bytes=true
e asm.var=false
aac
pdr @ 0x00487350
s 0x0040f710
afvx
aei
aeim
dr rsi=0x1111111111111111
11ds
afvd
' bins/elf/static-glibc-2.27
-- stdout
[36m@@ -1,4 +1,4 @@[0m
[91m-/ fcn.00487350 ();
[0m[92m+/ 114: fcn.00487350 ();
[0m | 0x00487350      8b8710030000   mov   eax, dword [rdi + 0x310]
 | 0x00487356      48b900000000.  movabs rcx, 0x200000000
 | 0x00487360      8d50ff         lea   edx, [rax - 1]



[A[2K[31m[XX][0m db/formats/mangling/bin [33mc++ xref demangling (xref from fcn)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.var=false
e asm.bytes=false
aa
s sym.__x86.get_pc_thunk.bx
e asm.demangle=true
pd 1
?e
agf
?e
e asm.demangle=false
pd 1
?e
s 0x08049390
e asm.demangle=true
pd 1
?e
e asm.demangle=false
pd 1
' bins/elf/abcde-qt32
-- stdout
[36m@@ -3,7 +3,7 @@[0m
             ; CALL XREF from QString::QString(char const*) @ 0x804939d ; method.QString.QString_char_const
             ; CALL XREF from QString::~QString() @ 0x80493e5 ; method.QString._QString
             ; CALL XREF from sym._fini @ 0x80495d4
[91m-/ sym.__x86.get_pc_thunk.bx ();
[0m[92m+/ 4: sym.__x86.get_pc_thunk.bx ();
[0m |           0x08049140      mov   ebx, dword [esp]
 
 [0x08049140]>  # sym.__x86.get_pc_thunk.bx ();
[36m@@ -17,7 +17,7 @@[0m
 |   ; CALL XREF from QString::~QString() @ 0x80493e5           |
 |     ; method.QString._QString                                |
 |   ; CALL XREF from sym._fini @ 0x80495d4                     |
[91m-| sym.__x86.get_pc_thunk.bx ();                                |
[0m[92m+| 4: sym.__x86.get_pc_thunk.bx ();                             |
[0m | mov ebx, dword [esp]                                         |
 | ret                                                          |
 `--------------------------------------------------------------'
[36m@@ -27,7 +27,7 @@[0m
             ; CALL XREF from method.QString.QString_char_const @ 0x804939d
             ; CALL XREF from method.QString._QString @ 0x80493e5
             ; CALL XREF from sym._fini @ 0x80495d4
[91m-/ sym.__x86.get_pc_thunk.bx ();
[0m[92m+/ 4: sym.__x86.get_pc_thunk.bx ();
[0m |           0x08049140      mov   ebx, dword [esp]
 
 |           ; CODE XREFS from QtPrivate::RefCount::deref() @ 0x8049371, 0x804937e


-- stderr
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K
[**]                       db/formats/mangling/mangling    11041 OK       881 BR      178 XX        9 FX
[**]                          db/formats/mangling/swift    11045 OK       881 BR      178 XX       10 FX

[A[2K[31m[XX][0m db/formats/mangling/bin [33mc++ xref demangling (xref not from fcn)[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.var=false
e asm.bytes=false
aaa
e asm.demangle=true
pd 1 @ sym.imp._Unwind_Resume
?e
e asm.demangle=false
pd 1 @ sym.imp._Unwind_Resume
' bins/elf/redpill
-- stdout
[36m@@ -2,12 +2,12 @@[0m
             ; CALL XREF from fcn.00001717 @ +0xbb
             ; CALL XREF from std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&) @ +0x66 ; sym.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string_char___void__char___char___std::allocator_char__const
             ; CALL XREF from void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) @ +0x116 ; sym.void_std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::_M_construct_char___char___char___std::forward_iterator_tag
[91m-/ sym.imp._Unwind_Resume ();
[0m[92m+/ 6: sym.imp._Unwind_Resume ();
[0m \           0x00000f10      jmp   dword [ebx + 0x70]
 
             ; CALL XREF from main @ +0x222
             ; CALL XREF from fcn.00001717 @ +0xbb
             ; CALL XREF from sym.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string_char___void__char___char___std::allocator_char__const @ +0x66
             ; CALL XREF from sym.void_std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::_M_construct_char___char___char___std::forward_iterator_tag @ +0x116
[91m-/ sym.imp._Unwind_Resume ();
[0m[92m+/ 6: sym.imp._Unwind_Resume ();
[0m \           0x00000f10      jmp   dword [ebx + 0x70]


-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K[ ] Analyze function calls (aac)[[x] Analyze function calls (aac)
[ ] Analyze len bytes of instructions for references (aar)[[x] Analyze len bytes of instructions for references (aar)
[ ] Check for vtables[[x] Check for vtables
[ ] Type matching analysis for all functions (aaft)[[x] Type matching analysis for all functions (aaft)
[ ] Propagate noreturn information[[x] Propagate noreturn information
[ ] Use -AA or aaaa to perform additional experimental analysis.[[x] Use -AA or aaaa to perform additional experimental analysis.

[**]                          db/formats/vsf/rhps-norom    11061 OK       881 BR      179 XX       10 FX
[**]                                     db/formats/sms    11062 OK       881 BR      179 XX       10 FX
[**]                        db/formats/vsf/rambo2-norom    11063 OK       881 BR      179 XX       10 FX
[**]                            db/formats/vsf/rhps-rom    11066 OK       881 BR      179 XX       10 FX
[**]                          db/formats/vsf/rambo2-rom    11067 OK       881 BR      179 XX       10 FX
[**]                           db/formats/mangling/rust    11075 OK       881 BR      179 XX       10 FX

[A[2K[31m[XX][0m db/formats/coff [33mtiny coff2[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'e asm.bytes=true
om
is~text
s sym.__1FooBar__QAE_XZ
pd 2
' bins/coff/coff2.obj
-- stdout
[36m@@ -1,16 +1,16 @@[0m
[91m- 9 fd: 3 +0x0000017c 0x00000000 - 0x000000ee --- fmap..drectve-0
[0m[91m- 8 fd: 3 +0x0000026b 0x000000f0 - 0x00000b9f r-- fmap..debug_S-1
[0m[91m- 7 fd: 3 +0x00000d1b 0x00000ba0 - 0x00000c13 r-- fmap..debug_T-2
[0m[91m- 6 fd: 3 +0x00000d8f 0x00000c20 - 0x00000c4c r-x fmap..text_mn-3
[0m[91m- 5 fd: 3 +0x00000dbc 0x00000c50 - 0x00000d23 r-- fmap..debug_S-4
[0m[91m- 4 fd: 3 +0x00000ec2 0x00000d30 - 0x00000d59 r-x fmap..text_mn-5
[0m[91m- 3 fd: 3 +0x00000eec 0x00000d60 - 0x00000e33 r-- fmap..debug_S-6
[0m[91m- 2 fd: 3 +0x00000ff2 0x00000e40 - 0x00000e43 r-- fmap..rtc_IMZ-7
[0m[91m- 1 fd: 3 +0x00001000 0x00000e50 - 0x00000e53 r-- fmap..rtc_TMZ-8
[0m[92m+ 9 fd: 3 +0x0000017c 0x00000000 - 0x000000ee --- fmap..drectve_0
[0m[92m+ 8 fd: 3 +0x0000026b 0x000000f0 - 0x00000b9f r-- fmap..debug_S_1
[0m[92m+ 7 fd: 3 +0x00000d1b 0x00000ba0 - 0x00000c13 r-- fmap..debug_T_2
[0m[92m+ 6 fd: 3 +0x00000d8f 0x00000c20 - 0x00000c4c r-x fmap..text_mn_3
[0m[92m+ 5 fd: 3 +0x00000dbc 0x00000c50 - 0x00000d23 r-- fmap..debug_S_4
[0m[92m+ 4 fd: 3 +0x00000ec2 0x00000d30 - 0x00000d59 r-x fmap..text_mn_5
[0m[92m+ 3 fd: 3 +0x00000eec 0x00000d60 - 0x00000e33 r-- fmap..debug_S_6
[0m[92m+ 2 fd: 3 +0x00000ff2 0x00000e40 - 0x00000e43 r-- fmap..rtc_IMZ_7
[0m[92m+ 1 fd: 3 +0x00001000 0x00000e50 - 0x00000e53 r-- fmap..rtc_TMZ_8
[0m 0   0x00000d8f 0x00000c20 LOCAL  SECT 4        .text$mn
 0   0x00000ec2 0x00000d30 LOCAL  SECT 4        .text$mn
             ;-- section..text_mn_5:
             ;-- .text$mn:
             ;-- ??1FooBar@@QAE@XZ:
[91m-            0x00000d30      55             push  ebp                   ; [05] -r-x section size 42 named .text_mn-5
[0m[92m+            0x00000d30      55             push  ebp                   ; [05] -r-x section size 42 named .text_mn_5
[0m             0x00000d31      8bec           mov   ebp, esp


-- stderr
Warning: please run rizin with -e io.cache=true to patch relocations


[A[2K[31m[XX][0m db/formats/coff [33mtiny coff[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc om;is;ir bins/coff/coff.obj
-- stdout
[36m@@ -1,5 +1,5 @@[0m
[91m- 2 fd: 3 +0x00000064 0x00000000 - 0x00000026 r-x fmap..text-0
[0m[91m- 1 fd: 3 +0x0000008b 0x00000030 - 0x0000004b r-- fmap..data-1
[0m[92m+ 2 fd: 3 +0x00000064 0x00000000 - 0x00000026 r-x fmap..text_0
[0m[92m+ 1 fd: 3 +0x0000008b 0x00000030 - 0x0000004b r-- fmap..data_1
[0m [Symbols]
 
 nth paddr      vaddr      bind   type size lib name


-- stderr
Warning: please run rizin with -e io.cache=true to patch relocations


[A[2K[31m[XX][0m db/formats/coff [33mtifdir imports and sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'ii
iS
' bins/coff/tif_dir.obj
-- stdout
[36m@@ -32,15 +32,15 @@[0m
 
 nth paddr         size vaddr        vsize perm name
 ---------------------------------------------------
[91m-0   0x000001cc    0x2f 0x00000000    0x2f ---- .drectve-0
[0m[91m-1   0x000001fb  0x8670 0x00000030  0x8670 -r-- .debug_S-1
[0m[91m-2   0x0000ad73    0x70 0x000086a0    0x70 -r-- .debug_T-2
[0m[91m-3   0x0000ade3   0x625 0x00008710   0x625 -rw- .data-3
[0m[91m-4   0x0000b408    0x54 0x00008d40    0x54 -r-- .rdata-4
[0m[91m-5   0x00000000     0x8 0x00008da0     0x8 -rw- .bss-5
[0m[91m-6   0x0000b45c  0x2895 0x00008db0  0x2895 -r-x .text_mn-6
[0m[91m-7   0x0000e967     0x8 0x0000b650     0x8 -r-- .rdata-7
[0m[91m-8   0x0000e96f     0x4 0x0000b660     0x4 -r-- .rdata-8
[0m[91m-9   0x0000e973     0x8 0x0000b670     0x8 -r-- .rdata-9
[0m[91m-10  0x0000e97b     0x4 0x0000b680     0x4 -r-- .rdata-10
[0m[92m+0   0x000001cc    0x2f 0x00000000    0x2f ---- .drectve_0 
[0m[92m+1   0x000001fb  0x8670 0x00000030  0x8670 -r-- .debug_S_1 
[0m[92m+2   0x0000ad73    0x70 0x000086a0    0x70 -r-- .debug_T_2 
[0m[92m+3   0x0000ade3   0x625 0x00008710   0x625 -rw- .data_3    
[0m[92m+4   0x0000b408    0x54 0x00008d40    0x54 -r-- .rdata_4   
[0m[92m+5   0x00000000     0x8 0x00008da0     0x8 -rw- .bss_5     
[0m[92m+6   0x0000b45c  0x2895 0x00008db0  0x2895 -r-x .text_mn_6 
[0m[92m+7   0x0000e967     0x8 0x0000b650     0x8 -r-- .rdata_7   
[0m[92m+8   0x0000e96f     0x4 0x0000b660     0x4 -r-- .rdata_8   
[0m[92m+9   0x0000e973     0x8 0x0000b670     0x8 -r-- .rdata_9   
[0m[92m+10  0x0000e97b     0x4 0x0000b680     0x4 -r-- .rdata_10  
[0m 


-- stderr
Warning: please run rizin with -e io.cache=true to patch relocations

[**]                                    db/formats/coff    11093 OK       881 BR      182 XX       10 FX
[**]                                     db/formats/smd    11098 OK       881 BR      182 XX       10 FX
[**]                                     db/formats/gbc    11099 OK       881 BR      182 XX       10 FX
[**]                                   db/formats/ninds    11100 OK       881 BR      182 XX       10 FX
[**]                                      db/formats/ne    11105 OK       881 BR      182 XX       10 FX
[**]                                    db/formats/zimg    11106 OK       881 BR      182 XX       10 FX
[**]                                     db/formats/z64    11107 OK       881 BR      182 XX       10 FX
[**]                                     db/formats/xbe    11112 OK       883 BR      182 XX       10 FX
[**]                            db/formats/mach0/leb128    11113 OK       883 BR      182 XX       10 FX
[**]                             db/formats/mach0/fatio    11123 OK       883 BR      182 XX       10 FX
[**]                            db/formats/mangling/bin    11127 OK       883 BR      182 XX       10 FX
[**]                             db/formats/mach0/thumb    11128 OK       883 BR      182 XX       10 FX
[**]                            db/formats/mach0/create    11130 OK       883 BR      182 XX       11 FX

[A[2K[31m[XX][0m db/formats/mach0/mach0 [33mmach0 sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/mach0/hello-osx-x86_64
-- stdout
[36m@@ -2,12 +2,12 @@[0m
 
 nth paddr       size vaddr        vsize perm name                     type                     flags
 ----------------------------------------------------------------------------------------------------
[91m-0   0x00000ed0  0x53 0x100000ed0   0x53 -r-x 0.__TEXT.__text          REGULAR                  PURE_INSTRUCTIONS,SOME_INSTRUCTIONS
[0m[91m-1   0x00000f24   0xc 0x100000f24    0xc -r-x 1.__TEXT.__symbol_stub1  SYMBOL_STUBS             PURE_INSTRUCTIONS,SOME_INSTRUCTIONS
[0m[92m+0   0x00000ed0  0x53 0x100000ed0   0x53 -r-x 0.__TEXT.__text          REGULAR                  PURE_INSTRUCTIONS,SOME_INSTRUCTIONS,
[0m[92m+1   0x00000f24   0xc 0x100000f24    0xc -r-x 1.__TEXT.__symbol_stub1  SYMBOL_STUBS             PURE_INSTRUCTIONS,SOME_INSTRUCTIONS,
[0m 2   0x00000f30   0xc 0x100000f30    0xc -r-x 2.__TEXT.__cstring       CSTRING_LITERALS         
[91m-3   0x00000f3c  0x24 0x100000f3c   0x24 -r-x 3.__TEXT.__stub_helper   REGULAR                  PURE_INSTRUCTIONS,SOME_INSTRUCTIONS
[0m[92m+3   0x00000f3c  0x24 0x100000f3c   0x24 -r-x 3.__TEXT.__stub_helper   REGULAR                  PURE_INSTRUCTIONS,SOME_INSTRUCTIONS,
[0m 4   0x00000f60  0x54 0x100000f60   0x54 -r-x 4.__TEXT.__unwind_info   REGULAR                  
[91m-5   0x00000fb8  0x48 0x100000fb8   0x48 -r-x 5.__TEXT.__eh_frame      COALESCED                NO_TOC,STRIP_STATIC_SYMS
[0m[92m+5   0x00000fb8  0x48 0x100000fb8   0x48 -r-x 5.__TEXT.__eh_frame      COALESCED                NO_TOC,STRIP_STATIC_SYMS,
[0m 6   0x00001000  0x28 0x100001000   0x28 -rw- 6.__DATA.__program_vars  REGULAR                  
 7   0x00001028  0x10 0x100001028   0x10 -rw- 7.__DATA.__nl_symbol_ptr NON_LAZY_SYMBOL_POINTERS 
 8   0x00001038  0x10 0x100001038   0x10 -rw- 8.__DATA.__la_symbol_ptr LAZY_SYMBOL_POINTERS     


[**]                               db/formats/mach0/fcn    11136 OK       883 BR      183 XX       11 FX
[**]                             db/formats/mach0/mach0    11143 OK       883 BR      183 XX       11 FX
[**]                             db/formats/mach0/swift    11147 OK       883 BR      183 XX       11 FX
[**]                 db/formats/mach0/coresymbolication    11153 OK       883 BR      183 XX       11 FX
[**]                          db/formats/mach0/fatmach0    11185 OK       883 BR      183 XX       11 FX
[**]                              db/formats/mach0/objc    11186 OK       883 BR      183 XX       11 FX
[**]                            db/formats/elf/crackme3    11188 OK       883 BR      183 XX       11 FX
[**]                      db/formats/mach0/entitlements    11189 OK       883 BR      183 XX       11 FX
[**]                               db/formats/elf/riscv    11193 OK       883 BR      183 XX       11 FX
[**]                                 db/formats/elf/avr    11195 OK       883 BR      183 XX       11 FX
[**]                                 db/formats/elf/obj    11196 OK       889 BR      183 XX       11 FX
[**]                               db/formats/elf/thumb    11207 OK       890 BR      183 XX       11 FX
[**]                           db/formats/elf/ls-alxchk    11209 OK       890 BR      183 XX       11 FX
[**]                                db/formats/elf/tiny    11210 OK       890 BR      183 XX       11 FX
[**]                              db/formats/elf/serial    11211 OK       890 BR      183 XX       11 FX
[**]                              db/formats/elf/create    11214 OK       890 BR      183 XX       11 FX
[**]                                db/formats/elf/code    11215 OK       890 BR      183 XX       11 FX
[**]                          db/formats/elf/dynimports    11216 OK       890 BR      183 XX       11 FX
[**]                                db/formats/elf/m68k    11219 OK       890 BR      183 XX       11 FX
[**]                               db/formats/elf/crash    11220 OK       890 BR      183 XX       11 FX
[**]                      db/formats/elf/elf-mosquitoes    11220 OK       891 BR      183 XX       11 FX
[**]                              db/formats/elf/elf-nx    11222 OK       891 BR      183 XX       11 FX

[A[2K[31m[XX][0m db/formats/elf/helloworld-gcc-elf [33mbase64 metadata commands[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc C* bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -1,7 +1,7 @@[0m
 CCu base64:WzI5XSAtLS0tIHNlY3Rpb24gc2l6ZSA1OTkgbmFtZWQgLnN0cnRhYg== @ 0x00000000
 CCu base64:WzAxXSAtci0tIHNlY3Rpb24gc2l6ZSAxOSBuYW1lZCAuaW50ZXJw @ 0x08048134
[91m-CCu base64:WzAyXSAtci0tIHNlY3Rpb24gc2l6ZSAzMiBuYW1lZCAubm90ZS5BQkktdGFn @ 0x08048148
[0m[91m-CCu base64:WzAzXSAtci0tIHNlY3Rpb24gc2l6ZSAzNiBuYW1lZCAubm90ZS5nbnUuYnVpbGQtaWQ= @ 0x08048168
[0m[92m+CCu base64:WzAyXSAtci0tIHNlY3Rpb24gc2l6ZSAzMiBuYW1lZCAubm90ZS5BQklfdGFn @ 0x08048148
[0m[92m+CCu base64:WzAzXSAtci0tIHNlY3Rpb24gc2l6ZSAzNiBuYW1lZCAubm90ZS5nbnUuYnVpbGRfaWQ= @ 0x08048168
[0m CCu base64:WzA0XSAtci0tIHNlY3Rpb24gc2l6ZSAzMiBuYW1lZCAuZ251Lmhhc2g= @ 0x0804818c
 CCu base64:WzA1XSAtci0tIHNlY3Rpb24gc2l6ZSA4MCBuYW1lZCAuZHluc3lt @ 0x080481ac
 CCu base64:WzA2XSAtci0tIHNlY3Rpb24gc2l6ZSA3NCBuYW1lZCAuZHluc3Ry @ 0x080481fc



[A[2K[31m[XX][0m db/formats/elf/helloworld-gcc-elf [33mmetadata[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc C bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -1,7 +1,7 @@[0m
 0x00000000 CCu "[29] ---- section size 599 named .strtab"
 0x08048134 CCu "[01] -r-- section size 19 named .interp"
[91m-0x08048148 CCu "[02] -r-- section size 32 named .note.ABI-tag"
[0m[91m-0x08048168 CCu "[03] -r-- section size 36 named .note.gnu.build-id"
[0m[92m+0x08048148 CCu "[02] -r-- section size 32 named .note.ABI_tag"
[0m[92m+0x08048168 CCu "[03] -r-- section size 36 named .note.gnu.build_id"
[0m 0x0804818c CCu "[04] -r-- section size 32 named .gnu.hash"
 0x080481ac CCu "[05] -r-- section size 80 named .dynsym"
 0x080481fc CCu "[06] -r-- section size 74 named .dynstr"



[A[2K[31m[XX][0m db/formats/elf/helloworld-gcc-elf [33mx86 - init_array detection2[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS~init_array bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -1 +1 @@[0m
[91m-18  0x0000059c    0x4 0x0804959c    0x4 -rw- .init_array        INIT_ARRAY write,alloc
[0m[92m+18  0x0000059c    0x4 0x0804959c    0x4 -rw- .init_array        INIT_ARRAY write,alloc,
[0m

[**]                  db/formats/elf/helloworld-gcc-elf    11238 OK       891 BR      186 XX       11 FX
[**]                         db/formats/elf/versioninfo    11240 OK       891 BR      186 XX       11 FX
[**]                             db/formats/elf/symbols    11249 OK       891 BR      186 XX       11 FX

[A[2K[31m[XX][0m db/formats/elf/sections [33msections list[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS;iSS bins/elf/analysis/main_wrong_sect
-- stdout
[36m@@ -3,37 +3,37 @@[0m
 nth paddr        size vaddr       vsize perm name               type       flags
 --------------------------------------------------------------------------------
 0   0x00000000    0x0 0x00000000    0x0 ----                    NULL       
[91m-1   0x00000200   0x1c 0x00404500   0x1c -r-- .interp            PROGBITS   alloc
[0m[91m-2   0x0000021c   0x20 0x0040021c   0x20 -r-- .note.ABI-tag      NOTE       alloc
[0m[91m-3   0x0000023c   0x24 0x0040023c   0x24 -r-- .note.gnu.build-id NOTE       alloc
[0m[91m-4   0x00000260   0x1c 0x00400260   0x1c -r-- .gnu.hash          GNU_HASH   alloc
[0m[91m-5   0x00000280   0x60 0x00400280   0x60 -r-- .dynsym            DYNSYM     alloc
[0m[91m-6   0x000002e0   0x3d 0x004002e0   0x3d -r-- .dynstr            STRTAB     alloc
[0m[91m-7   0x0000031e    0x8 0x0040031e    0x8 -r-- .gnu.version       VERSYM     alloc
[0m[91m-8   0x00000328   0x20 0x00400328   0x20 -r-- .gnu.version_r     VERNEED    alloc
[0m[91m-9   0x00000348   0x18 0x00400348   0x18 -r-- .rela.dyn          RELA       alloc
[0m[91m-10  0x00000360   0x48 0x00400360   0x48 -r-- .rela.plt          RELA       alloc
[0m[91m-11  0x000003a8   0x1a 0x004003a8   0x1a -r-x .init              PROGBITS   alloc,execute
[0m[91m-12  0x000003d0   0x40 0x004003d0   0x40 -r-x .plt               PROGBITS   alloc,execute
[0m[91m-13  0x00000410  0x1a2 0x00410570  0x1a2 -r-x .text              PROGBITS   alloc,execute
[0m[91m-14  0x000005b4    0x9 0x004005b4    0x9 -r-x .fini              PROGBITS   alloc,execute
[0m[91m-15  0x000005c0   0x10 0x004005c0   0x10 -r-- .rodata            PROGBITS   alloc
[0m[91m-16  0x000005d0   0x34 0x004005d0   0x34 -r-- .eh_frame_hdr      PROGBITS   alloc
[0m[91m-17  0x00000608   0xd4 0x00400608   0xd4 -r-- .eh_frame          PROGBITS   alloc
[0m[91m-18  0x000006e0    0x8 0x006006e0    0x8 -rw- .init_array        INIT_ARRAY write,alloc
[0m[91m-19  0x000006e8    0x8 0x006006e8    0x8 -rw- .fini_array        FINI_ARRAY write,alloc
[0m[91m-20  0x000006f0    0x8 0x006006f0    0x8 -rw- .jcr               PROGBITS   write,alloc
[0m[91m-21  0x000006f8  0x1d0 0x006006f8  0x1d0 -rw- .dynamic           DYNAMIC    write,alloc
[0m[91m-22  0x000008c8    0x8 0x006008c8    0x8 -rw- .got               PROGBITS   write,alloc
[0m[91m-23  0x000008d0   0x30 0x006008d0   0x30 -rw- .got.plt           PROGBITS   write,alloc
[0m[91m-24  0x00000900   0x10 0x00600900   0x10 -rw- .data              PROGBITS   write,alloc
[0m[91m-25  0x00000910    0x0 0x00600910    0x8 -rw- .bss               NOBITS     write,alloc
[0m[91m-26  0x00000910   0x22 0x00000000   0x22 ---- .comment           PROGBITS   merge,strings
[0m[92m+1   0x00000200   0x1c 0x00404500   0x1c -r-- .interp            PROGBITS   alloc,
[0m[92m+2   0x0000021c   0x20 0x0040021c   0x20 -r-- .note.ABI_tag      NOTE       alloc,
[0m[92m+3   0x0000023c   0x24 0x0040023c   0x24 -r-- .note.gnu.build_id NOTE       alloc,
[0m[92m+4   0x00000260   0x1c 0x00400260   0x1c -r-- .gnu.hash          GNU_HASH   alloc,
[0m[92m+5   0x00000280   0x60 0x00400280   0x60 -r-- .dynsym            DYNSYM     alloc,
[0m[92m+6   0x000002e0   0x3d 0x004002e0   0x3d -r-- .dynstr            STRTAB     alloc,
[0m[92m+7   0x0000031e    0x8 0x0040031e    0x8 -r-- .gnu.version       VERSYM     alloc,
[0m[92m+8   0x00000328   0x20 0x00400328   0x20 -r-- .gnu.version_r     VERNEED    alloc,
[0m[92m+9   0x00000348   0x18 0x00400348   0x18 -r-- .rela.dyn          RELA       alloc,
[0m[92m+10  0x00000360   0x48 0x00400360   0x48 -r-- .rela.plt          RELA       alloc,
[0m[92m+11  0x000003a8   0x1a 0x004003a8   0x1a -r-x .init              PROGBITS   alloc,execute,
[0m[92m+12  0x000003d0   0x40 0x004003d0   0x40 -r-x .plt               PROGBITS   alloc,execute,
[0m[92m+13  0x00000410  0x1a2 0x00410570  0x1a2 -r-x .text              PROGBITS   alloc,execute,
[0m[92m+14  0x000005b4    0x9 0x004005b4    0x9 -r-x .fini              PROGBITS   alloc,execute,
[0m[92m+15  0x000005c0   0x10 0x004005c0   0x10 -r-- .rodata            PROGBITS   alloc,
[0m[92m+16  0x000005d0   0x34 0x004005d0   0x34 -r-- .eh_frame_hdr      PROGBITS   alloc,
[0m[92m+17  0x00000608   0xd4 0x00400608   0xd4 -r-- .eh_frame          PROGBITS   alloc,
[0m[92m+18  0x000006e0    0x8 0x006006e0    0x8 -rw- .init_array        INIT_ARRAY write,alloc,
[0m[92m+19  0x000006e8    0x8 0x006006e8    0x8 -rw- .fini_array        FINI_ARRAY write,alloc,
[0m[92m+20  0x000006f0    0x8 0x006006f0    0x8 -rw- .jcr               PROGBITS   write,alloc,
[0m[92m+21  0x000006f8  0x1d0 0x006006f8  0x1d0 -rw- .dynamic           DYNAMIC    write,alloc,
[0m[92m+22  0x000008c8    0x8 0x006008c8    0x8 -rw- .got               PROGBITS   write,alloc,
[0m[92m+23  0x000008d0   0x30 0x006008d0   0x30 -rw- .got.plt           PROGBITS   write,alloc,
[0m[92m+24  0x00000900   0x10 0x00600900   0x10 -rw- .data              PROGBITS   write,alloc,
[0m[92m+25  0x00000910    0x0 0x00600910    0x8 -rw- .bss               NOBITS     write,alloc,
[0m[92m+26  0x00000910   0x22 0x00000000   0x22 ---- .comment           PROGBITS   merge,strings,
[0m 27  0x00000940   0xd0 0x00000000   0xd0 ---- .debug_aranges     PROGBITS   
 28  0x00000a10  0x188 0x00000000  0x188 ---- .debug_info        PROGBITS   
 29  0x00000b98   0x76 0x00000000   0x76 ---- .debug_abbrev      PROGBITS   
 30  0x00000c0e  0x149 0x00000000  0x149 ---- .debug_line        PROGBITS   
[91m-31  0x00000d57   0x8a 0x00000000   0x8a ---- .debug_str         PROGBITS   merge,strings
[0m[92m+31  0x00000d57   0x8a 0x00000000   0x8a ---- .debug_str         PROGBITS   merge,strings,
[0m 32  0x00000df0   0x80 0x00000000   0x80 ---- .debug_ranges      PROGBITS   
 33  0x00000e70  0x156 0x00000000  0x156 ---- .shstrtab          STRTAB     
 34  0x000018c8  0x6d8 0x00000000  0x6d8 ---- .symtab            SYMTAB     


[**]                            db/formats/elf/sections    11257 OK       891 BR      187 XX       11 FX
[**]                                 db/formats/elf/pie    11258 OK       891 BR      187 XX       11 FX
[**]                 db/formats/elf/helloworld-phdr-elf    11268 OK       891 BR      187 XX       11 FX
[**]                              db/formats/elf/simple    11271 OK       891 BR      187 XX       11 FX
[**]                                db/formats/elf/core    11272 OK       892 BR      187 XX       11 FX
[**]                        db/formats/elf/elf-xnorelro    11274 OK       892 BR      187 XX       11 FX
[**]                  db/formats/elf/elf-phdrlinuxtrick    11275 OK       894 BR      187 XX       11 FX
[**]                             db/formats/elf/strings    11276 OK       898 BR      187 XX       11 FX
[**]                                db/formats/elf/v850    11278 OK       898 BR      187 XX       11 FX
[**]                                db/formats/elf/main    11292 OK       898 BR      187 XX       11 FX
[**]                               db/formats/elf/reloc    11301 OK       898 BR      187 XX       11 FX
[**]                                db/formats/elf/bomb    11302 OK       898 BR      187 XX       11 FX

[A[2K[31m[XX][0m db/formats/elf/elf-relro [33mELF: corkami elf-relro - sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS~rel bins/elf/analysis/elf-relro
-- stdout
[36m@@ -1,2 +1,2 @@[0m
[91m-9   0x0000027c    0x8 0x0804827c    0x8 -r-- .rel.dyn           REL        alloc
[0m[91m-10  0x00000284   0x10 0x08048284   0x10 -r-- .rel.plt           REL        alloc
[0m[92m+9   0x0000027c    0x8 0x0804827c    0x8 -r-- .rel.dyn           REL        alloc,
[0m[92m+10  0x00000284   0x10 0x08048284   0x10 -r-- .rel.plt           REL        alloc,
[0m

[**]                            db/formats/elf/crackme7    11308 OK       898 BR      188 XX       11 FX
[**]                           db/formats/elf/elf-relro    11310 OK       898 BR      188 XX       11 FX
[**]                          db/formats/elf/elf-relarm    11313 OK       898 BR      188 XX       11 FX
[**]                                 db/analysis/x86_64    11317 OK       898 BR      188 XX       11 FX

[A[2K[31m[XX][0m db/formats/nro [33mnro sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -e io.cache=true -Qc iS bins/nro/appstore.nro
-- stdout
[36m@@ -2,9 +2,9 @@[0m
 
 nth paddr           size vaddr          vsize perm name
 -------------------------------------------------------
[91m-0   0x00000000      0x80 0x00000000      0x80 -r-- header
[0m[91m-1   0x0021d000       0x0 0x0021d000       0x0 -r-- sig0
[0m[91m-2   0x00000000  0x1b4000 0x00000000  0x1b4000 -r-x text
[0m[91m-3   0x001b4000   0x5a000 0x001b4000   0x5a000 -r-- ro
[0m[91m-4   0x0020e000    0xf000 0x0020e000    0xf000 -rw- data
[0m[92m+0   0x00000000      0x80 0x00000000      0x80 -r-- header 
[0m[92m+1   0x0021d000       0x0 0x0021d000       0x0 -r-- sig0   
[0m[92m+2   0x00000000  0x1b4000 0x00000000  0x1b4000 -r-x text   
[0m[92m+3   0x001b4000   0x5a000 0x001b4000   0x5a000 -r-- ro     
[0m[92m+4   0x0020e000    0xf000 0x0020e000    0xf000 -rw- data   
[0m 


-- stderr
magic 14000020 at 0x0
Invalid MOD0 address
Base Address 0x00000000
BSS Size 0x0001e000

[**]                                     db/formats/nro    11321 OK       898 BR      189 XX       11 FX
[**]                                    db/formats/msil    11324 OK       898 BR      189 XX       11 FX
[**]                                    db/formats/bflt    11325 OK       898 BR      189 XX       11 FX
[**]                                     db/formats/prg    11326 OK       898 BR      189 XX       11 FX
[**]                                     db/formats/gba    11327 OK       898 BR      189 XX       11 FX
[**]                                     db/formats/psx    11328 OK       898 BR      189 XX       11 FX
[**]                                     db/formats/dol    11333 OK       898 BR      189 XX       11 FX

[A[2K[31m[XX][0m db/formats/qnx [33msections of qnx[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/qnx/test.x
-- stdout
[36m@@ -2,6 +2,6 @@[0m
 
 nth paddr        size vaddr       vsize perm name
 -------------------------------------------------
[91m-0   0x00000044   0xf6 0x00000044   0xf6 ---- LMF_LOAD
[0m[91m-1   0x00000152  0x6c3 0x00000152  0x6c3 ---- LMF_LOAD
[0m[92m+0   0x00000044   0xf6 0x00000044   0xf6 ---- LMF_LOAD 
[0m[92m+1   0x00000152  0x6c3 0x00000152  0x6c3 ---- LMF_LOAD 
[0m 


[**]                                     db/formats/qnx    11336 OK       898 BR      190 XX       11 FX
[**]                         db/formats/elf/elf-riscv64    11338 OK       898 BR      190 XX       11 FX
[**]                                     db/formats/dex    11362 OK       898 BR      190 XX       11 FX
[**]                                  db/formats/spc700    11363 OK       898 BR      190 XX       11 FX

[A[2K[31m[XX][0m db/formats/le [33mGNUGREP.DLL sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/le/GNUGREP.DLL
-- stdout
[36m@@ -2,15 +2,15 @@[0m
 
 nth paddr         size vaddr        vsize perm name
 ---------------------------------------------------
[91m-0   0x00001600  0x1000 0x00010000  0x1000 -r-x obj.1.page.0
[0m[91m-1   0x00002600  0x1000 0x00011000  0x1000 -r-x obj.1.page.1
[0m[91m-2   0x00003600  0x1000 0x00012000  0x1000 -r-x obj.1.page.2
[0m[91m-3   0x00004600  0x1000 0x00013000  0x1000 -r-x obj.1.page.3
[0m[91m-4   0x00005600  0x1000 0x00014000  0x1000 -r-x obj.1.page.4
[0m[91m-5   0x00006600  0x1000 0x00015000  0x1000 -r-x obj.1.page.5
[0m[91m-6   0x00007600  0x1000 0x00016000  0x1000 -r-x obj.1.page.6
[0m[91m-7   0x00008600   0xe00 0x00017000  0x1000 -r-x obj.1.page.7
[0m[91m-8   0x00009400   0x200 0x00020000  0x1000 -r-x obj.2.page.0
[0m[91m-9   0x00009600   0x200 0x00030000  0x1000 -r-x obj.3.page.0
[0m[91m-10  0x00001400   0x200 0x00040000  0x1000 -rw- obj.4.page.0
[0m[92m+0   0x00001600  0x1000 0x00010000  0x1000 -r-x obj.1.page.0 
[0m[92m+1   0x00002600  0x1000 0x00011000  0x1000 -r-x obj.1.page.1 
[0m[92m+2   0x00003600  0x1000 0x00012000  0x1000 -r-x obj.1.page.2 
[0m[92m+3   0x00004600  0x1000 0x00013000  0x1000 -r-x obj.1.page.3 
[0m[92m+4   0x00005600  0x1000 0x00014000  0x1000 -r-x obj.1.page.4 
[0m[92m+5   0x00006600  0x1000 0x00015000  0x1000 -r-x obj.1.page.5 
[0m[92m+6   0x00007600  0x1000 0x00016000  0x1000 -r-x obj.1.page.6 
[0m[92m+7   0x00008600   0xe00 0x00017000  0x1000 -r-x obj.1.page.7 
[0m[92m+8   0x00009400   0x200 0x00020000  0x1000 -r-x obj.2.page.0 
[0m[92m+9   0x00009600   0x200 0x00030000  0x1000 -r-x obj.3.page.0 
[0m[92m+10  0x00001400   0x200 0x00040000  0x1000 -rw- obj.4.page.0 
[0m 



[A[2K[31m[XX][0m db/formats/le [33mGCC.EXE sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/le/GCC.EXE
-- stdout
[36m@@ -2,22 +2,22 @@[0m
 
 nth paddr         size vaddr           vsize perm name
 ------------------------------------------------------
[91m-0   0x00001000  0x1000 0x00010000     0x1000 -r-x obj.1.page.0
[0m[91m-1   0x00002000  0x1000 0x00011000     0x1000 -r-x obj.1.page.1
[0m[91m-2   0x00003000  0x1000 0x00012000     0x1000 -r-x obj.1.page.2
[0m[91m-3   0x00004000  0x1000 0x00013000     0x1000 -r-x obj.1.page.3
[0m[91m-4   0x00005000  0x1000 0x00014000     0x1000 -r-x obj.1.page.4
[0m[91m-5   0x00006000  0x1000 0x00015000     0x1000 -r-x obj.1.page.5
[0m[91m-6   0x00007000  0x1000 0x00016000     0x1000 -r-x obj.1.page.6
[0m[91m-7   0x00008000  0x1000 0x00017000     0x1000 -r-x obj.1.page.7
[0m[91m-8   0x00009000  0x1000 0x00018000     0x1000 -r-x obj.1.page.8
[0m[91m-9   0x0000a000  0x1000 0x00019000     0x1000 -r-x obj.1.page.9
[0m[91m-10  0x0000b000  0x1000 0x0001a000     0x1000 -r-x obj.1.page.10
[0m[91m-11  0x0000c000  0x1000 0x0001b000     0x1000 -r-x obj.1.page.11
[0m[91m-12  0x0000d000  0x1000 0x0001c000     0x1000 -r-x obj.1.page.12
[0m[91m-13  0x0000e000  0x1000 0x0001d000     0x1000 -r-x obj.1.page.13
[0m[91m-14  0x0000f000  0x1000 0x0001e000     0x1000 -r-x obj.1.page.14
[0m[91m-15  0x00010000  0x1000 0x00020000     0x1000 -rw- obj.2.page.0
[0m[91m-16  0x00000000     0x0 0x00030000  0x2000000 -rw- obj.3
[0m[91m-17  0x00000000     0x0 0x02030000   0x800000 -rw- obj.4
[0m[92m+0   0x00001000  0x1000 0x00010000     0x1000 -r-x obj.1.page.0  
[0m[92m+1   0x00002000  0x1000 0x00011000     0x1000 -r-x obj.1.page.1  
[0m[92m+2   0x00003000  0x1000 0x00012000     0x1000 -r-x obj.1.page.2  
[0m[92m+3   0x00004000  0x1000 0x00013000     0x1000 -r-x obj.1.page.3  
[0m[92m+4   0x00005000  0x1000 0x00014000     0x1000 -r-x obj.1.page.4  
[0m[92m+5   0x00006000  0x1000 0x00015000     0x1000 -r-x obj.1.page.5  
[0m[92m+6   0x00007000  0x1000 0x00016000     0x1000 -r-x obj.1.page.6  
[0m[92m+7   0x00008000  0x1000 0x00017000     0x1000 -r-x obj.1.page.7  
[0m[92m+8   0x00009000  0x1000 0x00018000     0x1000 -r-x obj.1.page.8  
[0m[92m+9   0x0000a000  0x1000 0x00019000     0x1000 -r-x obj.1.page.9  
[0m[92m+10  0x0000b000  0x1000 0x0001a000     0x1000 -r-x obj.1.page.10 
[0m[92m+11  0x0000c000  0x1000 0x0001b000     0x1000 -r-x obj.1.page.11 
[0m[92m+12  0x0000d000  0x1000 0x0001c000     0x1000 -r-x obj.1.page.12 
[0m[92m+13  0x0000e000  0x1000 0x0001d000     0x1000 -r-x obj.1.page.13 
[0m[92m+14  0x0000f000  0x1000 0x0001e000     0x1000 -r-x obj.1.page.14 
[0m[92m+15  0x00010000  0x1000 0x00020000     0x1000 -rw- obj.2.page.0  
[0m[92m+16  0x00000000     0x0 0x00030000  0x2000000 -rw- obj.3         
[0m[92m+17  0x00000000     0x0 0x02030000   0x800000 -rw- obj.4         
[0m 



[A[2K[31m[XX][0m db/formats/le [33mcdogs.exe sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/le/cdogs.exe
-- stdout
[36m@@ -2,65 +2,65 @@[0m
 
 nth paddr         size vaddr        vsize perm name
 ---------------------------------------------------
[91m-0   0x0000d200  0x1000 0x00010000  0x1000 -r-x obj.1.page.0
[0m[91m-1   0x0000e200  0x1000 0x00011000  0x1000 -r-x obj.1.page.1
[0m[91m-2   0x0000f200  0x1000 0x00012000  0x1000 -r-x obj.1.page.2
[0m[91m-3   0x00010200  0x1000 0x00013000  0x1000 -r-x obj.1.page.3
[0m[91m-4   0x00011200  0x1000 0x00014000  0x1000 -r-x obj.1.page.4
[0m[91m-5   0x00012200  0x1000 0x00015000  0x1000 -r-x obj.1.page.5
[0m[91m-6   0x00013200  0x1000 0x00016000  0x1000 -r-x obj.1.page.6
[0m[91m-7   0x00014200  0x1000 0x00017000  0x1000 -r-x obj.1.page.7
[0m[91m-8   0x00015200  0x1000 0x00018000  0x1000 -r-x obj.1.page.8
[0m[91m-9   0x00016200  0x1000 0x00019000  0x1000 -r-x obj.1.page.9
[0m[91m-10  0x00017200  0x1000 0x0001a000  0x1000 -r-x obj.1.page.10
[0m[91m-11  0x00018200  0x1000 0x0001b000  0x1000 -r-x obj.1.page.11
[0m[91m-12  0x00019200  0x1000 0x0001c000  0x1000 -r-x obj.1.page.12
[0m[91m-13  0x0001a200  0x1000 0x0001d000  0x1000 -r-x obj.1.page.13
[0m[91m-14  0x0001b200  0x1000 0x0001e000  0x1000 -r-x obj.1.page.14
[0m[91m-15  0x0001c200  0x1000 0x0001f000  0x1000 -r-x obj.1.page.15
[0m[91m-16  0x0001d200  0x1000 0x00020000  0x1000 -r-x obj.1.page.16
[0m[91m-17  0x0001e200  0x1000 0x00021000  0x1000 -r-x obj.1.page.17
[0m[91m-18  0x0001f200  0x1000 0x00022000  0x1000 -r-x obj.1.page.18
[0m[91m-19  0x00020200  0x1000 0x00023000  0x1000 -r-x obj.1.page.19
[0m[91m-20  0x00021200  0x1000 0x00024000  0x1000 -r-x obj.1.page.20
[0m[91m-21  0x00022200  0x1000 0x00025000  0x1000 -r-x obj.1.page.21
[0m[91m-22  0x00023200  0x1000 0x00026000  0x1000 -r-x obj.1.page.22
[0m[91m-23  0x00024200  0x1000 0x00027000  0x1000 -r-x obj.1.page.23
[0m[91m-24  0x00025200  0x1000 0x00028000  0x1000 -r-x obj.1.page.24
[0m[91m-25  0x00026200  0x1000 0x00029000  0x1000 -r-x obj.1.page.25
[0m[91m-26  0x00027200  0x1000 0x0002a000  0x1000 -r-x obj.1.page.26
[0m[91m-27  0x00028200  0x1000 0x0002b000  0x1000 -r-x obj.1.page.27
[0m[91m-28  0x00029200  0x1000 0x0002c000  0x1000 -r-x obj.1.page.28
[0m[91m-29  0x0002a200  0x1000 0x0002d000  0x1000 -r-x obj.1.page.29
[0m[91m-30  0x0002b200  0x1000 0x0002e000  0x1000 -r-x obj.1.page.30
[0m[91m-31  0x0002c200  0x1000 0x0002f000  0x1000 -r-x obj.1.page.31
[0m[91m-32  0x0002d200  0x1000 0x00030000  0x1000 -r-x obj.1.page.32
[0m[91m-33  0x0002e200  0x1000 0x00031000  0x1000 -r-x obj.1.page.33
[0m[91m-34  0x0002f200  0x1000 0x00032000  0x1000 -r-x obj.1.page.34
[0m[91m-35  0x00030200  0x1000 0x00033000  0x1000 -r-x obj.1.page.35
[0m[91m-36  0x00031200  0x1000 0x00034000  0x1000 -r-x obj.1.page.36
[0m[91m-37  0x00032200  0x1000 0x00035000  0x1000 -r-x obj.1.page.37
[0m[91m-38  0x00033200  0x1000 0x00036000  0x1000 -r-x obj.1.page.38
[0m[91m-39  0x00034200  0x1000 0x00037000  0x1000 -r-x obj.1.page.39
[0m[91m-40  0x00035200  0x1000 0x00038000  0x1000 -r-x obj.1.page.40
[0m[91m-41  0x00036200  0x1000 0x00039000  0x1000 -r-x obj.1.page.41
[0m[91m-42  0x00037200  0x1000 0x0003a000  0x1000 -r-x obj.1.page.42
[0m[91m-43  0x00038200  0x1000 0x0003b000  0x1000 -r-x obj.1.page.43
[0m[91m-44  0x00039200  0x1000 0x0003c000  0x1000 -r-x obj.1.page.44
[0m[91m-45  0x0003a200  0x1000 0x00040000  0x1000 -rw- obj.2.page.0
[0m[91m-46  0x0003b200  0x1000 0x00041000  0x1000 -rw- obj.2.page.1
[0m[91m-47  0x0003c200  0x1000 0x00042000  0x1000 -rw- obj.2.page.2
[0m[91m-48  0x0003d200  0x1000 0x00043000  0x1000 -rw- obj.2.page.3
[0m[91m-49  0x0003e200  0x1000 0x00044000  0x1000 -rw- obj.2.page.4
[0m[91m-50  0x0003f200  0x1000 0x00045000  0x1000 -rw- obj.2.page.5
[0m[91m-51  0x00040200  0x1000 0x00046000  0x1000 -rw- obj.2.page.6
[0m[91m-52  0x00041200  0x1000 0x00047000  0x1000 -rw- obj.2.page.7
[0m[91m-53  0x00042200  0x1000 0x00048000  0x1000 -rw- obj.2.page.8
[0m[91m-54  0x00043200  0x1000 0x00049000  0x1000 -rw- obj.2.page.9
[0m[91m-55  0x00044200  0x1000 0x0004a000  0x1000 -rw- obj.2.page.10
[0m[91m-56  0x00045200  0x1000 0x0004b000  0x1000 -rw- obj.2.page.11
[0m[91m-57  0x00046200  0x1000 0x0004c000  0x1000 -rw- obj.2.page.12
[0m[91m-58  0x00047200  0x1000 0x0004d000  0x1000 -rw- obj.2.page.13
[0m[91m-59  0x00048200  0x1000 0x0004e000  0x1000 -rw- obj.2.page.14
[0m[91m-60  0x00049200   0xd8c 0x0004f000  0x1000 -rw- obj.2.page.15
[0m[92m+0   0x0000d200  0x1000 0x00010000  0x1000 -r-x obj.1.page.0  
[0m[92m+1   0x0000e200  0x1000 0x00011000  0x1000 -r-x obj.1.page.1  
[0m[92m+2   0x0000f200  0x1000 0x00012000  0x1000 -r-x obj.1.page.2  
[0m[92m+3   0x00010200  0x1000 0x00013000  0x1000 -r-x obj.1.page.3  
[0m[92m+4   0x00011200  0x1000 0x00014000  0x1000 -r-x obj.1.page.4  
[0m[92m+5   0x00012200  0x1000 0x00015000  0x1000 -r-x obj.1.page.5  
[0m[92m+6   0x00013200  0x1000 0x00016000  0x1000 -r-x obj.1.page.6  
[0m[92m+7   0x00014200  0x1000 0x00017000  0x1000 -r-x obj.1.page.7  
[0m[92m+8   0x00015200  0x1000 0x00018000  0x1000 -r-x obj.1.page.8  
[0m[92m+9   0x00016200  0x1000 0x00019000  0x1000 -r-x obj.1.page.9  
[0m[92m+10  0x00017200  0x1000 0x0001a000  0x1000 -r-x obj.1.page.10 
[0m[92m+11  0x00018200  0x1000 0x0001b000  0x1000 -r-x obj.1.page.11 
[0m[92m+12  0x00019200  0x1000 0x0001c000  0x1000 -r-x obj.1.page.12 
[0m[92m+13  0x0001a200  0x1000 0x0001d000  0x1000 -r-x obj.1.page.13 
[0m[92m+14  0x0001b200  0x1000 0x0001e000  0x1000 -r-x obj.1.page.14 
[0m[92m+15  0x0001c200  0x1000 0x0001f000  0x1000 -r-x obj.1.page.15 
[0m[92m+16  0x0001d200  0x1000 0x00020000  0x1000 -r-x obj.1.page.16 
[0m[92m+17  0x0001e200  0x1000 0x00021000  0x1000 -r-x obj.1.page.17 
[0m[92m+18  0x0001f200  0x1000 0x00022000  0x1000 -r-x obj.1.page.18 
[0m[92m+19  0x00020200  0x1000 0x00023000  0x1000 -r-x obj.1.page.19 
[0m[92m+20  0x00021200  0x1000 0x00024000  0x1000 -r-x obj.1.page.20 
[0m[92m+21  0x00022200  0x1000 0x00025000  0x1000 -r-x obj.1.page.21 
[0m[92m+22  0x00023200  0x1000 0x00026000  0x1000 -r-x obj.1.page.22 
[0m[92m+23  0x00024200  0x1000 0x00027000  0x1000 -r-x obj.1.page.23 
[0m[92m+24  0x00025200  0x1000 0x00028000  0x1000 -r-x obj.1.page.24 
[0m[92m+25  0x00026200  0x1000 0x00029000  0x1000 -r-x obj.1.page.25 
[0m[92m+26  0x00027200  0x1000 0x0002a000  0x1000 -r-x obj.1.page.26 
[0m[92m+27  0x00028200  0x1000 0x0002b000  0x1000 -r-x obj.1.page.27 
[0m[92m+28  0x00029200  0x1000 0x0002c000  0x1000 -r-x obj.1.page.28 
[0m[92m+29  0x0002a200  0x1000 0x0002d000  0x1000 -r-x obj.1.page.29 
[0m[92m+30  0x0002b200  0x1000 0x0002e000  0x1000 -r-x obj.1.page.30 
[0m[92m+31  0x0002c200  0x1000 0x0002f000  0x1000 -r-x obj.1.page.31 
[0m[92m+32  0x0002d200  0x1000 0x00030000  0x1000 -r-x obj.1.page.32 
[0m[92m+33  0x0002e200  0x1000 0x00031000  0x1000 -r-x obj.1.page.33 
[0m[92m+34  0x0002f200  0x1000 0x00032000  0x1000 -r-x obj.1.page.34 
[0m[92m+35  0x00030200  0x1000 0x00033000  0x1000 -r-x obj.1.page.35 
[0m[92m+36  0x00031200  0x1000 0x00034000  0x1000 -r-x obj.1.page.36 
[0m[92m+37  0x00032200  0x1000 0x00035000  0x1000 -r-x obj.1.page.37 
[0m[92m+38  0x00033200  0x1000 0x00036000  0x1000 -r-x obj.1.page.38 
[0m[92m+39  0x00034200  0x1000 0x00037000  0x1000 -r-x obj.1.page.39 
[0m[92m+40  0x00035200  0x1000 0x00038000  0x1000 -r-x obj.1.page.40 
[0m[92m+41  0x00036200  0x1000 0x00039000  0x1000 -r-x obj.1.page.41 
[0m[92m+42  0x00037200  0x1000 0x0003a000  0x1000 -r-x obj.1.page.42 
[0m[92m+43  0x00038200  0x1000 0x0003b000  0x1000 -r-x obj.1.page.43 
[0m[92m+44  0x00039200  0x1000 0x0003c000  0x1000 -r-x obj.1.page.44 
[0m[92m+45  0x0003a200  0x1000 0x00040000  0x1000 -rw- obj.2.page.0  
[0m[92m+46  0x0003b200  0x1000 0x00041000  0x1000 -rw- obj.2.page.1  
[0m[92m+47  0x0003c200  0x1000 0x00042000  0x1000 -rw- obj.2.page.2  
[0m[92m+48  0x0003d200  0x1000 0x00043000  0x1000 -rw- obj.2.page.3  
[0m[92m+49  0x0003e200  0x1000 0x00044000  0x1000 -rw- obj.2.page.4  
[0m[92m+50  0x0003f200  0x1000 0x00045000  0x1000 -rw- obj.2.page.5  
[0m[92m+51  0x00040200  0x1000 0x00046000  0x1000 -rw- obj.2.page.6  
[0m[92m+52  0x00041200  0x1000 0x00047000  0x1000 -rw- obj.2.page.7  
[0m[92m+53  0x00042200  0x1000 0x00048000  0x1000 -rw- obj.2.page.8  
[0m[92m+54  0x00043200  0x1000 0x00049000  0x1000 -rw- obj.2.page.9  
[0m[92m+55  0x00044200  0x1000 0x0004a000  0x1000 -rw- obj.2.page.10 
[0m[92m+56  0x00045200  0x1000 0x0004b000  0x1000 -rw- obj.2.page.11 
[0m[92m+57  0x00046200  0x1000 0x0004c000  0x1000 -rw- obj.2.page.12 
[0m[92m+58  0x00047200  0x1000 0x0004d000  0x1000 -rw- obj.2.page.13 
[0m[92m+59  0x00048200  0x1000 0x0004e000  0x1000 -rw- obj.2.page.14 
[0m[92m+60  0x00049200   0xd8c 0x0004f000  0x1000 -rw- obj.2.page.15 
[0m 


[**]                             db/formats/mz/ddriving    11383 OK       900 BR      193 XX       11 FX
[**]                                      db/formats/le    11384 OK       900 BR      193 XX       11 FX
[**]                               db/formats/mz/blocks    11388 OK       903 BR      193 XX       11 FX
[**]                               db/formats/mz/chkdsk    11394 OK       903 BR      193 XX       11 FX

[A[2K[31m[XX][0m db/formats/ar [33mar file sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS~:5 ar://bins/ar/libgdbr.a//responses.o
-- stdout
[36m@@ -1 +1 @@[0m
[91m-1   0x00000040  0x147e 0x08000040  0x147e -r-x .text               PROGBITS alloc,execute
[0m[92m+1   0x00000040  0x147e 0x08000040  0x147e -r-x .text               PROGBITS alloc,execute,
[0m

-- stderr
Warning: run rizin with -e io.cache=true to fix relocations in disassembly

[**]                                      db/formats/ar    11394 OK       903 BR      194 XX       11 FX
[**]                                     db/formats/cgc    11399 OK       903 BR      194 XX       11 FX

[A[2K[31m[XX][0m db/formats/omf [33msections 32 bits omf[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/omf/hello_world32
-- stdout
[36m@@ -2,6 +2,6 @@[0m
 
 nth paddr       size vaddr       vsize perm name
 ------------------------------------------------
[91m-0   0x00000074  0x1d 0x00001000   0x1d -rwx .text_1
[0m[91m-1   0x000000a3   0xe 0x0000101d    0xe -rwx .data_1
[0m[92m+0   0x00000074  0x1d 0x00001000   0x1d -rwx .text_1 
[0m[92m+1   0x000000a3   0xe 0x0000101d    0xe -rwx .data_1 
[0m 



[A[2K[31m[XX][0m db/formats/omf [33msections 16 bits omf[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/omf/hello_world
-- stdout
[36m@@ -2,6 +2,6 @@[0m
 
 nth paddr       size vaddr       vsize perm name
 ------------------------------------------------
[91m-0   0x00000073  0x13 0x00001000   0x13 -rwx text_1
[0m[91m-1   0x00000095   0xe 0x00001013    0xe -rwx data_1
[0m[92m+0   0x00000073  0x13 0x00001000   0x13 -rwx text_1 
[0m[92m+1   0x00000095   0xe 0x00001013    0xe -rwx data_1 
[0m 


[**]                                     db/formats/omf    11415 OK       903 BR      196 XX       11 FX
[**]                                db/formats/elf/mips    11416 OK       903 BR      196 XX       11 FX
[**]                                db/formats/mz/cdogs    11420 OK       903 BR      196 XX       11 FX
[**]                                 db/formats/dmp/dmp    11421 OK       903 BR      196 XX       11 FX
[**]                                db/formats/firmware    11443 OK       903 BR      196 XX       11 FX
[**]                                  db/formats/peeble    11444 OK       903 BR      196 XX       11 FX

[A[2K[31m[XX][0m db/formats/nso [33mnso sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -e io.cache=true -Qc iS bins/nso/application.nso
-- stdout
[36m@@ -2,8 +2,8 @@[0m
 
 nth paddr          size vaddr         vsize perm name
 -----------------------------------------------------
[91m-0   0x00000000    0x100 0x00000000    0x100 -r-- header
[0m[91m-1   0x00000100  0x20e18 0x08000000  0x20e18 -r-x text
[0m[91m-2   0x0001718f   0xdb0c 0x08021000   0xdb0c -r-- ro
[0m[91m-3   0x0001f856   0x4218 0x0802f000   0x4218 -rw- data
[0m[92m+0   0x00000000    0x100 0x00000000    0x100 -r-- header 
[0m[92m+1   0x00000100  0x20e18 0x08000000  0x20e18 -r-x text   
[0m[92m+2   0x0001718f   0xdb0c 0x08021000   0xdb0c -r-- ro     
[0m[92m+3   0x0001f856   0x4218 0x0802f000   0x4218 -rw- data   
[0m 


-- stderr
load_bytes in bin.nso must die
MOD Offset = 0x130
magic 30444f4d at 0x130
is mode0
magic 0x30444f4d
dynamic 0x2c1b8
bss 0x330e8 0x3ff48
unwind 0x26f38 0x26f38
-------------
mod 0x130
next 0x2c1b830444f4d
prev 0x3ff48000330e8
base 0xa9bf73fba9bf7bfd
init 0xa8c16bf9a8c163f7
fini 0xa8c17bfda8c173fb
relplt 0x5642fb3c5642f33b
symtab = 0x56408c0456408403
strtab = 0x56408c0456408403
strtabsz = 0x0
BSS Size 0x0000ce60

[**]                                     db/formats/nso    11447 OK       903 BR      197 XX       11 FX
[**]                                   db/formats/plan9    11448 OK       903 BR      197 XX       11 FX
[**]                                db/formats/mz/unzip    11450 OK       903 BR      197 XX       11 FX

[A[2K[31m[XX][0m db/formats/mdmp [33m: sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS~calc bins/mdmp/calc.dmp
-- stdout
[36m@@ -1 +1 @@[0m
[91m-9   0x00000000   0xe3000 0xfffe0000      0xe3000 ---- C:_Windows_System32_calc.exe
[0m[92m+9   0x00000000   0xe3000 0xfffe0000      0xe3000 ---- C:_Windows_System32_calc.exe          
[0m

-- stderr
[WARN] Invalid or unsupported enumeration encountered 21
[WARN] Invalid or unsupported enumeration encountered 22
[INFO] Parsing data sections for large dumps can take time, please be patient (but if strings ain't your thing try with -z)!


[A[2K[31m[XX][0m db/formats/web_assembly [33mWASM: Wasm - sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/wasm/binary.wasm
-- stdout
[36m@@ -2,8 +2,8 @@[0m
 
 nth paddr        size vaddr       vsize perm name
 -------------------------------------------------
[91m-0   0x0000000a   0x10 0x0000000a   0x10 ---- type
[0m[91m-1   0x0000001d   0x2c 0x0000001d   0x2c ---- function
[0m[91m-2   0x0000004d  0x1dc 0x0000004d  0x1dc ---- export
[0m[91m-3   0x0000022d  0x1f6 0x0000022d  0x1f6 ---- code
[0m[92m+0   0x0000000a   0x10 0x0000000a   0x10 ---- type     
[0m[92m+1   0x0000001d   0x2c 0x0000001d   0x2c ---- function 
[0m[92m+2   0x0000004d  0x1dc 0x0000004d  0x1dc ---- export   
[0m[92m+3   0x0000022d  0x1f6 0x0000022d  0x1f6 ---- code     
[0m 


-- stderr
WARNING: No calling convention defined for this file, analysis may be inaccurate.

[**]                            db/formats/web_assembly    11485 OK       903 BR      199 XX       11 FX
[**]                            db/formats/pe/dllnomain    11486 OK       903 BR      199 XX       11 FX
[**]                         db/formats/pe/msvcfindmain    11489 OK       903 BR      199 XX       11 FX
[**]                             db/formats/pe/base_FSG    11493 OK       903 BR      199 XX       11 FX
[**]                         db/formats/pe/d_nonnull-ld    11494 OK       903 BR      199 XX       11 FX
[**]                                    db/formats/mdmp    11495 OK       903 BR      199 XX       11 FX
[**]                           db/formats/pe/nullSOH-XP    11496 OK       903 BR      199 XX       11 FX
[**]                              db/formats/pe/maxvals    11497 OK       903 BR      199 XX       11 FX
[**]                            db/formats/pe/exportobf    11499 OK       903 BR      199 XX       11 FX
[**]                           db/formats/pe/fakerelocs    11508 OK       903 BR      199 XX       11 FX
[**]                          db/formats/pe/hello_world    11510 OK       903 BR      199 XX       11 FX
[**]                              db/formats/pe/nothing    11512 OK       903 BR      199 XX       11 FX
[**]                      db/formats/pe/appendedsecttbl    11513 OK       903 BR      199 XX       11 FX
[**]                      db/formats/pe/dllfakess-dynld    11515 OK       903 BR      199 XX       11 FX
[**]                                 db/formats/pe/mini    11516 OK       903 BR      199 XX       11 FX
[**]                                db/formats/pe/strip    11517 OK       903 BR      199 XX       11 FX
[**]                           db/formats/pe/pdf_zip_pe    11518 OK       903 BR      199 XX       11 FX
[**]                             db/formats/pe/resource    11519 OK       903 BR      199 XX       11 FX
[**]                         db/formats/pe/memshared-ld    11520 OK       903 BR      199 XX       11 FX
[**]                            db/formats/pe/lowsubsys    11521 OK       903 BR      199 XX       11 FX
[**]                        db/formats/pe/resource_icon    11522 OK       903 BR      199 XX       11 FX
[**]                           db/formats/pe/endianness    11523 OK       903 BR      199 XX       11 FX
[**]                           db/formats/pe/d_resource    11524 OK       903 BR      199 XX       11 FX
[**]                             db/formats/pe/secinsec    11525 OK       903 BR      199 XX       11 FX
[**]                               db/formats/pe/tinyW7    11527 OK       903 BR      199 XX       11 FX
[**]                              db/formats/pe/ctxt-ld    11530 OK       903 BR      199 XX       11 FX
[**]                              db/formats/pe/safeseh    11531 OK       903 BR      199 XX       11 FX
[**]                             db/formats/pe/dllbound    11534 OK       903 BR      199 XX       11 FX
[**]                             db/formats/pe/fakeregs    11535 OK       903 BR      199 XX       11 FX
[**]                                db/formats/pe/bigib    11541 OK       903 BR      199 XX       11 FX
[**]                               db/formats/pe/normal    11542 OK       903 BR      199 XX       11 FX
[**]                        db/formats/pe/imports_nnIAT    11543 OK       903 BR      199 XX       11 FX
[**]                        db/formats/pe/namedresource    11544 OK       903 BR      199 XX       11 FX
[**]                      db/formats/pe/imports_relocW7    11545 OK       903 BR      199 XX       11 FX
[**]                     db/formats/pe/relocsstripped64    11546 OK       903 BR      199 XX       11 FX
[**]                                  db/formats/pe/pdf    11547 OK       903 BR      199 XX       11 FX
[**]                     db/formats/pe/dllmaxvals-dynld    11548 OK       903 BR      199 XX       11 FX
[**]                   db/formats/pe/dllbound-redirldXP    11551 OK       903 BR      199 XX       11 FX
[**]                              db/formats/pe/aslr-ld    11554 OK       903 BR      199 XX       11 FX
[**]                           db/formats/pe/ldrsnaps64    11555 OK       903 BR      199 XX       11 FX
[**]                          db/formats/pe/dllnegep-ld    11556 OK       903 BR      199 XX       11 FX
[**]                          db/formats/pe/exportsdata    11557 OK       903 BR      199 XX       11 FX
[**]                         db/formats/pe/dllfwloop-ld    11558 OK       903 BR      199 XX       11 FX
[**]                             db/formats/pe/dllnegep    11559 OK       903 BR      199 XX       11 FX
[**]                              db/formats/pe/tls_k32    11560 OK       903 BR      199 XX       11 FX
[**]                            db/formats/pe/tinyW7x64    11561 OK       903 BR      199 XX       11 FX
[**]                          db/formats/pe/foldedhdrW7    11562 OK       903 BR      199 XX       11 FX
[**]                     db/formats/pe/imports_virtdesc    11563 OK       903 BR      199 XX       11 FX
[**]                           db/formats/pe/exceptions    11564 OK       903 BR      199 XX       11 FX
[**]                           db/formats/pe/slackspace    11565 OK       903 BR      199 XX       11 FX
[**]                                 db/formats/pe/tiny    11566 OK       903 BR      199 XX       11 FX
[**]                      db/formats/pe/dllcfgdup-dynld    11569 OK       903 BR      199 XX       11 FX
[**]                         db/formats/pe/tls_aoiOSDET    11570 OK       903 BR      199 XX       11 FX
[**]                            db/formats/pe/ibrelocW7    11571 OK       903 BR      199 XX       11 FX
[**]                               db/formats/pe/bigsec    11574 OK       903 BR      199 XX       11 FX
[**]                               db/formats/pe/create    11578 OK       904 BR      199 XX       11 FX
[**]                                db/formats/pe/debug    11579 OK       904 BR      199 XX       11 FX
[**]                             db/formats/pe/checksum    11582 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/dllemptyexp    11585 OK       904 BR      199 XX       11 FX
[**]                    db/formats/pe/imports_multidesc    11586 OK       904 BR      199 XX       11 FX
[**]                                    db/formats/pe/b    11587 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/tls_exiting    11588 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/version_std    11589 OK       904 BR      199 XX       11 FX
[**]                               db/formats/pe/nullEP    11592 OK       904 BR      199 XX       11 FX
[**]                     db/formats/pe/dllbound-redirld    11595 OK       904 BR      199 XX       11 FX
[**]                 db/formats/pe/imports_corruptedIAT    11597 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/multiss_drv    11599 OK       904 BR      199 XX       11 FX
[**]                              db/formats/pe/tinygui    11600 OK       904 BR      199 XX       11 FX
[**]                              db/formats/pe/multiss    11601 OK       904 BR      199 XX       11 FX
[**]                              db/formats/pe/hdrdata    11602 OK       904 BR      199 XX       11 FX
[**]                                   db/formats/pe/a2    11606 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/appendedhdr    11608 OK       904 BR      199 XX       11 FX
[**]                      db/formats/pe/tls_entrypoints    11609 OK       904 BR      199 XX       11 FX
[**]                      db/formats/pe/manifest_broken    11611 OK       904 BR      199 XX       11 FX
[**]                            db/formats/pe/dllcfgdup    11613 OK       904 BR      199 XX       11 FX
[**]                         db/formats/pe/import_names    11614 OK       904 BR      199 XX       11 FX
[**]                       db/formats/pe/hiddenappdata1    11615 OK       904 BR      199 XX       11 FX
[**]                               db/formats/pe/reloc9    11617 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/virtrelocXP    11620 OK       904 BR      199 XX       11 FX
[**]                                 db/formats/pe/jman    11623 OK       904 BR      199 XX       11 FX
[**]                                    db/formats/pe/c    11625 OK       904 BR      199 XX       11 FX
[**]                                  db/formats/pe/dep    11626 OK       904 BR      199 XX       11 FX
[**]                                 db/formats/pe/ss63    11627 OK       904 BR      199 XX       11 FX
[**]                       db/formats/pe/dllweirdexp-ld    11628 OK       904 BR      199 XX       11 FX
[**]                     db/formats/pe/imports_bogusIAT    11629 OK       904 BR      199 XX       11 FX
[**]                             db/formats/pe/tls_noEP    11632 OK       904 BR      199 XX       11 FX
[**]                               db/formats/pe/ddsect    11635 OK       904 BR      199 XX       11 FX
[**]                               db/formats/pe/reshdr    11639 OK       904 BR      199 XX       11 FX
[**]                         db/formats/pe/delayimports    11641 OK       904 BR      199 XX       11 FX
[**]                           db/formats/pe/dllmaxvals    11642 OK       904 BR      199 XX       11 FX
[**]                            db/formats/pe/dll-dynld    11645 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/truncsectbl    11646 OK       904 BR      199 XX       11 FX
[**]                       db/formats/pe/imports_tinyXP    11647 OK       904 BR      199 XX       11 FX
[**]                         db/formats/pe/ss63nocookie    11648 OK       904 BR      199 XX       11 FX
[**]                             db/formats/pe/dllfw-ld    11649 OK       904 BR      199 XX       11 FX
[**]                            db/formats/pe/signature    11650 OK       904 BR      199 XX       11 FX
[**]                      db/formats/pe/resource_string    11651 OK       904 BR      199 XX       11 FX
[**]                        db/formats/pe/imports_mixed    11652 OK       904 BR      199 XX       11 FX
[**]                                db/formats/pe/tls64    11653 OK       904 BR      199 XX       11 FX
[**]                        db/formats/pe/exports_order    11654 OK       904 BR      199 XX       11 FX
[**]                             db/formats/pe/dllnoexp    11655 OK       904 BR      199 XX       11 FX
[**]                             db/formats/pe/standard    11656 OK       904 BR      199 XX       11 FX
[**]                        db/formats/pe/imports_vterm    11657 OK       904 BR      199 XX       11 FX
[**]                      db/formats/pe/dllnullep-dynld    11658 OK       904 BR      199 XX       11 FX
[**]                              db/formats/pe/tls_aoi    11659 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/importshint    11660 OK       904 BR      199 XX       11 FX
[**]                            db/formats/pe/copyright    11663 OK       904 BR      199 XX       11 FX
[**]                             db/formats/pe/cfgbogus    11666 OK       904 BR      199 XX       11 FX
[**]                         db/formats/pe/tinydllXP-ld    11667 OK       904 BR      199 XX       11 FX
[**]                           db/formats/pe/tls_virtEP    11668 OK       904 BR      199 XX       11 FX
[**]                          db/formats/pe/versioninfo    11670 OK       904 BR      199 XX       11 FX
[**]                                 db/formats/pe/base    11674 OK       904 BR      199 XX       11 FX

[A[2K[31m[XX][0m db/formats/pe/sectiondata [33mPE: corkami cm01.exe - sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -n -Qc '!rz-bin -S bins/pe/cm01.exe' bins/pe/cm01.exe
-- stdout
[36m@@ -1,11 +1,11 @@[0m
 [Sections]
 
[91m-nth paddr         size vaddr        vsize perm name   type flags
[0m[91m-----------------------------------------------------------------
[0m[91m-0   0x00000600   0x600 0x00401000  0x1000 -r-x CODE        CNT_CODE,MEM_EXECUTE,MEM_READ
[0m[91m-1   0x00000c00   0x200 0x00402000  0x1000 -rw- DATA        CNT_INITIALIZED_DATA,MEM_READ,MEM_WRITE
[0m[91m-2   0x00000e00   0x800 0x00403000  0x1000 -rw- .idata      CNT_INITIALIZED_DATA,MEM_READ,MEM_WRITE
[0m[91m-3   0x00001600   0x200 0x00404000  0x1000 -r-- .edata      CNT_INITIALIZED_DATA,MEM_READ
[0m[91m-4   0x00001800   0x200 0x00405000  0x1000 sr-- .reloc      CNT_INITIALIZED_DATA,MEM_SHARED,MEM_READ
[0m[91m-5   0x00001a00  0x1400 0x00406000  0x2000 sr-- .rsrc       CNT_INITIALIZED_DATA,MEM_SHARED,MEM_READ
[0m[92m+nth paddr         size vaddr        vsize perm name
[0m[92m+---------------------------------------------------
[0m[92m+0   0x00000600   0x600 0x00401000  0x1000 -r-x CODE   
[0m[92m+1   0x00000c00   0x200 0x00402000  0x1000 -rw- DATA   
[0m[92m+2   0x00000e00   0x800 0x00403000  0x1000 -rw- .idata 
[0m[92m+3   0x00001600   0x200 0x00404000  0x1000 -r-- .edata 
[0m[92m+4   0x00001800   0x200 0x00405000  0x1000 sr-- .reloc 
[0m[92m+5   0x00001a00  0x1400 0x00406000  0x2000 sr-- .rsrc  
[0m 


[**]                            db/formats/pe/d_nonnull    11683 OK       904 BR      200 XX       11 FX
[**]                          db/formats/pe/sectiondata    11687 OK       904 BR      200 XX       11 FX
[**]                             db/formats/pe/ldrsnaps    11688 OK       904 BR      200 XX       11 FX
[**]                            db/formats/pe/tls_reloc    11689 OK       904 BR      200 XX       11 FX
[**]                               db/formats/pe/virtEP    11690 OK       904 BR      200 XX       11 FX
[**]                               db/formats/pe/dll-ld    11693 OK       904 BR      200 XX       11 FX
[**]                        db/formats/pe/imports_noext    11694 OK       904 BR      200 XX       11 FX
[**]                         db/formats/pe/virtsectblXP    11697 OK       904 BR      200 XX       11 FX
[**]                               db/formats/pe/dupsec    11698 OK       904 BR      200 XX       11 FX
[**]                              db/formats/pe/dosZMXP    11699 OK       904 BR      200 XX       11 FX
[**]                            db/formats/pe/resource2    11700 OK       904 BR      200 XX       11 FX
[**]                        db/formats/pe/manyimportsW7    11703 OK       904 BR      200 XX       11 FX
[**]                                 db/formats/pe/pe64    11704 OK       904 BR      200 XX       11 FX
[**]                           db/formats/pe/tinydrivXP    11705 OK       904 BR      200 XX       11 FX
[**]                       db/formats/pe/hiddenappdata2    11706 OK       904 BR      200 XX       11 FX
[**]                             db/formats/pe/nullvirt    11707 OK       904 BR      200 XX       11 FX
[**]                            db/formats/pe/dllord-ld    11708 OK       904 BR      200 XX       11 FX
[**]                             db/formats/pe/normal64    11717 OK       904 BR      200 XX       11 FX
[**]                                 db/formats/pe/ioli    11718 OK       904 BR      200 XX       11 FX
[**]                        db/formats/pe/d_resource-ld    11719 OK       904 BR      200 XX       11 FX
[**]                           db/formats/pe/tls_import    11720 OK       904 BR      200 XX       11 FX
[**]                       db/formats/pe/imports_tinyW7    11722 OK       904 BR      200 XX       11 FX
[**]                                  db/formats/pe/tls    11724 OK       904 BR      200 XX       11 FX
[**]                       db/formats/pe/lfanew_relocW7    11726 OK       904 BR      200 XX       11 FX
[**]                         db/formats/pe/dllfakess-ld    11727 OK       904 BR      200 XX       11 FX
[**]                         db/formats/pe/appendeddata    11728 OK       904 BR      200 XX       11 FX
[**]                              db/formats/pe/bigSoRD    11731 OK       904 BR      200 XX       11 FX
[**]                                  db/formats/pe/gui    11732 OK       904 BR      200 XX       11 FX
[**]                      db/formats/pe/imports_nothunk    11733 OK       904 BR      200 XX       11 FX
[**]                        db/formats/pe/manifest_bsod    11734 OK       904 BR      200 XX       11 FX
[**]                                db/formats/pe/quine    11735 OK       904 BR      200 XX       11 FX
[**]                        db/formats/pe/ownexportsdot    11736 OK       904 BR      200 XX       11 FX
[**]                             db/formats/pe/ibnullXP    11737 OK       904 BR      200 XX       11 FX
[**]                                   db/formats/pe/sc    11738 OK       904 BR      200 XX       11 FX
[**]                      db/formats/pe/imports_badterm    11739 OK       904 BR      200 XX       11 FX
[**]                     db/formats/pe/dllnomain2-dynld    11740 OK       904 BR      200 XX       11 FX
[**]                    db/formats/pe/imports_iatindesc    11741 OK       904 BR      200 XX       11 FX
[**]                                    db/formats/pe/a    11742 OK       904 BR      200 XX       11 FX
[**]                              db/formats/pe/seh_x64    11744 OK       904 BR      200 XX       11 FX
[**]                           db/formats/pe/dllnomain2    11745 OK       904 BR      200 XX       11 FX
[**]                        db/formats/pe/bottomsecttbl    11748 OK       904 BR      200 XX       11 FX
[**]                              db/formats/pe/tinydll    11749 OK       904 BR      200 XX       11 FX

[A[2K[31m[XX][0m db/formats/pe/96emptysections [33mPE: corkami 96workingsections.exe - sections list[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -n -Qc '!rz-bin -pS bins/pe/96emptysections.exe' bins/pe/96emptysections.exe
-- stdout
[36m@@ -1,101 +1,101 @@[0m
 [Sections]
 
[91m-nth paddr        size vaddr        vsize perm name    type flags
[0m[91m-----------------------------------------------------------------
[0m[91m-0   0x00001200  0x200 0x00001200  0x1000 -rwx sect_0       MEM_EXECUTE,MEM_WRITE
[0m[91m-1   0x00000000    0x0 0x00000000  0x1000 ---- sect_1       
[0m[91m-2   0x00000000    0x0 0x00000000  0x1000 ---- sect_2       
[0m[91m-3   0x00000000    0x0 0x00000000  0x1000 ---- sect_3       
[0m[91m-4   0x00000000    0x0 0x00000000  0x1000 ---- sect_4       
[0m[91m-5   0x00000000    0x0 0x00000000  0x1000 ---- sect_5       
[0m[91m-6   0x00000000    0x0 0x00000000  0x1000 ---- sect_6       
[0m[91m-7   0x00000000    0x0 0x00000000  0x1000 ---- sect_7       
[0m[91m-8   0x00000000    0x0 0x00000000  0x1000 ---- sect_8       
[0m[91m-9   0x00000000    0x0 0x00000000  0x1000 ---- sect_9       
[0m[91m-10  0x00000000    0x0 0x00000000  0x1000 ---- sect_10      
[0m[91m-11  0x00000000    0x0 0x00000000  0x1000 ---- sect_11      
[0m[91m-12  0x00000000    0x0 0x00000000  0x1000 ---- sect_12      
[0m[91m-13  0x00000000    0x0 0x00000000  0x1000 ---- sect_13      
[0m[91m-14  0x00000000    0x0 0x00000000  0x1000 ---- sect_14      
[0m[91m-15  0x00000000    0x0 0x00000000  0x1000 ---- sect_15      
[0m[91m-16  0x00000000    0x0 0x00000000  0x1000 ---- sect_16      
[0m[91m-17  0x00000000    0x0 0x00000000  0x1000 ---- sect_17      
[0m[91m-18  0x00000000    0x0 0x00000000  0x1000 ---- sect_18      
[0m[91m-19  0x00000000    0x0 0x00000000  0x1000 ---- sect_19      
[0m[91m-20  0x00000000    0x0 0x00000000  0x1000 ---- sect_20      
[0m[91m-21  0x00000000    0x0 0x00000000  0x1000 ---- sect_21      
[0m[91m-22  0x00000000    0x0 0x00000000  0x1000 ---- sect_22      
[0m[91m-23  0x00000000    0x0 0x00000000  0x1000 ---- sect_23      
[0m[91m-24  0x00000000    0x0 0x00000000  0x1000 ---- sect_24      
[0m[91m-25  0x00000000    0x0 0x00000000  0x1000 ---- sect_25      
[0m[91m-26  0x00000000    0x0 0x00000000  0x1000 ---- sect_26      
[0m[91m-27  0x00000000    0x0 0x00000000  0x1000 ---- sect_27      
[0m[91m-28  0x00000000    0x0 0x00000000  0x1000 ---- sect_28      
[0m[91m-29  0x00000000    0x0 0x00000000  0x1000 ---- sect_29      
[0m[91m-30  0x00000000    0x0 0x00000000  0x1000 ---- sect_30      
[0m[91m-31  0x00000000    0x0 0x00000000  0x1000 ---- sect_31      
[0m[91m-32  0x00000000    0x0 0x00000000  0x1000 ---- sect_32      
[0m[91m-33  0x00000000    0x0 0x00000000  0x1000 ---- sect_33      
[0m[91m-34  0x00000000    0x0 0x00000000  0x1000 ---- sect_34      
[0m[91m-35  0x00000000    0x0 0x00000000  0x1000 ---- sect_35      
[0m[91m-36  0x00000000    0x0 0x00000000  0x1000 ---- sect_36      
[0m[91m-37  0x00000000    0x0 0x00000000  0x1000 ---- sect_37      
[0m[91m-38  0x00000000    0x0 0x00000000  0x1000 ---- sect_38      
[0m[91m-39  0x00000000    0x0 0x00000000  0x1000 ---- sect_39      
[0m[91m-40  0x00000000    0x0 0x00000000  0x1000 ---- sect_40      
[0m[91m-41  0x00000000    0x0 0x00000000  0x1000 ---- sect_41      
[0m[91m-42  0x00000000    0x0 0x00000000  0x1000 ---- sect_42      
[0m[91m-43  0x00000000    0x0 0x00000000  0x1000 ---- sect_43      
[0m[91m-44  0x00000000    0x0 0x00000000  0x1000 ---- sect_44      
[0m[91m-45  0x00000000    0x0 0x00000000  0x1000 ---- sect_45      
[0m[91m-46  0x00000000    0x0 0x00000000  0x1000 ---- sect_46      
[0m[91m-47  0x00000000    0x0 0x00000000  0x1000 ---- sect_47      
[0m[91m-48  0x00000000    0x0 0x00000000  0x1000 ---- sect_48      
[0m[91m-49  0x00000000    0x0 0x00000000  0x1000 ---- sect_49      
[0m[91m-50  0x00000000    0x0 0x00000000  0x1000 ---- sect_50      
[0m[91m-51  0x00000000    0x0 0x00000000  0x1000 ---- sect_51      
[0m[91m-52  0x00000000    0x0 0x00000000  0x1000 ---- sect_52      
[0m[91m-53  0x00000000    0x0 0x00000000  0x1000 ---- sect_53      
[0m[91m-54  0x00000000    0x0 0x00000000  0x1000 ---- sect_54      
[0m[91m-55  0x00000000    0x0 0x00000000  0x1000 ---- sect_55      
[0m[91m-56  0x00000000    0x0 0x00000000  0x1000 ---- sect_56      
[0m[91m-57  0x00000000    0x0 0x00000000  0x1000 ---- sect_57      
[0m[91m-58  0x00000000    0x0 0x00000000  0x1000 ---- sect_58      
[0m[91m-59  0x00000000    0x0 0x00000000  0x1000 ---- sect_59      
[0m[91m-60  0x00000000    0x0 0x00000000  0x1000 ---- sect_60      
[0m[91m-61  0x00000000    0x0 0x00000000  0x1000 ---- sect_61      
[0m[91m-62  0x00000000    0x0 0x00000000  0x1000 ---- sect_62      
[0m[91m-63  0x00000000    0x0 0x00000000  0x1000 ---- sect_63      
[0m[91m-64  0x00000000    0x0 0x00000000  0x1000 ---- sect_64      
[0m[91m-65  0x00000000    0x0 0x00000000  0x1000 ---- sect_65      
[0m[91m-66  0x00000000    0x0 0x00000000  0x1000 ---- sect_66      
[0m[91m-67  0x00000000    0x0 0x00000000  0x1000 ---- sect_67      
[0m[91m-68  0x00000000    0x0 0x00000000  0x1000 ---- sect_68      
[0m[91m-69  0x00000000    0x0 0x00000000  0x1000 ---- sect_69      
[0m[91m-70  0x00000000    0x0 0x00000000  0x1000 ---- sect_70      
[0m[91m-71  0x00000000    0x0 0x00000000  0x1000 ---- sect_71      
[0m[91m-72  0x00000000    0x0 0x00000000  0x1000 ---- sect_72      
[0m[91m-73  0x00000000    0x0 0x00000000  0x1000 ---- sect_73      
[0m[91m-74  0x00000000    0x0 0x00000000  0x1000 ---- sect_74      
[0m[91m-75  0x00000000    0x0 0x00000000  0x1000 ---- sect_75      
[0m[91m-76  0x00000000    0x0 0x00000000  0x1000 ---- sect_76      
[0m[91m-77  0x00000000    0x0 0x00000000  0x1000 ---- sect_77      
[0m[91m-78  0x00000000    0x0 0x00000000  0x1000 ---- sect_78      
[0m[91m-79  0x00000000    0x0 0x00000000  0x1000 ---- sect_79      
[0m[91m-80  0x00000000    0x0 0x00000000  0x1000 ---- sect_80      
[0m[91m-81  0x00000000    0x0 0x00000000  0x1000 ---- sect_81      
[0m[91m-82  0x00000000    0x0 0x00000000  0x1000 ---- sect_82      
[0m[91m-83  0x00000000    0x0 0x00000000  0x1000 ---- sect_83      
[0m[91m-84  0x00000000    0x0 0x00000000  0x1000 ---- sect_84      
[0m[91m-85  0x00000000    0x0 0x00000000  0x1000 ---- sect_85      
[0m[91m-86  0x00000000    0x0 0x00000000  0x1000 ---- sect_86      
[0m[91m-87  0x00000000    0x0 0x00000000  0x1000 ---- sect_87      
[0m[91m-88  0x00000000    0x0 0x00000000  0x1000 ---- sect_88      
[0m[91m-89  0x00000000    0x0 0x00000000  0x1000 ---- sect_89      
[0m[91m-90  0x00000000    0x0 0x00000000  0x1000 ---- sect_90      
[0m[91m-91  0x00000000    0x0 0x00000000  0x1000 ---- sect_91      
[0m[91m-92  0x00000000    0x0 0x00000000  0x1000 ---- sect_92      
[0m[91m-93  0x00000000    0x0 0x00000000  0x1000 ---- sect_93      
[0m[91m-94  0x00000000    0x0 0x00000000  0x1000 ---- sect_94      
[0m[91m-95  0x00000000    0x0 0x00000000  0x1000 ---- sect_95      
[0m[92m+nth paddr        size vaddr        vsize perm name
[0m[92m+--------------------------------------------------
[0m[92m+0   0x00001200  0x200 0x00001200  0x1000 -rwx sect_0  
[0m[92m+1   0x00000000    0x0 0x00000000  0x1000 ---- sect_1  
[0m[92m+2   0x00000000    0x0 0x00000000  0x1000 ---- sect_2  
[0m[92m+3   0x00000000    0x0 0x00000000  0x1000 ---- sect_3  
[0m[92m+4   0x00000000    0x0 0x00000000  0x1000 ---- sect_4  
[0m[92m+5   0x00000000    0x0 0x00000000  0x1000 ---- sect_5  
[0m[92m+6   0x00000000    0x0 0x00000000  0x1000 ---- sect_6  
[0m[92m+7   0x00000000    0x0 0x00000000  0x1000 ---- sect_7  
[0m[92m+8   0x00000000    0x0 0x00000000  0x1000 ---- sect_8  
[0m[92m+9   0x00000000    0x0 0x00000000  0x1000 ---- sect_9  
[0m[92m+10  0x00000000    0x0 0x00000000  0x1000 ---- sect_10 
[0m[92m+11  0x00000000    0x0 0x00000000  0x1000 ---- sect_11 
[0m[92m+12  0x00000000    0x0 0x00000000  0x1000 ---- sect_12 
[0m[92m+13  0x00000000    0x0 0x00000000  0x1000 ---- sect_13 
[0m[92m+14  0x00000000    0x0 0x00000000  0x1000 ---- sect_14 
[0m[92m+15  0x00000000    0x0 0x00000000  0x1000 ---- sect_15 
[0m[92m+16  0x00000000    0x0 0x00000000  0x1000 ---- sect_16 
[0m[92m+17  0x00000000    0x0 0x00000000  0x1000 ---- sect_17 
[0m[92m+18  0x00000000    0x0 0x00000000  0x1000 ---- sect_18 
[0m[92m+19  0x00000000    0x0 0x00000000  0x1000 ---- sect_19 
[0m[92m+20  0x00000000    0x0 0x00000000  0x1000 ---- sect_20 
[0m[92m+21  0x00000000    0x0 0x00000000  0x1000 ---- sect_21 
[0m[92m+22  0x00000000    0x0 0x00000000  0x1000 ---- sect_22 
[0m[92m+23  0x00000000    0x0 0x00000000  0x1000 ---- sect_23 
[0m[92m+24  0x00000000    0x0 0x00000000  0x1000 ---- sect_24 
[0m[92m+25  0x00000000    0x0 0x00000000  0x1000 ---- sect_25 
[0m[92m+26  0x00000000    0x0 0x00000000  0x1000 ---- sect_26 
[0m[92m+27  0x00000000    0x0 0x00000000  0x1000 ---- sect_27 
[0m[92m+28  0x00000000    0x0 0x00000000  0x1000 ---- sect_28 
[0m[92m+29  0x00000000    0x0 0x00000000  0x1000 ---- sect_29 
[0m[92m+30  0x00000000    0x0 0x00000000  0x1000 ---- sect_30 
[0m[92m+31  0x00000000    0x0 0x00000000  0x1000 ---- sect_31 
[0m[92m+32  0x00000000    0x0 0x00000000  0x1000 ---- sect_32 
[0m[92m+33  0x00000000    0x0 0x00000000  0x1000 ---- sect_33 
[0m[92m+34  0x00000000    0x0 0x00000000  0x1000 ---- sect_34 
[0m[92m+35  0x00000000    0x0 0x00000000  0x1000 ---- sect_35 
[0m[92m+36  0x00000000    0x0 0x00000000  0x1000 ---- sect_36 
[0m[92m+37  0x00000000    0x0 0x00000000  0x1000 ---- sect_37 
[0m[92m+38  0x00000000    0x0 0x00000000  0x1000 ---- sect_38 
[0m[92m+39  0x00000000    0x0 0x00000000  0x1000 ---- sect_39 
[0m[92m+40  0x00000000    0x0 0x00000000  0x1000 ---- sect_40 
[0m[92m+41  0x00000000    0x0 0x00000000  0x1000 ---- sect_41 
[0m[92m+42  0x00000000    0x0 0x00000000  0x1000 ---- sect_42 
[0m[92m+43  0x00000000    0x0 0x00000000  0x1000 ---- sect_43 
[0m[92m+44  0x00000000    0x0 0x00000000  0x1000 ---- sect_44 
[0m[92m+45  0x00000000    0x0 0x00000000  0x1000 ---- sect_45 
[0m[92m+46  0x00000000    0x0 0x00000000  0x1000 ---- sect_46 
[0m[92m+47  0x00000000    0x0 0x00000000  0x1000 ---- sect_47 
[0m[92m+48  0x00000000    0x0 0x00000000  0x1000 ---- sect_48 
[0m[92m+49  0x00000000    0x0 0x00000000  0x1000 ---- sect_49 
[0m[92m+50  0x00000000    0x0 0x00000000  0x1000 ---- sect_50 
[0m[92m+51  0x00000000    0x0 0x00000000  0x1000 ---- sect_51 
[0m[92m+52  0x00000000    0x0 0x00000000  0x1000 ---- sect_52 
[0m[92m+53  0x00000000    0x0 0x00000000  0x1000 ---- sect_53 
[0m[92m+54  0x00000000    0x0 0x00000000  0x1000 ---- sect_54 
[0m[92m+55  0x00000000    0x0 0x00000000  0x1000 ---- sect_55 
[0m[92m+56  0x00000000    0x0 0x00000000  0x1000 ---- sect_56 
[0m[92m+57  0x00000000    0x0 0x00000000  0x1000 ---- sect_57 
[0m[92m+58  0x00000000    0x0 0x00000000  0x1000 ---- sect_58 
[0m[92m+59  0x00000000    0x0 0x00000000  0x1000 ---- sect_59 
[0m[92m+60  0x00000000    0x0 0x00000000  0x1000 ---- sect_60 
[0m[92m+61  0x00000000    0x0 0x00000000  0x1000 ---- sect_61 
[0m[92m+62  0x00000000    0x0 0x00000000  0x1000 ---- sect_62 
[0m[92m+63  0x00000000    0x0 0x00000000  0x1000 ---- sect_63 
[0m[92m+64  0x00000000    0x0 0x00000000  0x1000 ---- sect_64 
[0m[92m+65  0x00000000    0x0 0x00000000  0x1000 ---- sect_65 
[0m[92m+66  0x00000000    0x0 0x00000000  0x1000 ---- sect_66 
[0m[92m+67  0x00000000    0x0 0x00000000  0x1000 ---- sect_67 
[0m[92m+68  0x00000000    0x0 0x00000000  0x1000 ---- sect_68 
[0m[92m+69  0x00000000    0x0 0x00000000  0x1000 ---- sect_69 
[0m[92m+70  0x00000000    0x0 0x00000000  0x1000 ---- sect_70 
[0m[92m+71  0x00000000    0x0 0x00000000  0x1000 ---- sect_71 
[0m[92m+72  0x00000000    0x0 0x00000000  0x1000 ---- sect_72 
[0m[92m+73  0x00000000    0x0 0x00000000  0x1000 ---- sect_73 
[0m[92m+74  0x00000000    0x0 0x00000000  0x1000 ---- sect_74 
[0m[92m+75  0x00000000    0x0 0x00000000  0x1000 ---- sect_75 
[0m[92m+76  0x00000000    0x0 0x00000000  0x1000 ---- sect_76 
[0m[92m+77  0x00000000    0x0 0x00000000  0x1000 ---- sect_77 
[0m[92m+78  0x00000000    0x0 0x00000000  0x1000 ---- sect_78 
[0m[92m+79  0x00000000    0x0 0x00000000  0x1000 ---- sect_79 
[0m[92m+80  0x00000000    0x0 0x00000000  0x1000 ---- sect_80 
[0m[92m+81  0x00000000    0x0 0x00000000  0x1000 ---- sect_81 
[0m[92m+82  0x00000000    0x0 0x00000000  0x1000 ---- sect_82 
[0m[92m+83  0x00000000    0x0 0x00000000  0x1000 ---- sect_83 
[0m[92m+84  0x00000000    0x0 0x00000000  0x1000 ---- sect_84 
[0m[92m+85  0x00000000    0x0 0x00000000  0x1000 ---- sect_85 
[0m[92m+86  0x00000000    0x0 0x00000000  0x1000 ---- sect_86 
[0m[92m+87  0x00000000    0x0 0x00000000  0x1000 ---- sect_87 
[0m[92m+88  0x00000000    0x0 0x00000000  0x1000 ---- sect_88 
[0m[92m+89  0x00000000    0x0 0x00000000  0x1000 ---- sect_89 
[0m[92m+90  0x00000000    0x0 0x00000000  0x1000 ---- sect_90 
[0m[92m+91  0x00000000    0x0 0x00000000  0x1000 ---- sect_91 
[0m[92m+92  0x00000000    0x0 0x00000000  0x1000 ---- sect_92 
[0m[92m+93  0x00000000    0x0 0x00000000  0x1000 ---- sect_93 
[0m[92m+94  0x00000000    0x0 0x00000000  0x1000 ---- sect_94 
[0m[92m+95  0x00000000    0x0 0x00000000  0x1000 ---- sect_95 
[0m 


[**]                               db/formats/pe/tinyXP    11750 OK       904 BR      201 XX       11 FX
[**]                             db/formats/pe/hellocxx    11752 OK       904 BR      201 XX       11 FX
[**]                               db/formats/pe/driver    11753 OK       904 BR      201 XX       11 FX
[**]                             db/formats/pe/impbyord    11755 OK       905 BR      201 XX       11 FX
[**]                      db/formats/pe/96emptysections    11756 OK       905 BR      201 XX       11 FX
[**]                           db/formats/pe/relocOSdet    11757 OK       905 BR      201 XX       11 FX
[**]                         db/formats/pe/ibknoreloc64    11758 OK       905 BR      201 XX       11 FX
[**]                          db/formats/pe/tinyW7_3264    11759 OK       905 BR      201 XX       11 FX
[**]                            db/formats/pe/memshared    11760 OK       905 BR      201 XX       11 FX
[**]                            db/formats/pe/dllfwloop    11761 OK       905 BR      201 XX       11 FX
[**]                              db/formats/pe/mscoree    11762 OK       905 BR      201 XX       11 FX
[**]                       db/formats/pe/dllemptyexp-ld    11766 OK       905 BR      201 XX       11 FX
[**]                         db/formats/pe/export_names    11768 OK       905 BR      201 XX       11 FX
[**]                         db/formats/pe/reloccryptXP    11769 OK       905 BR      201 XX       11 FX
[**]                              db/formats/pe/no_dd64    11770 OK       905 BR      201 XX       11 FX
[**]                         db/formats/pe/version_cust    11772 OK       905 BR      201 XX       11 FX
[**]                            db/formats/pe/dllnullep    11773 OK       905 BR      201 XX       11 FX
[**]                             db/formats/pe/dllextep    11776 OK       905 BR      201 XX       11 FX
[**]                               db/formats/pe/dllord    11777 OK       905 BR      201 XX       11 FX
[**]                             db/formats/pe/ibkernel    11778 OK       905 BR      201 XX       11 FX
[**]                         db/formats/pe/shuffledsect    11779 OK       905 BR      201 XX       11 FX
[**]                            db/formats/pe/weirdsord    11780 OK       905 BR      201 XX       11 FX
[**]                              db/formats/pe/ibreloc    11781 OK       905 BR      201 XX       11 FX
[**]                             db/formats/pe/manifest    11782 OK       905 BR      201 XX       11 FX
[**]                         db/formats/pe/version_mini    11783 OK       905 BR      201 XX       11 FX
[**]                           db/formats/pe/ownexports    11784 OK       905 BR      201 XX       11 FX
[**]                               db/formats/pe/reloc4    11785 OK       905 BR      201 XX       11 FX
[**]                        db/formats/pe/dll-dynunicld    11788 OK       905 BR      201 XX       11 FX
[**]                                db/formats/pe/dll64    11789 OK       906 BR      201 XX       11 FX
[**]                                   db/formats/pe/mz    11791 OK       906 BR      201 XX       11 FX
[**]                       db/formats/pe/signature_cert    11794 OK       906 BR      201 XX       11 FX
[**]                           db/formats/pe/reloccrypt    11795 OK       906 BR      201 XX       11 FX
[**]                             db/formats/pe/bigalign    11797 OK       906 BR      201 XX       11 FX
[**]                              db/formats/pe/hdrcode    11798 OK       906 BR      201 XX       11 FX
[**]                      db/formats/pe/imports_apimsW7    11799 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/seh_change64    11800 OK       906 BR      201 XX       11 FX
[**]                           db/formats/pe/nothing-ld    11801 OK       906 BR      201 XX       11 FX
[**]                     db/formats/pe/maxsec_lowaligW7    11802 OK       906 BR      201 XX       11 FX
[**]                            db/formats/pe/tinydllXP    11803 OK       906 BR      201 XX       11 FX
[**]                               db/formats/pe/no_seh    11805 OK       906 BR      201 XX       11 FX
[**]                               db/formats/pe/winver    11807 OK       906 BR      201 XX       11 FX
[**]                        db/formats/pe/dllmaxvals-ld    11808 OK       906 BR      201 XX       11 FX
[**]                            db/formats/pe/delayfake    11811 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/nosectionW7    11815 OK       906 BR      201 XX       11 FX
[**]                              db/formats/pe/tinynet    11818 OK       906 BR      201 XX       11 FX
[**]                             db/formats/pe/apphdrW7    11819 OK       906 BR      201 XX       11 FX
[**]                              db/formats/pe/imports    11821 OK       906 BR      201 XX       11 FX
[**]                        db/formats/pe/dllnoreloc-ld    11822 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/hard_imports    11823 OK       906 BR      201 XX       11 FX
[**]                       db/formats/pe/relocsstripped    11825 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/authentihash    11826 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/dllextep-ld    11828 OK       906 BR      201 XX       11 FX
[**]                               db/formats/pe/d_tiny    11829 OK       906 BR      201 XX       11 FX
[**]                              db/formats/pe/no0code    11830 OK       906 BR      201 XX       11 FX
[**]                               db/formats/pe/exe2pe    11831 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/dllnullep-ld    11832 OK       906 BR      201 XX       11 FX
[**]                        db/formats/pe/appsectableW7    11835 OK       906 BR      201 XX       11 FX
[**]                                 db/formats/pe/pe32    11837 OK       906 BR      201 XX       11 FX
[**]                            db/formats/pe/foldedhdr    11838 OK       906 BR      201 XX       11 FX
[**]                      db/formats/pe/tls_obfuscation    11839 OK       906 BR      201 XX       11 FX
[**]                                     db/formats/pdb    11842 OK       906 BR      201 XX       11 FX
[**]                                 db/formats/pe/2331    11845 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/dllweirdexp    11847 OK       906 BR      201 XX       11 FX
[**]                               db/formats/pe/no_dep    11849 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/reloccryptW8    11850 OK       906 BR      201 XX       11 FX
[**]                             db/formats/pe/dotnet20    11851 OK       906 BR      201 XX       11 FX
[**]                              db/formats/pe/fakenet    11852 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/dllbound-ld    11855 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/delaycorrupt    11858 OK       906 BR      201 XX       11 FX
[**]                                 db/formats/pe/CoST    11859 OK       906 BR      201 XX       11 FX
[**]                             db/formats/pe/compiled    11862 OK       906 BR      201 XX       11 FX
[**]                               db/formats/pe/footer    11863 OK       906 BR      201 XX       11 FX
[**]                                db/formats/pe/no_dd    11864 OK       906 BR      201 XX       11 FX
[**]                                 db/formats/pe/peio    11867 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/resourceloop    11868 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/dump_imports    11869 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/tls_onthefly    11870 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/multiss_con    11871 OK       906 BR      201 XX       11 FX
[**]                                 db/formats/pe/ctxt    11875 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/dll-webdavld    11878 OK       906 BR      201 XX       11 FX
[**]                           db/formats/pe/tinydll-ld    11879 OK       906 BR      201 XX       11 FX
[**]                         db/formats/pe/dllnomain-ld    11880 OK       906 BR      201 XX       11 FX
[**]                        db/formats/pe/imports_noint    11881 OK       906 BR      201 XX       11 FX
[**]                       db/formats/pe/dllnoexp-dynld    11882 OK       906 BR      201 XX       11 FX
[**]                       db/formats/pe/skippeddynbase    11883 OK       906 BR      201 XX       11 FX
[**]                            db/formats/pe/ibkmanual    11884 OK       906 BR      201 XX       11 FX
[**]                        db/formats/pe/truncatedlast    11885 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/ownexports2    11886 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/multiss_gui    11887 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/nosectionXP    11891 OK       906 BR      201 XX       11 FX
[**]                           db/formats/pe/dllnoreloc    11893 OK       906 BR      201 XX       11 FX
[**]                          db/formats/pe/safeseh_fly    11894 OK       906 BR      201 XX       11 FX

[A[2K[31m[XX][0m db/formats/pe/pe [33mpe misaligned section paddr[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS~sect_0 bins/pe/unaligned_sec_paddr.exe
-- stdout
[36m@@ -1 +1 @@[0m
[91m-0   0x00000200  0x205 0x00401000  0x1000 -rwx sect_0      MEM_EXECUTE,MEM_WRITE
[0m[92m+0   0x00000200  0x205 0x00401000  0x1000 -rwx sect_0 
[0m


[A[2K[31m[XX][0m db/formats/pe/pe [33mpe sections[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc iS bins/pe/hello_world_not_stripped.exe
-- stdout
[36m@@ -1,20 +1,20 @@[0m
 [Sections]
 
[91m-nth paddr          size vaddr         vsize perm name           type flags
[0m[91m---------------------------------------------------------------------------
[0m[91m-0   0x00000400   0x1800 0x00401000   0x2000 -r-x .text               CNT_CODE,CNT_INITIALIZED_DATA,ALIGN_16BYTES,MEM_EXECUTE,MEM_READ
[0m[91m-1   0x00001c00    0x200 0x00403000   0x1000 -rw- .data               CNT_INITIALIZED_DATA,ALIGN_4BYTES,MEM_READ,MEM_WRITE
[0m[91m-2   0x00001e00    0x600 0x00404000   0x1000 -r-- .rdata              CNT_INITIALIZED_DATA,ALIGN_4BYTES,MEM_READ
[0m[91m-3   0x00000000      0x0 0x00405000   0x1000 -rw- .bss                CNT_UNINITIALIZED,ALIGN_32BYTES,MEM_READ,MEM_WRITE
[0m[91m-4   0x00002400    0x600 0x00406000   0x1000 -rw- .idata              CNT_INITIALIZED_DATA,ALIGN_4BYTES,MEM_READ,MEM_WRITE
[0m[91m-5   0x00002a00    0x200 0x00407000   0x1000 -rw- .CRT                CNT_INITIALIZED_DATA,ALIGN_4BYTES,MEM_READ,MEM_WRITE
[0m[91m-6   0x00002c00    0x200 0x00408000   0x1000 -rw- .tls                CNT_INITIALIZED_DATA,ALIGN_4BYTES,MEM_READ,MEM_WRITE
[0m[91m-7   0x00002e00    0x400 0x00409000   0x1000 -r-- .debug_aranges      CNT_INITIALIZED_DATA,ALIGN_8BYTES,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[91m-8   0x00003200  0x4ba00 0x0040a000  0x4c000 -r-- .debug_info         CNT_INITIALIZED_DATA,ALIGN_1BYTES,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[91m-9   0x0004ec00   0x2a00 0x00456000   0x3000 -r-- .debug_abbrev       CNT_INITIALIZED_DATA,ALIGN_1BYTES,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[91m-10  0x00051600   0x3600 0x00459000   0x4000 -r-- .debug_line         CNT_INITIALIZED_DATA,ALIGN_1BYTES,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[91m-11  0x00054c00    0x800 0x0045d000   0x1000 -r-- .debug_frame        CNT_INITIALIZED_DATA,ALIGN_4BYTES,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[91m-12  0x00055400    0x800 0x0045e000   0x1000 -r-- .debug_str          CNT_INITIALIZED_DATA,ALIGN_1BYTES,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[91m-13  0x00055c00   0x1400 0x0045f000   0x2000 -r-- .debug_loc          CNT_INITIALIZED_DATA,ALIGN_1BYTES,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[91m-14  0x00057000    0x400 0x00461000   0x1000 -r-- .debug_ranges       CNT_INITIALIZED_DATA,ALIGN_1BYTES,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[92m+nth paddr          size vaddr         vsize perm name
[0m[92m+-----------------------------------------------------
[0m[92m+0   0x00000400   0x1800 0x00401000   0x2000 -r-x .text          
[0m[92m+1   0x00001c00    0x200 0x00403000   0x1000 -rw- .data          
[0m[92m+2   0x00001e00    0x600 0x00404000   0x1000 -r-- .rdata         
[0m[92m+3   0x00000000      0x0 0x00405000   0x1000 -rw- .bss           
[0m[92m+4   0x00002400    0x600 0x00406000   0x1000 -rw- .idata         
[0m[92m+5   0x00002a00    0x200 0x00407000   0x1000 -rw- .CRT           
[0m[92m+6   0x00002c00    0x200 0x00408000   0x1000 -rw- .tls           
[0m[92m+7   0x00002e00    0x400 0x00409000   0x1000 -r-- .debug_aranges 
[0m[92m+8   0x00003200  0x4ba00 0x0040a000  0x4c000 -r-- .debug_info    
[0m[92m+9   0x0004ec00   0x2a00 0x00456000   0x3000 -r-- .debug_abbrev  
[0m[92m+10  0x00051600   0x3600 0x00459000   0x4000 -r-- .debug_line    
[0m[92m+11  0x00054c00    0x800 0x0045d000   0x1000 -r-- .debug_frame   
[0m[92m+12  0x00055400    0x800 0x0045e000   0x1000 -r-- .debug_str     
[0m[92m+13  0x00055c00   0x1400 0x0045f000   0x2000 -r-- .debug_loc     
[0m[92m+14  0x00057000    0x400 0x00461000   0x1000 -r-- .debug_ranges  
[0m 



[A[2K[31m[XX][0m db/formats/pe/96workingsections [33mPE: corkami 96workingsections.exe - section list[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -n -Qc '!rz-bin -S bins/pe/96workingsections.exe' bins/pe/96workingsections.exe
-- stdout
[36m@@ -1,101 +1,101 @@[0m
 [Sections]
 
[91m-nth paddr        size vaddr        vsize perm name    type flags
[0m[91m-----------------------------------------------------------------
[0m[91m-0   0x00001200  0x200 0x00402000  0x1000 -rwx sect_0       MEM_EXECUTE,MEM_WRITE
[0m[91m-1   0x00001400  0x200 0x00403000  0x1000 -rwx sect_1       MEM_EXECUTE,MEM_WRITE
[0m[91m-2   0x00001600  0x200 0x00404000  0x1000 -rwx sect_2       MEM_EXECUTE,MEM_WRITE
[0m[91m-3   0x00001800  0x200 0x00405000  0x1000 -rwx sect_3       MEM_EXECUTE,MEM_WRITE
[0m[91m-4   0x00001a00  0x200 0x00406000  0x1000 -rwx sect_4       MEM_EXECUTE,MEM_WRITE
[0m[91m-5   0x00001c00  0x200 0x00407000  0x1000 -rwx sect_5       MEM_EXECUTE,MEM_WRITE
[0m[91m-6   0x00001e00  0x200 0x00408000  0x1000 -rwx sect_6       MEM_EXECUTE,MEM_WRITE
[0m[91m-7   0x00002000  0x200 0x00409000  0x1000 -rwx sect_7       MEM_EXECUTE,MEM_WRITE
[0m[91m-8   0x00002200  0x200 0x0040a000  0x1000 -rwx sect_8       MEM_EXECUTE,MEM_WRITE
[0m[91m-9   0x00002400  0x200 0x0040b000  0x1000 -rwx sect_9       MEM_EXECUTE,MEM_WRITE
[0m[91m-10  0x00002600  0x200 0x0040c000  0x1000 -rwx sect_10      MEM_EXECUTE,MEM_WRITE
[0m[91m-11  0x00002800  0x200 0x0040d000  0x1000 -rwx sect_11      MEM_EXECUTE,MEM_WRITE
[0m[91m-12  0x00002a00  0x200 0x0040e000  0x1000 -rwx sect_12      MEM_EXECUTE,MEM_WRITE
[0m[91m-13  0x00002c00  0x200 0x0040f000  0x1000 -rwx sect_13      MEM_EXECUTE,MEM_WRITE
[0m[91m-14  0x00002e00  0x200 0x00410000  0x1000 -rwx sect_14      MEM_EXECUTE,MEM_WRITE
[0m[91m-15  0x00003000  0x200 0x00411000  0x1000 -rwx sect_15      MEM_EXECUTE,MEM_WRITE
[0m[91m-16  0x00003200  0x200 0x00412000  0x1000 -rwx sect_16      MEM_EXECUTE,MEM_WRITE
[0m[91m-17  0x00003400  0x200 0x00413000  0x1000 -rwx sect_17      MEM_EXECUTE,MEM_WRITE
[0m[91m-18  0x00003600  0x200 0x00414000  0x1000 -rwx sect_18      MEM_EXECUTE,MEM_WRITE
[0m[91m-19  0x00003800  0x200 0x00415000  0x1000 -rwx sect_19      MEM_EXECUTE,MEM_WRITE
[0m[91m-20  0x00003a00  0x200 0x00416000  0x1000 -rwx sect_20      MEM_EXECUTE,MEM_WRITE
[0m[91m-21  0x00003c00  0x200 0x00417000  0x1000 -rwx sect_21      MEM_EXECUTE,MEM_WRITE
[0m[91m-22  0x00003e00  0x200 0x00418000  0x1000 -rwx sect_22      MEM_EXECUTE,MEM_WRITE
[0m[91m-23  0x00004000  0x200 0x00419000  0x1000 -rwx sect_23      MEM_EXECUTE,MEM_WRITE
[0m[91m-24  0x00004200  0x200 0x0041a000  0x1000 -rwx sect_24      MEM_EXECUTE,MEM_WRITE
[0m[91m-25  0x00004400  0x200 0x0041b000  0x1000 -rwx sect_25      MEM_EXECUTE,MEM_WRITE
[0m[91m-26  0x00004600  0x200 0x0041c000  0x1000 -rwx sect_26      MEM_EXECUTE,MEM_WRITE
[0m[91m-27  0x00004800  0x200 0x0041d000  0x1000 -rwx sect_27      MEM_EXECUTE,MEM_WRITE
[0m[91m-28  0x00004a00  0x200 0x0041e000  0x1000 -rwx sect_28      MEM_EXECUTE,MEM_WRITE
[0m[91m-29  0x00004c00  0x200 0x0041f000  0x1000 -rwx sect_29      MEM_EXECUTE,MEM_WRITE
[0m[91m-30  0x00004e00  0x200 0x00420000  0x1000 -rwx sect_30      MEM_EXECUTE,MEM_WRITE
[0m[91m-31  0x00005000  0x200 0x00421000  0x1000 -rwx sect_31      MEM_EXECUTE,MEM_WRITE
[0m[91m-32  0x00005200  0x200 0x00422000  0x1000 -rwx sect_32      MEM_EXECUTE,MEM_WRITE
[0m[91m-33  0x00005400  0x200 0x00423000  0x1000 -rwx sect_33      MEM_EXECUTE,MEM_WRITE
[0m[91m-34  0x00005600  0x200 0x00424000  0x1000 -rwx sect_34      MEM_EXECUTE,MEM_WRITE
[0m[91m-35  0x00005800  0x200 0x00425000  0x1000 -rwx sect_35      MEM_EXECUTE,MEM_WRITE
[0m[91m-36  0x00005a00  0x200 0x00426000  0x1000 -rwx sect_36      MEM_EXECUTE,MEM_WRITE
[0m[91m-37  0x00005c00  0x200 0x00427000  0x1000 -rwx sect_37      MEM_EXECUTE,MEM_WRITE
[0m[91m-38  0x00005e00  0x200 0x00428000  0x1000 -rwx sect_38      MEM_EXECUTE,MEM_WRITE
[0m[91m-39  0x00006000  0x200 0x00429000  0x1000 -rwx sect_39      MEM_EXECUTE,MEM_WRITE
[0m[91m-40  0x00006200  0x200 0x0042a000  0x1000 -rwx sect_40      MEM_EXECUTE,MEM_WRITE
[0m[91m-41  0x00006400  0x200 0x0042b000  0x1000 -rwx sect_41      MEM_EXECUTE,MEM_WRITE
[0m[91m-42  0x00006600  0x200 0x0042c000  0x1000 -rwx sect_42      MEM_EXECUTE,MEM_WRITE
[0m[91m-43  0x00006800  0x200 0x0042d000  0x1000 -rwx sect_43      MEM_EXECUTE,MEM_WRITE
[0m[91m-44  0x00006a00  0x200 0x0042e000  0x1000 -rwx sect_44      MEM_EXECUTE,MEM_WRITE
[0m[91m-45  0x00006c00  0x200 0x0042f000  0x1000 -rwx sect_45      MEM_EXECUTE,MEM_WRITE
[0m[91m-46  0x00006e00  0x200 0x00430000  0x1000 -rwx sect_46      MEM_EXECUTE,MEM_WRITE
[0m[91m-47  0x00007000  0x200 0x00431000  0x1000 -rwx sect_47      MEM_EXECUTE,MEM_WRITE
[0m[91m-48  0x00007200  0x200 0x00432000  0x1000 -rwx sect_48      MEM_EXECUTE,MEM_WRITE
[0m[91m-49  0x00007400  0x200 0x00433000  0x1000 -rwx sect_49      MEM_EXECUTE,MEM_WRITE
[0m[91m-50  0x00007600  0x200 0x00434000  0x1000 -rwx sect_50      MEM_EXECUTE,MEM_WRITE
[0m[91m-51  0x00007800  0x200 0x00435000  0x1000 -rwx sect_51      MEM_EXECUTE,MEM_WRITE
[0m[91m-52  0x00007a00  0x200 0x00436000  0x1000 -rwx sect_52      MEM_EXECUTE,MEM_WRITE
[0m[91m-53  0x00007c00  0x200 0x00437000  0x1000 -rwx sect_53      MEM_EXECUTE,MEM_WRITE
[0m[91m-54  0x00007e00  0x200 0x00438000  0x1000 -rwx sect_54      MEM_EXECUTE,MEM_WRITE
[0m[91m-55  0x00008000  0x200 0x00439000  0x1000 -rwx sect_55      MEM_EXECUTE,MEM_WRITE
[0m[91m-56  0x00008200  0x200 0x0043a000  0x1000 -rwx sect_56      MEM_EXECUTE,MEM_WRITE
[0m[91m-57  0x00008400  0x200 0x0043b000  0x1000 -rwx sect_57      MEM_EXECUTE,MEM_WRITE
[0m[91m-58  0x00008600  0x200 0x0043c000  0x1000 -rwx sect_58      MEM_EXECUTE,MEM_WRITE
[0m[91m-59  0x00008800  0x200 0x0043d000  0x1000 -rwx sect_59      MEM_EXECUTE,MEM_WRITE
[0m[91m-60  0x00008a00  0x200 0x0043e000  0x1000 -rwx sect_60      MEM_EXECUTE,MEM_WRITE
[0m[91m-61  0x00008c00  0x200 0x0043f000  0x1000 -rwx sect_61      MEM_EXECUTE,MEM_WRITE
[0m[91m-62  0x00008e00  0x200 0x00440000  0x1000 -rwx sect_62      MEM_EXECUTE,MEM_WRITE
[0m[91m-63  0x00009000  0x200 0x00441000  0x1000 -rwx sect_63      MEM_EXECUTE,MEM_WRITE
[0m[91m-64  0x00009200  0x200 0x00442000  0x1000 -rwx sect_64      MEM_EXECUTE,MEM_WRITE
[0m[91m-65  0x00009400  0x200 0x00443000  0x1000 -rwx sect_65      MEM_EXECUTE,MEM_WRITE
[0m[91m-66  0x00009600  0x200 0x00444000  0x1000 -rwx sect_66      MEM_EXECUTE,MEM_WRITE
[0m[91m-67  0x00009800  0x200 0x00445000  0x1000 -rwx sect_67      MEM_EXECUTE,MEM_WRITE
[0m[91m-68  0x00009a00  0x200 0x00446000  0x1000 -rwx sect_68      MEM_EXECUTE,MEM_WRITE
[0m[91m-69  0x00009c00  0x200 0x00447000  0x1000 -rwx sect_69      MEM_EXECUTE,MEM_WRITE
[0m[91m-70  0x00009e00  0x200 0x00448000  0x1000 -rwx sect_70      MEM_EXECUTE,MEM_WRITE
[0m[91m-71  0x0000a000  0x200 0x00449000  0x1000 -rwx sect_71      MEM_EXECUTE,MEM_WRITE
[0m[91m-72  0x0000a200  0x200 0x0044a000  0x1000 -rwx sect_72      MEM_EXECUTE,MEM_WRITE
[0m[91m-73  0x0000a400  0x200 0x0044b000  0x1000 -rwx sect_73      MEM_EXECUTE,MEM_WRITE
[0m[91m-74  0x0000a600  0x200 0x0044c000  0x1000 -rwx sect_74      MEM_EXECUTE,MEM_WRITE
[0m[91m-75  0x0000a800  0x200 0x0044d000  0x1000 -rwx sect_75      MEM_EXECUTE,MEM_WRITE
[0m[91m-76  0x0000aa00  0x200 0x0044e000  0x1000 -rwx sect_76      MEM_EXECUTE,MEM_WRITE
[0m[91m-77  0x0000ac00  0x200 0x0044f000  0x1000 -rwx sect_77      MEM_EXECUTE,MEM_WRITE
[0m[91m-78  0x0000ae00  0x200 0x00450000  0x1000 -rwx sect_78      MEM_EXECUTE,MEM_WRITE
[0m[91m-79  0x0000b000  0x200 0x00451000  0x1000 -rwx sect_79      MEM_EXECUTE,MEM_WRITE
[0m[91m-80  0x0000b200  0x200 0x00452000  0x1000 -rwx sect_80      MEM_EXECUTE,MEM_WRITE
[0m[91m-81  0x0000b400  0x200 0x00453000  0x1000 -rwx sect_81      MEM_EXECUTE,MEM_WRITE
[0m[91m-82  0x0000b600  0x200 0x00454000  0x1000 -rwx sect_82      MEM_EXECUTE,MEM_WRITE
[0m[91m-83  0x0000b800  0x200 0x00455000  0x1000 -rwx sect_83      MEM_EXECUTE,MEM_WRITE
[0m[91m-84  0x0000ba00  0x200 0x00456000  0x1000 -rwx sect_84      MEM_EXECUTE,MEM_WRITE
[0m[91m-85  0x0000bc00  0x200 0x00457000  0x1000 -rwx sect_85      MEM_EXECUTE,MEM_WRITE
[0m[91m-86  0x0000be00  0x200 0x00458000  0x1000 -rwx sect_86      MEM_EXECUTE,MEM_WRITE
[0m[91m-87  0x0000c000  0x200 0x00459000  0x1000 -rwx sect_87      MEM_EXECUTE,MEM_WRITE
[0m[91m-88  0x0000c200  0x200 0x0045a000  0x1000 -rwx sect_88      MEM_EXECUTE,MEM_WRITE
[0m[91m-89  0x0000c400  0x200 0x0045b000  0x1000 -rwx sect_89      MEM_EXECUTE,MEM_WRITE
[0m[91m-90  0x0000c600  0x200 0x0045c000  0x1000 -rwx sect_90      MEM_EXECUTE,MEM_WRITE
[0m[91m-91  0x0000c800  0x200 0x0045d000  0x1000 -rwx sect_91      MEM_EXECUTE,MEM_WRITE
[0m[91m-92  0x0000ca00  0x200 0x0045e000  0x1000 -rwx sect_92      MEM_EXECUTE,MEM_WRITE
[0m[91m-93  0x0000cc00  0x200 0x0045f000  0x1000 -rwx sect_93      MEM_EXECUTE,MEM_WRITE
[0m[91m-94  0x0000ce00  0x200 0x00460000  0x1000 -rwx sect_94      MEM_EXECUTE,MEM_WRITE
[0m[91m-95  0x0000d000  0x200 0x00461000  0x1000 -rwx sect_95      MEM_EXECUTE,MEM_WRITE
[0m[92m+nth paddr        size vaddr        vsize perm name
[0m[92m+--------------------------------------------------
[0m[92m+0   0x00001200  0x200 0x00402000  0x1000 -rwx sect_0  
[0m[92m+1   0x00001400  0x200 0x00403000  0x1000 -rwx sect_1  
[0m[92m+2   0x00001600  0x200 0x00404000  0x1000 -rwx sect_2  
[0m[92m+3   0x00001800  0x200 0x00405000  0x1000 -rwx sect_3  
[0m[92m+4   0x00001a00  0x200 0x00406000  0x1000 -rwx sect_4  
[0m[92m+5   0x00001c00  0x200 0x00407000  0x1000 -rwx sect_5  
[0m[92m+6   0x00001e00  0x200 0x00408000  0x1000 -rwx sect_6  
[0m[92m+7   0x00002000  0x200 0x00409000  0x1000 -rwx sect_7  
[0m[92m+8   0x00002200  0x200 0x0040a000  0x1000 -rwx sect_8  
[0m[92m+9   0x00002400  0x200 0x0040b000  0x1000 -rwx sect_9  
[0m[92m+10  0x00002600  0x200 0x0040c000  0x1000 -rwx sect_10 
[0m[92m+11  0x00002800  0x200 0x0040d000  0x1000 -rwx sect_11 
[0m[92m+12  0x00002a00  0x200 0x0040e000  0x1000 -rwx sect_12 
[0m[92m+13  0x00002c00  0x200 0x0040f000  0x1000 -rwx sect_13 
[0m[92m+14  0x00002e00  0x200 0x00410000  0x1000 -rwx sect_14 
[0m[92m+15  0x00003000  0x200 0x00411000  0x1000 -rwx sect_15 
[0m[92m+16  0x00003200  0x200 0x00412000  0x1000 -rwx sect_16 
[0m[92m+17  0x00003400  0x200 0x00413000  0x1000 -rwx sect_17 
[0m[92m+18  0x00003600  0x200 0x00414000  0x1000 -rwx sect_18 
[0m[92m+19  0x00003800  0x200 0x00415000  0x1000 -rwx sect_19 
[0m[92m+20  0x00003a00  0x200 0x00416000  0x1000 -rwx sect_20 
[0m[92m+21  0x00003c00  0x200 0x00417000  0x1000 -rwx sect_21 
[0m[92m+22  0x00003e00  0x200 0x00418000  0x1000 -rwx sect_22 
[0m[92m+23  0x00004000  0x200 0x00419000  0x1000 -rwx sect_23 
[0m[92m+24  0x00004200  0x200 0x0041a000  0x1000 -rwx sect_24 
[0m[92m+25  0x00004400  0x200 0x0041b000  0x1000 -rwx sect_25 
[0m[92m+26  0x00004600  0x200 0x0041c000  0x1000 -rwx sect_26 
[0m[92m+27  0x00004800  0x200 0x0041d000  0x1000 -rwx sect_27 
[0m[92m+28  0x00004a00  0x200 0x0041e000  0x1000 -rwx sect_28 
[0m[92m+29  0x00004c00  0x200 0x0041f000  0x1000 -rwx sect_29 
[0m[92m+30  0x00004e00  0x200 0x00420000  0x1000 -rwx sect_30 
[0m[92m+31  0x00005000  0x200 0x00421000  0x1000 -rwx sect_31 
[0m[92m+32  0x00005200  0x200 0x00422000  0x1000 -rwx sect_32 
[0m[92m+33  0x00005400  0x200 0x00423000  0x1000 -rwx sect_33 
[0m[92m+34  0x00005600  0x200 0x00424000  0x1000 -rwx sect_34 
[0m[92m+35  0x00005800  0x200 0x00425000  0x1000 -rwx sect_35 
[0m[92m+36  0x00005a00  0x200 0x00426000  0x1000 -rwx sect_36 
[0m[92m+37  0x00005c00  0x200 0x00427000  0x1000 -rwx sect_37 
[0m[92m+38  0x00005e00  0x200 0x00428000  0x1000 -rwx sect_38 
[0m[92m+39  0x00006000  0x200 0x00429000  0x1000 -rwx sect_39 
[0m[92m+40  0x00006200  0x200 0x0042a000  0x1000 -rwx sect_40 
[0m[92m+41  0x00006400  0x200 0x0042b000  0x1000 -rwx sect_41 
[0m[92m+42  0x00006600  0x200 0x0042c000  0x1000 -rwx sect_42 
[0m[92m+43  0x00006800  0x200 0x0042d000  0x1000 -rwx sect_43 
[0m[92m+44  0x00006a00  0x200 0x0042e000  0x1000 -rwx sect_44 
[0m[92m+45  0x00006c00  0x200 0x0042f000  0x1000 -rwx sect_45 
[0m[92m+46  0x00006e00  0x200 0x00430000  0x1000 -rwx sect_46 
[0m[92m+47  0x00007000  0x200 0x00431000  0x1000 -rwx sect_47 
[0m[92m+48  0x00007200  0x200 0x00432000  0x1000 -rwx sect_48 
[0m[92m+49  0x00007400  0x200 0x00433000  0x1000 -rwx sect_49 
[0m[92m+50  0x00007600  0x200 0x00434000  0x1000 -rwx sect_50 
[0m[92m+51  0x00007800  0x200 0x00435000  0x1000 -rwx sect_51 
[0m[92m+52  0x00007a00  0x200 0x00436000  0x1000 -rwx sect_52 
[0m[92m+53  0x00007c00  0x200 0x00437000  0x1000 -rwx sect_53 
[0m[92m+54  0x00007e00  0x200 0x00438000  0x1000 -rwx sect_54 
[0m[92m+55  0x00008000  0x200 0x00439000  0x1000 -rwx sect_55 
[0m[92m+56  0x00008200  0x200 0x0043a000  0x1000 -rwx sect_56 
[0m[92m+57  0x00008400  0x200 0x0043b000  0x1000 -rwx sect_57 
[0m[92m+58  0x00008600  0x200 0x0043c000  0x1000 -rwx sect_58 
[0m[92m+59  0x00008800  0x200 0x0043d000  0x1000 -rwx sect_59 
[0m[92m+60  0x00008a00  0x200 0x0043e000  0x1000 -rwx sect_60 
[0m[92m+61  0x00008c00  0x200 0x0043f000  0x1000 -rwx sect_61 
[0m[92m+62  0x00008e00  0x200 0x00440000  0x1000 -rwx sect_62 
[0m[92m+63  0x00009000  0x200 0x00441000  0x1000 -rwx sect_63 
[0m[92m+64  0x00009200  0x200 0x00442000  0x1000 -rwx sect_64 
[0m[92m+65  0x00009400  0x200 0x00443000  0x1000 -rwx sect_65 
[0m[92m+66  0x00009600  0x200 0x00444000  0x1000 -rwx sect_66 
[0m[92m+67  0x00009800  0x200 0x00445000  0x1000 -rwx sect_67 
[0m[92m+68  0x00009a00  0x200 0x00446000  0x1000 -rwx sect_68 
[0m[92m+69  0x00009c00  0x200 0x00447000  0x1000 -rwx sect_69 
[0m[92m+70  0x00009e00  0x200 0x00448000  0x1000 -rwx sect_70 
[0m[92m+71  0x0000a000  0x200 0x00449000  0x1000 -rwx sect_71 
[0m[92m+72  0x0000a200  0x200 0x0044a000  0x1000 -rwx sect_72 
[0m[92m+73  0x0000a400  0x200 0x0044b000  0x1000 -rwx sect_73 
[0m[92m+74  0x0000a600  0x200 0x0044c000  0x1000 -rwx sect_74 
[0m[92m+75  0x0000a800  0x200 0x0044d000  0x1000 -rwx sect_75 
[0m[92m+76  0x0000aa00  0x200 0x0044e000  0x1000 -rwx sect_76 
[0m[92m+77  0x0000ac00  0x200 0x0044f000  0x1000 -rwx sect_77 
[0m[92m+78  0x0000ae00  0x200 0x00450000  0x1000 -rwx sect_78 
[0m[92m+79  0x0000b000  0x200 0x00451000  0x1000 -rwx sect_79 
[0m[92m+80  0x0000b200  0x200 0x00452000  0x1000 -rwx sect_80 
[0m[92m+81  0x0000b400  0x200 0x00453000  0x1000 -rwx sect_81 
[0m[92m+82  0x0000b600  0x200 0x00454000  0x1000 -rwx sect_82 
[0m[92m+83  0x0000b800  0x200 0x00455000  0x1000 -rwx sect_83 
[0m[92m+84  0x0000ba00  0x200 0x00456000  0x1000 -rwx sect_84 
[0m[92m+85  0x0000bc00  0x200 0x00457000  0x1000 -rwx sect_85 
[0m[92m+86  0x0000be00  0x200 0x00458000  0x1000 -rwx sect_86 
[0m[92m+87  0x0000c000  0x200 0x00459000  0x1000 -rwx sect_87 
[0m[92m+88  0x0000c200  0x200 0x0045a000  0x1000 -rwx sect_88 
[0m[92m+89  0x0000c400  0x200 0x0045b000  0x1000 -rwx sect_89 
[0m[92m+90  0x0000c600  0x200 0x0045c000  0x1000 -rwx sect_90 
[0m[92m+91  0x0000c800  0x200 0x0045d000  0x1000 -rwx sect_91 
[0m[92m+92  0x0000ca00  0x200 0x0045e000  0x1000 -rwx sect_92 
[0m[92m+93  0x0000cc00  0x200 0x0045f000  0x1000 -rwx sect_93 
[0m[92m+94  0x0000ce00  0x200 0x00460000  0x1000 -rwx sect_94 
[0m[92m+95  0x0000d000  0x200 0x00461000  0x1000 -rwx sect_95 
[0m 



[A[2K[31m[XX][0m db/formats/pe/96workingsections [33mPE: corkami 96workingsections.exe - section list - unfiltered[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -n -Qc '!rz-bin -uS bins/pe/96workingsections.exe' bins/pe/96workingsections.exe
-- stdout
[36m@@ -1,101 +1,101 @@[0m
 [Sections]
 
[91m-nth paddr        size vaddr        vsize perm name    type flags
[0m[91m-----------------------------------------------------------------
[0m[91m-0   0x00001200  0x200 0x00402000  0x1000 -rwx sect_0       MEM_EXECUTE,MEM_WRITE
[0m[91m-1   0x00001400  0x200 0x00403000  0x1000 -rwx sect_1       MEM_EXECUTE,MEM_WRITE
[0m[91m-2   0x00001600  0x200 0x00404000  0x1000 -rwx sect_2       MEM_EXECUTE,MEM_WRITE
[0m[91m-3   0x00001800  0x200 0x00405000  0x1000 -rwx sect_3       MEM_EXECUTE,MEM_WRITE
[0m[91m-4   0x00001a00  0x200 0x00406000  0x1000 -rwx sect_4       MEM_EXECUTE,MEM_WRITE
[0m[91m-5   0x00001c00  0x200 0x00407000  0x1000 -rwx sect_5       MEM_EXECUTE,MEM_WRITE
[0m[91m-6   0x00001e00  0x200 0x00408000  0x1000 -rwx sect_6       MEM_EXECUTE,MEM_WRITE
[0m[91m-7   0x00002000  0x200 0x00409000  0x1000 -rwx sect_7       MEM_EXECUTE,MEM_WRITE
[0m[91m-8   0x00002200  0x200 0x0040a000  0x1000 -rwx sect_8       MEM_EXECUTE,MEM_WRITE
[0m[91m-9   0x00002400  0x200 0x0040b000  0x1000 -rwx sect_9       MEM_EXECUTE,MEM_WRITE
[0m[91m-10  0x00002600  0x200 0x0040c000  0x1000 -rwx sect_10      MEM_EXECUTE,MEM_WRITE
[0m[91m-11  0x00002800  0x200 0x0040d000  0x1000 -rwx sect_11      MEM_EXECUTE,MEM_WRITE
[0m[91m-12  0x00002a00  0x200 0x0040e000  0x1000 -rwx sect_12      MEM_EXECUTE,MEM_WRITE
[0m[91m-13  0x00002c00  0x200 0x0040f000  0x1000 -rwx sect_13      MEM_EXECUTE,MEM_WRITE
[0m[91m-14  0x00002e00  0x200 0x00410000  0x1000 -rwx sect_14      MEM_EXECUTE,MEM_WRITE
[0m[91m-15  0x00003000  0x200 0x00411000  0x1000 -rwx sect_15      MEM_EXECUTE,MEM_WRITE
[0m[91m-16  0x00003200  0x200 0x00412000  0x1000 -rwx sect_16      MEM_EXECUTE,MEM_WRITE
[0m[91m-17  0x00003400  0x200 0x00413000  0x1000 -rwx sect_17      MEM_EXECUTE,MEM_WRITE
[0m[91m-18  0x00003600  0x200 0x00414000  0x1000 -rwx sect_18      MEM_EXECUTE,MEM_WRITE
[0m[91m-19  0x00003800  0x200 0x00415000  0x1000 -rwx sect_19      MEM_EXECUTE,MEM_WRITE
[0m[91m-20  0x00003a00  0x200 0x00416000  0x1000 -rwx sect_20      MEM_EXECUTE,MEM_WRITE
[0m[91m-21  0x00003c00  0x200 0x00417000  0x1000 -rwx sect_21      MEM_EXECUTE,MEM_WRITE
[0m[91m-22  0x00003e00  0x200 0x00418000  0x1000 -rwx sect_22      MEM_EXECUTE,MEM_WRITE
[0m[91m-23  0x00004000  0x200 0x00419000  0x1000 -rwx sect_23      MEM_EXECUTE,MEM_WRITE
[0m[91m-24  0x00004200  0x200 0x0041a000  0x1000 -rwx sect_24      MEM_EXECUTE,MEM_WRITE
[0m[91m-25  0x00004400  0x200 0x0041b000  0x1000 -rwx sect_25      MEM_EXECUTE,MEM_WRITE
[0m[91m-26  0x00004600  0x200 0x0041c000  0x1000 -rwx sect_26      MEM_EXECUTE,MEM_WRITE
[0m[91m-27  0x00004800  0x200 0x0041d000  0x1000 -rwx sect_27      MEM_EXECUTE,MEM_WRITE
[0m[91m-28  0x00004a00  0x200 0x0041e000  0x1000 -rwx sect_28      MEM_EXECUTE,MEM_WRITE
[0m[91m-29  0x00004c00  0x200 0x0041f000  0x1000 -rwx sect_29      MEM_EXECUTE,MEM_WRITE
[0m[91m-30  0x00004e00  0x200 0x00420000  0x1000 -rwx sect_30      MEM_EXECUTE,MEM_WRITE
[0m[91m-31  0x00005000  0x200 0x00421000  0x1000 -rwx sect_31      MEM_EXECUTE,MEM_WRITE
[0m[91m-32  0x00005200  0x200 0x00422000  0x1000 -rwx sect_32      MEM_EXECUTE,MEM_WRITE
[0m[91m-33  0x00005400  0x200 0x00423000  0x1000 -rwx sect_33      MEM_EXECUTE,MEM_WRITE
[0m[91m-34  0x00005600  0x200 0x00424000  0x1000 -rwx sect_34      MEM_EXECUTE,MEM_WRITE
[0m[91m-35  0x00005800  0x200 0x00425000  0x1000 -rwx sect_35      MEM_EXECUTE,MEM_WRITE
[0m[91m-36  0x00005a00  0x200 0x00426000  0x1000 -rwx sect_36      MEM_EXECUTE,MEM_WRITE
[0m[91m-37  0x00005c00  0x200 0x00427000  0x1000 -rwx sect_37      MEM_EXECUTE,MEM_WRITE
[0m[91m-38  0x00005e00  0x200 0x00428000  0x1000 -rwx sect_38      MEM_EXECUTE,MEM_WRITE
[0m[91m-39  0x00006000  0x200 0x00429000  0x1000 -rwx sect_39      MEM_EXECUTE,MEM_WRITE
[0m[91m-40  0x00006200  0x200 0x0042a000  0x1000 -rwx sect_40      MEM_EXECUTE,MEM_WRITE
[0m[91m-41  0x00006400  0x200 0x0042b000  0x1000 -rwx sect_41      MEM_EXECUTE,MEM_WRITE
[0m[91m-42  0x00006600  0x200 0x0042c000  0x1000 -rwx sect_42      MEM_EXECUTE,MEM_WRITE
[0m[91m-43  0x00006800  0x200 0x0042d000  0x1000 -rwx sect_43      MEM_EXECUTE,MEM_WRITE
[0m[91m-44  0x00006a00  0x200 0x0042e000  0x1000 -rwx sect_44      MEM_EXECUTE,MEM_WRITE
[0m[91m-45  0x00006c00  0x200 0x0042f000  0x1000 -rwx sect_45      MEM_EXECUTE,MEM_WRITE
[0m[91m-46  0x00006e00  0x200 0x00430000  0x1000 -rwx sect_46      MEM_EXECUTE,MEM_WRITE
[0m[91m-47  0x00007000  0x200 0x00431000  0x1000 -rwx sect_47      MEM_EXECUTE,MEM_WRITE
[0m[91m-48  0x00007200  0x200 0x00432000  0x1000 -rwx sect_48      MEM_EXECUTE,MEM_WRITE
[0m[91m-49  0x00007400  0x200 0x00433000  0x1000 -rwx sect_49      MEM_EXECUTE,MEM_WRITE
[0m[91m-50  0x00007600  0x200 0x00434000  0x1000 -rwx sect_50      MEM_EXECUTE,MEM_WRITE
[0m[91m-51  0x00007800  0x200 0x00435000  0x1000 -rwx sect_51      MEM_EXECUTE,MEM_WRITE
[0m[91m-52  0x00007a00  0x200 0x00436000  0x1000 -rwx sect_52      MEM_EXECUTE,MEM_WRITE
[0m[91m-53  0x00007c00  0x200 0x00437000  0x1000 -rwx sect_53      MEM_EXECUTE,MEM_WRITE
[0m[91m-54  0x00007e00  0x200 0x00438000  0x1000 -rwx sect_54      MEM_EXECUTE,MEM_WRITE
[0m[91m-55  0x00008000  0x200 0x00439000  0x1000 -rwx sect_55      MEM_EXECUTE,MEM_WRITE
[0m[91m-56  0x00008200  0x200 0x0043a000  0x1000 -rwx sect_56      MEM_EXECUTE,MEM_WRITE
[0m[91m-57  0x00008400  0x200 0x0043b000  0x1000 -rwx sect_57      MEM_EXECUTE,MEM_WRITE
[0m[91m-58  0x00008600  0x200 0x0043c000  0x1000 -rwx sect_58      MEM_EXECUTE,MEM_WRITE
[0m[91m-59  0x00008800  0x200 0x0043d000  0x1000 -rwx sect_59      MEM_EXECUTE,MEM_WRITE
[0m[91m-60  0x00008a00  0x200 0x0043e000  0x1000 -rwx sect_60      MEM_EXECUTE,MEM_WRITE
[0m[91m-61  0x00008c00  0x200 0x0043f000  0x1000 -rwx sect_61      MEM_EXECUTE,MEM_WRITE
[0m[91m-62  0x00008e00  0x200 0x00440000  0x1000 -rwx sect_62      MEM_EXECUTE,MEM_WRITE
[0m[91m-63  0x00009000  0x200 0x00441000  0x1000 -rwx sect_63      MEM_EXECUTE,MEM_WRITE
[0m[91m-64  0x00009200  0x200 0x00442000  0x1000 -rwx sect_64      MEM_EXECUTE,MEM_WRITE
[0m[91m-65  0x00009400  0x200 0x00443000  0x1000 -rwx sect_65      MEM_EXECUTE,MEM_WRITE
[0m[91m-66  0x00009600  0x200 0x00444000  0x1000 -rwx sect_66      MEM_EXECUTE,MEM_WRITE
[0m[91m-67  0x00009800  0x200 0x00445000  0x1000 -rwx sect_67      MEM_EXECUTE,MEM_WRITE
[0m[91m-68  0x00009a00  0x200 0x00446000  0x1000 -rwx sect_68      MEM_EXECUTE,MEM_WRITE
[0m[91m-69  0x00009c00  0x200 0x00447000  0x1000 -rwx sect_69      MEM_EXECUTE,MEM_WRITE
[0m[91m-70  0x00009e00  0x200 0x00448000  0x1000 -rwx sect_70      MEM_EXECUTE,MEM_WRITE
[0m[91m-71  0x0000a000  0x200 0x00449000  0x1000 -rwx sect_71      MEM_EXECUTE,MEM_WRITE
[0m[91m-72  0x0000a200  0x200 0x0044a000  0x1000 -rwx sect_72      MEM_EXECUTE,MEM_WRITE
[0m[91m-73  0x0000a400  0x200 0x0044b000  0x1000 -rwx sect_73      MEM_EXECUTE,MEM_WRITE
[0m[91m-74  0x0000a600  0x200 0x0044c000  0x1000 -rwx sect_74      MEM_EXECUTE,MEM_WRITE
[0m[91m-75  0x0000a800  0x200 0x0044d000  0x1000 -rwx sect_75      MEM_EXECUTE,MEM_WRITE
[0m[91m-76  0x0000aa00  0x200 0x0044e000  0x1000 -rwx sect_76      MEM_EXECUTE,MEM_WRITE
[0m[91m-77  0x0000ac00  0x200 0x0044f000  0x1000 -rwx sect_77      MEM_EXECUTE,MEM_WRITE
[0m[91m-78  0x0000ae00  0x200 0x00450000  0x1000 -rwx sect_78      MEM_EXECUTE,MEM_WRITE
[0m[91m-79  0x0000b000  0x200 0x00451000  0x1000 -rwx sect_79      MEM_EXECUTE,MEM_WRITE
[0m[91m-80  0x0000b200  0x200 0x00452000  0x1000 -rwx sect_80      MEM_EXECUTE,MEM_WRITE
[0m[91m-81  0x0000b400  0x200 0x00453000  0x1000 -rwx sect_81      MEM_EXECUTE,MEM_WRITE
[0m[91m-82  0x0000b600  0x200 0x00454000  0x1000 -rwx sect_82      MEM_EXECUTE,MEM_WRITE
[0m[91m-83  0x0000b800  0x200 0x00455000  0x1000 -rwx sect_83      MEM_EXECUTE,MEM_WRITE
[0m[91m-84  0x0000ba00  0x200 0x00456000  0x1000 -rwx sect_84      MEM_EXECUTE,MEM_WRITE
[0m[91m-85  0x0000bc00  0x200 0x00457000  0x1000 -rwx sect_85      MEM_EXECUTE,MEM_WRITE
[0m[91m-86  0x0000be00  0x200 0x00458000  0x1000 -rwx sect_86      MEM_EXECUTE,MEM_WRITE
[0m[91m-87  0x0000c000  0x200 0x00459000  0x1000 -rwx sect_87      MEM_EXECUTE,MEM_WRITE
[0m[91m-88  0x0000c200  0x200 0x0045a000  0x1000 -rwx sect_88      MEM_EXECUTE,MEM_WRITE
[0m[91m-89  0x0000c400  0x200 0x0045b000  0x1000 -rwx sect_89      MEM_EXECUTE,MEM_WRITE
[0m[91m-90  0x0000c600  0x200 0x0045c000  0x1000 -rwx sect_90      MEM_EXECUTE,MEM_WRITE
[0m[91m-91  0x0000c800  0x200 0x0045d000  0x1000 -rwx sect_91      MEM_EXECUTE,MEM_WRITE
[0m[91m-92  0x0000ca00  0x200 0x0045e000  0x1000 -rwx sect_92      MEM_EXECUTE,MEM_WRITE
[0m[91m-93  0x0000cc00  0x200 0x0045f000  0x1000 -rwx sect_93      MEM_EXECUTE,MEM_WRITE
[0m[91m-94  0x0000ce00  0x200 0x00460000  0x1000 -rwx sect_94      MEM_EXECUTE,MEM_WRITE
[0m[91m-95  0x0000d000  0x200 0x00461000  0x1000 -rwx sect_95      MEM_EXECUTE,MEM_WRITE
[0m[92m+nth paddr        size vaddr        vsize perm name
[0m[92m+--------------------------------------------------
[0m[92m+0   0x00001200  0x200 0x00402000  0x1000 -rwx sect_0  
[0m[92m+1   0x00001400  0x200 0x00403000  0x1000 -rwx sect_1  
[0m[92m+2   0x00001600  0x200 0x00404000  0x1000 -rwx sect_2  
[0m[92m+3   0x00001800  0x200 0x00405000  0x1000 -rwx sect_3  
[0m[92m+4   0x00001a00  0x200 0x00406000  0x1000 -rwx sect_4  
[0m[92m+5   0x00001c00  0x200 0x00407000  0x1000 -rwx sect_5  
[0m[92m+6   0x00001e00  0x200 0x00408000  0x1000 -rwx sect_6  
[0m[92m+7   0x00002000  0x200 0x00409000  0x1000 -rwx sect_7  
[0m[92m+8   0x00002200  0x200 0x0040a000  0x1000 -rwx sect_8  
[0m[92m+9   0x00002400  0x200 0x0040b000  0x1000 -rwx sect_9  
[0m[92m+10  0x00002600  0x200 0x0040c000  0x1000 -rwx sect_10 
[0m[92m+11  0x00002800  0x200 0x0040d000  0x1000 -rwx sect_11 
[0m[92m+12  0x00002a00  0x200 0x0040e000  0x1000 -rwx sect_12 
[0m[92m+13  0x00002c00  0x200 0x0040f000  0x1000 -rwx sect_13 
[0m[92m+14  0x00002e00  0x200 0x00410000  0x1000 -rwx sect_14 
[0m[92m+15  0x00003000  0x200 0x00411000  0x1000 -rwx sect_15 
[0m[92m+16  0x00003200  0x200 0x00412000  0x1000 -rwx sect_16 
[0m[92m+17  0x00003400  0x200 0x00413000  0x1000 -rwx sect_17 
[0m[92m+18  0x00003600  0x200 0x00414000  0x1000 -rwx sect_18 
[0m[92m+19  0x00003800  0x200 0x00415000  0x1000 -rwx sect_19 
[0m[92m+20  0x00003a00  0x200 0x00416000  0x1000 -rwx sect_20 
[0m[92m+21  0x00003c00  0x200 0x00417000  0x1000 -rwx sect_21 
[0m[92m+22  0x00003e00  0x200 0x00418000  0x1000 -rwx sect_22 
[0m[92m+23  0x00004000  0x200 0x00419000  0x1000 -rwx sect_23 
[0m[92m+24  0x00004200  0x200 0x0041a000  0x1000 -rwx sect_24 
[0m[92m+25  0x00004400  0x200 0x0041b000  0x1000 -rwx sect_25 
[0m[92m+26  0x00004600  0x200 0x0041c000  0x1000 -rwx sect_26 
[0m[92m+27  0x00004800  0x200 0x0041d000  0x1000 -rwx sect_27 
[0m[92m+28  0x00004a00  0x200 0x0041e000  0x1000 -rwx sect_28 
[0m[92m+29  0x00004c00  0x200 0x0041f000  0x1000 -rwx sect_29 
[0m[92m+30  0x00004e00  0x200 0x00420000  0x1000 -rwx sect_30 
[0m[92m+31  0x00005000  0x200 0x00421000  0x1000 -rwx sect_31 
[0m[92m+32  0x00005200  0x200 0x00422000  0x1000 -rwx sect_32 
[0m[92m+33  0x00005400  0x200 0x00423000  0x1000 -rwx sect_33 
[0m[92m+34  0x00005600  0x200 0x00424000  0x1000 -rwx sect_34 
[0m[92m+35  0x00005800  0x200 0x00425000  0x1000 -rwx sect_35 
[0m[92m+36  0x00005a00  0x200 0x00426000  0x1000 -rwx sect_36 
[0m[92m+37  0x00005c00  0x200 0x00427000  0x1000 -rwx sect_37 
[0m[92m+38  0x00005e00  0x200 0x00428000  0x1000 -rwx sect_38 
[0m[92m+39  0x00006000  0x200 0x00429000  0x1000 -rwx sect_39 
[0m[92m+40  0x00006200  0x200 0x0042a000  0x1000 -rwx sect_40 
[0m[92m+41  0x00006400  0x200 0x0042b000  0x1000 -rwx sect_41 
[0m[92m+42  0x00006600  0x200 0x0042c000  0x1000 -rwx sect_42 
[0m[92m+43  0x00006800  0x200 0x0042d000  0x1000 -rwx sect_43 
[0m[92m+44  0x00006a00  0x200 0x0042e000  0x1000 -rwx sect_44 
[0m[92m+45  0x00006c00  0x200 0x0042f000  0x1000 -rwx sect_45 
[0m[92m+46  0x00006e00  0x200 0x00430000  0x1000 -rwx sect_46 
[0m[92m+47  0x00007000  0x200 0x00431000  0x1000 -rwx sect_47 
[0m[92m+48  0x00007200  0x200 0x00432000  0x1000 -rwx sect_48 
[0m[92m+49  0x00007400  0x200 0x00433000  0x1000 -rwx sect_49 
[0m[92m+50  0x00007600  0x200 0x00434000  0x1000 -rwx sect_50 
[0m[92m+51  0x00007800  0x200 0x00435000  0x1000 -rwx sect_51 
[0m[92m+52  0x00007a00  0x200 0x00436000  0x1000 -rwx sect_52 
[0m[92m+53  0x00007c00  0x200 0x00437000  0x1000 -rwx sect_53 
[0m[92m+54  0x00007e00  0x200 0x00438000  0x1000 -rwx sect_54 
[0m[92m+55  0x00008000  0x200 0x00439000  0x1000 -rwx sect_55 
[0m[92m+56  0x00008200  0x200 0x0043a000  0x1000 -rwx sect_56 
[0m[92m+57  0x00008400  0x200 0x0043b000  0x1000 -rwx sect_57 
[0m[92m+58  0x00008600  0x200 0x0043c000  0x1000 -rwx sect_58 
[0m[92m+59  0x00008800  0x200 0x0043d000  0x1000 -rwx sect_59 
[0m[92m+60  0x00008a00  0x200 0x0043e000  0x1000 -rwx sect_60 
[0m[92m+61  0x00008c00  0x200 0x0043f000  0x1000 -rwx sect_61 
[0m[92m+62  0x00008e00  0x200 0x00440000  0x1000 -rwx sect_62 
[0m[92m+63  0x00009000  0x200 0x00441000  0x1000 -rwx sect_63 
[0m[92m+64  0x00009200  0x200 0x00442000  0x1000 -rwx sect_64 
[0m[92m+65  0x00009400  0x200 0x00443000  0x1000 -rwx sect_65 
[0m[92m+66  0x00009600  0x200 0x00444000  0x1000 -rwx sect_66 
[0m[92m+67  0x00009800  0x200 0x00445000  0x1000 -rwx sect_67 
[0m[92m+68  0x00009a00  0x200 0x00446000  0x1000 -rwx sect_68 
[0m[92m+69  0x00009c00  0x200 0x00447000  0x1000 -rwx sect_69 
[0m[92m+70  0x00009e00  0x200 0x00448000  0x1000 -rwx sect_70 
[0m[92m+71  0x0000a000  0x200 0x00449000  0x1000 -rwx sect_71 
[0m[92m+72  0x0000a200  0x200 0x0044a000  0x1000 -rwx sect_72 
[0m[92m+73  0x0000a400  0x200 0x0044b000  0x1000 -rwx sect_73 
[0m[92m+74  0x0000a600  0x200 0x0044c000  0x1000 -rwx sect_74 
[0m[92m+75  0x0000a800  0x200 0x0044d000  0x1000 -rwx sect_75 
[0m[92m+76  0x0000aa00  0x200 0x0044e000  0x1000 -rwx sect_76 
[0m[92m+77  0x0000ac00  0x200 0x0044f000  0x1000 -rwx sect_77 
[0m[92m+78  0x0000ae00  0x200 0x00450000  0x1000 -rwx sect_78 
[0m[92m+79  0x0000b000  0x200 0x00451000  0x1000 -rwx sect_79 
[0m[92m+80  0x0000b200  0x200 0x00452000  0x1000 -rwx sect_80 
[0m[92m+81  0x0000b400  0x200 0x00453000  0x1000 -rwx sect_81 
[0m[92m+82  0x0000b600  0x200 0x00454000  0x1000 -rwx sect_82 
[0m[92m+83  0x0000b800  0x200 0x00455000  0x1000 -rwx sect_83 
[0m[92m+84  0x0000ba00  0x200 0x00456000  0x1000 -rwx sect_84 
[0m[92m+85  0x0000bc00  0x200 0x00457000  0x1000 -rwx sect_85 
[0m[92m+86  0x0000be00  0x200 0x00458000  0x1000 -rwx sect_86 
[0m[92m+87  0x0000c000  0x200 0x00459000  0x1000 -rwx sect_87 
[0m[92m+88  0x0000c200  0x200 0x0045a000  0x1000 -rwx sect_88 
[0m[92m+89  0x0000c400  0x200 0x0045b000  0x1000 -rwx sect_89 
[0m[92m+90  0x0000c600  0x200 0x0045c000  0x1000 -rwx sect_90 
[0m[92m+91  0x0000c800  0x200 0x0045d000  0x1000 -rwx sect_91 
[0m[92m+92  0x0000ca00  0x200 0x0045e000  0x1000 -rwx sect_92 
[0m[92m+93  0x0000cc00  0x200 0x0045f000  0x1000 -rwx sect_93 
[0m[92m+94  0x0000ce00  0x200 0x00460000  0x1000 -rwx sect_94 
[0m[92m+95  0x0000d000  0x200 0x00461000  0x1000 -rwx sect_95 
[0m 


[**]                                   db/formats/pe/pe    11906 OK       906 BR      205 XX       11 FX
[**]                            db/formats/pe/dllfakess    11907 OK       906 BR      205 XX       11 FX
[**]                         db/formats/pe/importsdotXP    11908 OK       906 BR      205 XX       11 FX
[**]                                db/formats/pe/dllfw    11909 OK       906 BR      205 XX       11 FX
[**]                            db/formats/pe/dllbound2    11914 OK       906 BR      205 XX       11 FX
[**]                              db/formats/pe/hello_o    11915 OK       906 BR      205 XX       11 FX
[**]                                  db/formats/pe/dll    11918 OK       906 BR      205 XX       11 FX
[**]                       db/formats/pe/lfanew_relocXP    11919 OK       906 BR      205 XX       11 FX
[**]                          db/formats/pe/fakeregslib    11920 OK       906 BR      205 XX       11 FX
[**]                              db/formats/pe/duphead    11921 OK       906 BR      205 XX       11 FX
[**]                          db/formats/pe/exports_doc    11922 OK       906 BR      205 XX       11 FX
[**]                            db/formats/pe/d_tiny-ld    11926 OK       906 BR      205 XX       11 FX
[**]                                 db/formats/pe/aslr    11930 OK       906 BR      205 XX       11 FX
[**]                                          db/io/omp    11933 OK       906 BR      205 XX       11 FX
[**]                                           db/io/va    11933 OK       907 BR      205 XX       11 FX
[**]                                         db/io/ihex    11940 OK       907 BR      205 XX       11 FX
[**]                                     db/io/sections    11944 OK       907 BR      205 XX       11 FX
[**]                                        db/io/baddr    11945 OK       907 BR      205 XX       11 FX
[**]                                           db/io/om    11946 OK       907 BR      205 XX       11 FX
[**]                                         db/io/http    11954 OK       907 BR      205 XX       11 FX
[**]                                         db/io/maps    11961 OK       907 BR      205 XX       11 FX
[**]                                       db/io/unopen    11963 OK       907 BR      205 XX       11 FX
[**]                                           db/io/ff    11964 OK       907 BR      205 XX       11 FX
[**]                                       db/io/resize    11966 OK       907 BR      205 XX       11 FX
[**]                                        db/io/write    11968 OK       907 BR      205 XX       11 FX
[**]                                          db/io/neg    11969 OK       907 BR      205 XX       11 FX
[**]                                         db/io/many    11971 OK       907 BR      205 XX       11 FX
[**]                                        db/io/cache    11976 OK       908 BR      205 XX       11 FX
[**]                                          db/io/zip    11979 OK       910 BR      205 XX       11 FX
[**]                                       db/io/search    11995 OK       910 BR      205 XX       11 FX
[**]                    db/formats/pe/96workingsections    12041 OK       910 BR      205 XX       11 FX
[**]                                    db/esil/mips_32    12082 OK       910 BR      205 XX       11 FX
[**]                                        db/esil/avr    12083 OK       910 BR      205 XX       11 FX
[**]                                       db/esil/math    12097 OK       914 BR      205 XX       11 FX
[**]                                     db/esil/x86_32    12210 OK       915 BR      205 XX       11 FX
[**]                                     db/esil/intreg    12212 OK       915 BR      205 XX       11 FX
[**]                                     db/esil/arm_16    12269 OK       920 BR      205 XX       11 FX
[**]                                      db/esil/apple    12281 OK       920 BR      205 XX       11 FX
[**]                                         db/esil/sh    12317 OK       920 BR      205 XX       11 FX
[**]                                     db/esil/ppc_32    12320 OK       920 BR      205 XX       11 FX
[**]                              db/formats/pe/virtgap    12415 OK       920 BR      205 XX       11 FX
[**]                                       db/esil/6502    12474 OK       920 BR      205 XX       11 FX
[**]                                  db/esil/xtensa_32    12486 OK       920 BR      205 XX       11 FX
[**]                           db/formats/pe/65535sects    12599 OK       920 BR      205 XX       11 FX
[**]                                       db/esil/8051    12606 OK       920 BR      205 XX       11 FX
[**]                                        db/io/dupfd    12608 OK       920 BR      205 XX       11 FX
[**]                                     db/esil/arm_64    12655 OK       921 BR      205 XX       11 FX
[**]                                         db/esil/bf    12662 OK       921 BR      205 XX       11 FX
[**]                                     db/esil/arm_32    12795 OK       921 BR      205 XX       11 FX
[**]                                   db/esil/riscv_32    12800 OK       921 BR      205 XX       11 FX
[**]                                     db/esil/x86_16    12801 OK       921 BR      205 XX       11 FX
[**]                                        db/esil/cmp    12819 OK       921 BR      205 XX       11 FX
[**]                                       db/esil/esil    12843 OK       922 BR      205 XX       11 FX
[**]                                       db/esil/cond    12848 OK       922 BR      205 XX       11 FX
[**]                                   db/esil/riscv_64    12852 OK       922 BR      205 XX       11 FX
[**]                                 db/esil/flag_tests    12862 OK       922 BR      205 XX       11 FX
[**]                                     db/esil/x86_64    12891 OK       922 BR      205 XX       11 FX

[A[2K[31m[XX][0m db/tools/rz_ax [33mrz-ax -t "1234567890 GMT-1"[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '!rz-ax -t "1234567890 GMT-1" | cut -d " " -f 1,2' -
-- stdout
[36m@@ -1 +1 @@[0m
[91m-Fri Feb
[0m[92m+Sat Feb
[0m

[**]                                     db/tools/rz_ax    12967 OK       923 BR      206 XX       12 FX
[**]                                   db/tools/rz_diff    12968 OK       923 BR      206 XX       12 FX
[**]                             db/formats/pe/maxsecXP    12974 OK       923 BR      206 XX       14 FX

[A[2K[31m[XX][0m db/tools/rz_bin [33mrz-bin -g[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '!rz-bin -g ${RZ_FILE}' bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -3,32 +3,32 @@[0m
 nth paddr        size vaddr       vsize perm name               type       flags
 --------------------------------------------------------------------------------
 0   0x00000000    0x0 0x00000000    0x0 ----                    NULL       
[91m-1   0x00000134   0x13 0x08048134   0x13 -r-- .interp            PROGBITS   alloc
[0m[91m-2   0x00000148   0x20 0x08048148   0x20 -r-- .note.ABI-tag      NOTE       alloc
[0m[91m-3   0x00000168   0x24 0x08048168   0x24 -r-- .note.gnu.build-id NOTE       alloc
[0m[91m-4   0x0000018c   0x20 0x0804818c   0x20 -r-- .gnu.hash          GNU_HASH   alloc
[0m[91m-5   0x000001ac   0x50 0x080481ac   0x50 -r-- .dynsym            DYNSYM     alloc
[0m[91m-6   0x000001fc   0x4a 0x080481fc   0x4a -r-- .dynstr            STRTAB     alloc
[0m[91m-7   0x00000246    0xa 0x08048246    0xa -r-- .gnu.version       VERSYM     alloc
[0m[91m-8   0x00000250   0x20 0x08048250   0x20 -r-- .gnu.version_r     VERNEED    alloc
[0m[91m-9   0x00000270    0x8 0x08048270    0x8 -r-- .rel.dyn           REL        alloc
[0m[91m-10  0x00000278   0x18 0x08048278   0x18 -r-- .rel.plt           REL        alloc
[0m[91m-11  0x00000290   0x23 0x08048290   0x23 -r-x .init              PROGBITS   alloc,execute
[0m[91m-12  0x000002c0   0x40 0x080482c0   0x40 -r-x .plt               PROGBITS   alloc,execute
[0m[91m-13  0x00000300  0x194 0x08048300  0x194 -r-x .text              PROGBITS   alloc,execute
[0m[91m-14  0x00000494   0x14 0x08048494   0x14 -r-x .fini              PROGBITS   alloc,execute
[0m[91m-15  0x000004a8   0x15 0x080484a8   0x15 -r-- .rodata            PROGBITS   alloc
[0m[91m-16  0x000004c0   0x2c 0x080484c0   0x2c -r-- .eh_frame_hdr      PROGBITS   alloc
[0m[91m-17  0x000004ec   0xb0 0x080484ec   0xb0 -r-- .eh_frame          PROGBITS   alloc
[0m[91m-18  0x0000059c    0x4 0x0804959c    0x4 -rw- .init_array        INIT_ARRAY write,alloc
[0m[91m-19  0x000005a0    0x4 0x080495a0    0x4 -rw- .fini_array        FINI_ARRAY write,alloc
[0m[91m-20  0x000005a4    0x4 0x080495a4    0x4 -rw- .jcr               PROGBITS   write,alloc
[0m[91m-21  0x000005a8   0xe8 0x080495a8   0xe8 -rw- .dynamic           DYNAMIC    write,alloc
[0m[91m-22  0x00000690    0x4 0x08049690    0x4 -rw- .got               PROGBITS   write,alloc
[0m[91m-23  0x00000694   0x18 0x08049694   0x18 -rw- .got.plt           PROGBITS   write,alloc
[0m[91m-24  0x000006ac    0x8 0x080496ac    0x8 -rw- .data              PROGBITS   write,alloc
[0m[91m-25  0x000006b4    0x0 0x080496b4    0x4 -rw- .bss               NOBITS     write,alloc
[0m[91m-26  0x000006b4   0x11 0x00000000   0x11 ---- .comment           PROGBITS   merge,strings
[0m[92m+1   0x00000134   0x13 0x08048134   0x13 -r-- .interp            PROGBITS   alloc,
[0m[92m+2   0x00000148   0x20 0x08048148   0x20 -r-- .note.ABI_tag      NOTE       alloc,
[0m[92m+3   0x00000168   0x24 0x08048168   0x24 -r-- .note.gnu.build_id NOTE       alloc,
[0m[92m+4   0x0000018c   0x20 0x0804818c   0x20 -r-- .gnu.hash          GNU_HASH   alloc,
[0m[92m+5   0x000001ac   0x50 0x080481ac   0x50 -r-- .dynsym            DYNSYM     alloc,
[0m[92m+6   0x000001fc   0x4a 0x080481fc   0x4a -r-- .dynstr            STRTAB     alloc,
[0m[92m+7   0x00000246    0xa 0x08048246    0xa -r-- .gnu.version       VERSYM     alloc,
[0m[92m+8   0x00000250   0x20 0x08048250   0x20 -r-- .gnu.version_r     VERNEED    alloc,
[0m[92m+9   0x00000270    0x8 0x08048270    0x8 -r-- .rel.dyn           REL        alloc,
[0m[92m+10  0x00000278   0x18 0x08048278   0x18 -r-- .rel.plt           REL        alloc,
[0m[92m+11  0x00000290   0x23 0x08048290   0x23 -r-x .init              PROGBITS   alloc,execute,
[0m[92m+12  0x000002c0   0x40 0x080482c0   0x40 -r-x .plt               PROGBITS   alloc,execute,
[0m[92m+13  0x00000300  0x194 0x08048300  0x194 -r-x .text              PROGBITS   alloc,execute,
[0m[92m+14  0x00000494   0x14 0x08048494   0x14 -r-x .fini              PROGBITS   alloc,execute,
[0m[92m+15  0x000004a8   0x15 0x080484a8   0x15 -r-- .rodata            PROGBITS   alloc,
[0m[92m+16  0x000004c0   0x2c 0x080484c0   0x2c -r-- .eh_frame_hdr      PROGBITS   alloc,
[0m[92m+17  0x000004ec   0xb0 0x080484ec   0xb0 -r-- .eh_frame          PROGBITS   alloc,
[0m[92m+18  0x0000059c    0x4 0x0804959c    0x4 -rw- .init_array        INIT_ARRAY write,alloc,
[0m[92m+19  0x000005a0    0x4 0x080495a0    0x4 -rw- .fini_array        FINI_ARRAY write,alloc,
[0m[92m+20  0x000005a4    0x4 0x080495a4    0x4 -rw- .jcr               PROGBITS   write,alloc,
[0m[92m+21  0x000005a8   0xe8 0x080495a8   0xe8 -rw- .dynamic           DYNAMIC    write,alloc,
[0m[92m+22  0x00000690    0x4 0x08049690    0x4 -rw- .got               PROGBITS   write,alloc,
[0m[92m+23  0x00000694   0x18 0x08049694   0x18 -rw- .got.plt           PROGBITS   write,alloc,
[0m[92m+24  0x000006ac    0x8 0x080496ac    0x8 -rw- .data              PROGBITS   write,alloc,
[0m[92m+25  0x000006b4    0x0 0x080496b4    0x4 -rw- .bss               NOBITS     write,alloc,
[0m[92m+26  0x000006b4   0x11 0x00000000   0x11 ---- .comment           PROGBITS   merge,strings,
[0m 27  0x000006c5  0x106 0x00000000  0x106 ---- .shstrtab          STRTAB     
 28  0x00000c7c  0x450 0x00000000  0x450 ---- .symtab            SYMTAB     
 29  0x000010cc  0x257 0x00000000  0x257 ---- .strtab            STRTAB     
[36m@@ -217,10 +217,10 @@[0m
 --------------------
 PHDR         
 INTERP       .interp 
[91m-LOAD0        .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rel.dyn .rel.plt .init .plt .text .fini .rodata .eh_frame_hdr .eh_frame 
[0m[92m+LOAD0        .interp .note.ABI_tag .note.gnu.build_id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rel.dyn .rel.plt .init .plt .text .fini .rodata .eh_frame_hdr .eh_frame 
[0m LOAD1        .init_array .fini_array .jcr .dynamic .got .got.plt .data .bss 
 DYNAMIC      .dynamic 
[91m-NOTE         .note.ABI-tag .note.gnu.build-id 
[0m[92m+NOTE         .note.ABI_tag .note.gnu.build_id 
[0m GNU_EH_FRAME .eh_frame_hdr 
 GNU_STACK    
 ehdr         



[A[2K[31m[XX][0m db/tools/rz_bin [33mrz-bin -qOp//8 on PE32+[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'mkdir .tmp
rm .tmp/rz-bintestpe2.exe
!rz-bin -qOp//8 -o.tmp/rz-bintestpe2.exe ${RZ_FILE}
!rz-bin -S .tmp/rz-bintestpe2.exe
rm .tmp/rz-bintestpe2.exe
' bins/pe/normal64.exe
-- stdout
[36m@@ -1,7 +1,7 @@[0m
 wx 10000000 @ 0x16c
 [Sections]
 
[91m-nth paddr        size vaddr        vsize perm name   type flags
[0m[91m----------------------------------------------------------------
[0m[91m-0   0x00000200  0x200 0x00401000  0x1000 s--- sect_0      MEM_SHARED
[0m[92m+nth paddr        size vaddr        vsize perm name
[0m[92m+--------------------------------------------------
[0m[92m+0   0x00000200  0x200 0x00401000  0x1000 s--- sect_0 
[0m 



[A[2K[31m[XX][0m db/tools/rz_bin [33mrz-bin -qOp/.data/rwx on PE32[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'mkdir .tmp
rm .tmp/rz-bintestpe1.exe
!rz-bin -qOp/.data/rwx -o.tmp/rz-bintestpe1.exe ${RZ_FILE}
!rz-bin -S .tmp/rz-bintestpe1.exe
rm .tmp/rz-bintestpe1.exe
' bins/pe/test.exe
-- stdout
[36m@@ -1,11 +1,11 @@[0m
 wx e0000040 @ 0x244
 [Sections]
 
[91m-nth paddr         size vaddr        vsize perm name   type flags
[0m[91m-----------------------------------------------------------------
[0m[91m-0   0x00000400  0x8a00 0x00401000  0x9000 -r-x .text       CNT_CODE,MEM_EXECUTE,MEM_READ
[0m[91m-1   0x00008e00  0x2400 0x0040a000  0x3000 -r-- .rdata      CNT_INITIALIZED_DATA,MEM_READ
[0m[91m-2   0x0000b200  0x1000 0x0040d000  0x3000 -rwx .data       CNT_INITIALIZED_DATA,MEM_EXECUTE,MEM_READ,MEM_WRITE
[0m[91m-3   0x0000c200   0x200 0x00410000  0x1000 -r-- .rsrc       CNT_INITIALIZED_DATA,MEM_READ
[0m[91m-4   0x0000c400   0xe00 0x00411000  0x1000 -r-- .reloc      CNT_INITIALIZED_DATA,IMAGE_SCN_MEM_DISCARDABLE,MEM_READ
[0m[92m+nth paddr         size vaddr        vsize perm name
[0m[92m+---------------------------------------------------
[0m[92m+0   0x00000400  0x8a00 0x00401000  0x9000 -r-x .text  
[0m[92m+1   0x00008e00  0x2400 0x0040a000  0x3000 -r-- .rdata 
[0m[92m+2   0x0000b200  0x1000 0x0040d000  0x3000 -rwx .data  
[0m[92m+3   0x0000c200   0x200 0x00410000  0x1000 -r-- .rsrc  
[0m[92m+4   0x0000c400   0xe00 0x00411000  0x1000 -r-- .reloc 
[0m 



[A[2K[31m[XX][0m db/tools/rz_bin [33mrz-bin -S, -SS, -rS and -rSS file elf[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '!rz-bin -S ${RZ_FILE}|wc -l|awk "{print \$1}"
!rz-bin -SS ${RZ_FILE}|wc -l|awk "{print \$1}"
!env RZ_BIN_PREFIX=prixfixe rz-bin -S ${RZ_FILE}
!env RZ_BIN_PREFIX=prixfixe rz-bin -SS ${RZ_FILE}
' bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -5,32 +5,32 @@[0m
 nth paddr        size vaddr       vsize perm name                        type       flags
 -----------------------------------------------------------------------------------------
 0   0x00000000    0x0 0x00000000    0x0 ---- prixfixe.                   NULL       
[91m-1   0x00000134   0x13 0x08048134   0x13 -r-- prixfixe..interp            PROGBITS   alloc
[0m[91m-2   0x00000148   0x20 0x08048148   0x20 -r-- prixfixe..note.ABI-tag      NOTE       alloc
[0m[91m-3   0x00000168   0x24 0x08048168   0x24 -r-- prixfixe..note.gnu.build-id NOTE       alloc
[0m[91m-4   0x0000018c   0x20 0x0804818c   0x20 -r-- prixfixe..gnu.hash          GNU_HASH   alloc
[0m[91m-5   0x000001ac   0x50 0x080481ac   0x50 -r-- prixfixe..dynsym            DYNSYM     alloc
[0m[91m-6   0x000001fc   0x4a 0x080481fc   0x4a -r-- prixfixe..dynstr            STRTAB     alloc
[0m[91m-7   0x00000246    0xa 0x08048246    0xa -r-- prixfixe..gnu.version       VERSYM     alloc
[0m[91m-8   0x00000250   0x20 0x08048250   0x20 -r-- prixfixe..gnu.version_r     VERNEED    alloc
[0m[91m-9   0x00000270    0x8 0x08048270    0x8 -r-- prixfixe..rel.dyn           REL        alloc
[0m[91m-10  0x00000278   0x18 0x08048278   0x18 -r-- prixfixe..rel.plt           REL        alloc
[0m[91m-11  0x00000290   0x23 0x08048290   0x23 -r-x prixfixe..init              PROGBITS   alloc,execute
[0m[91m-12  0x000002c0   0x40 0x080482c0   0x40 -r-x prixfixe..plt               PROGBITS   alloc,execute
[0m[91m-13  0x00000300  0x194 0x08048300  0x194 -r-x prixfixe..text              PROGBITS   alloc,execute
[0m[91m-14  0x00000494   0x14 0x08048494   0x14 -r-x prixfixe..fini              PROGBITS   alloc,execute
[0m[91m-15  0x000004a8   0x15 0x080484a8   0x15 -r-- prixfixe..rodata            PROGBITS   alloc
[0m[91m-16  0x000004c0   0x2c 0x080484c0   0x2c -r-- prixfixe..eh_frame_hdr      PROGBITS   alloc
[0m[91m-17  0x000004ec   0xb0 0x080484ec   0xb0 -r-- prixfixe..eh_frame          PROGBITS   alloc
[0m[91m-18  0x0000059c    0x4 0x0804959c    0x4 -rw- prixfixe..init_array        INIT_ARRAY write,alloc
[0m[91m-19  0x000005a0    0x4 0x080495a0    0x4 -rw- prixfixe..fini_array        FINI_ARRAY write,alloc
[0m[91m-20  0x000005a4    0x4 0x080495a4    0x4 -rw- prixfixe..jcr               PROGBITS   write,alloc
[0m[91m-21  0x000005a8   0xe8 0x080495a8   0xe8 -rw- prixfixe..dynamic           DYNAMIC    write,alloc
[0m[91m-22  0x00000690    0x4 0x08049690    0x4 -rw- prixfixe..got               PROGBITS   write,alloc
[0m[91m-23  0x00000694   0x18 0x08049694   0x18 -rw- prixfixe..got.plt           PROGBITS   write,alloc
[0m[91m-24  0x000006ac    0x8 0x080496ac    0x8 -rw- prixfixe..data              PROGBITS   write,alloc
[0m[91m-25  0x000006b4    0x0 0x080496b4    0x4 -rw- prixfixe..bss               NOBITS     write,alloc
[0m[91m-26  0x000006b4   0x11 0x00000000   0x11 ---- prixfixe..comment           PROGBITS   merge,strings
[0m[92m+1   0x00000134   0x13 0x08048134   0x13 -r-- prixfixe..interp            PROGBITS   alloc,
[0m[92m+2   0x00000148   0x20 0x08048148   0x20 -r-- prixfixe..note.ABI_tag      NOTE       alloc,
[0m[92m+3   0x00000168   0x24 0x08048168   0x24 -r-- prixfixe..note.gnu.build_id NOTE       alloc,
[0m[92m+4   0x0000018c   0x20 0x0804818c   0x20 -r-- prixfixe..gnu.hash          GNU_HASH   alloc,
[0m[92m+5   0x000001ac   0x50 0x080481ac   0x50 -r-- prixfixe..dynsym            DYNSYM     alloc,
[0m[92m+6   0x000001fc   0x4a 0x080481fc   0x4a -r-- prixfixe..dynstr            STRTAB     alloc,
[0m[92m+7   0x00000246    0xa 0x08048246    0xa -r-- prixfixe..gnu.version       VERSYM     alloc,
[0m[92m+8   0x00000250   0x20 0x08048250   0x20 -r-- prixfixe..gnu.version_r     VERNEED    alloc,
[0m[92m+9   0x00000270    0x8 0x08048270    0x8 -r-- prixfixe..rel.dyn           REL        alloc,
[0m[92m+10  0x00000278   0x18 0x08048278   0x18 -r-- prixfixe..rel.plt           REL        alloc,
[0m[92m+11  0x00000290   0x23 0x08048290   0x23 -r-x prixfixe..init              PROGBITS   alloc,execute,
[0m[92m+12  0x000002c0   0x40 0x080482c0   0x40 -r-x prixfixe..plt               PROGBITS   alloc,execute,
[0m[92m+13  0x00000300  0x194 0x08048300  0x194 -r-x prixfixe..text              PROGBITS   alloc,execute,
[0m[92m+14  0x00000494   0x14 0x08048494   0x14 -r-x prixfixe..fini              PROGBITS   alloc,execute,
[0m[92m+15  0x000004a8   0x15 0x080484a8   0x15 -r-- prixfixe..rodata            PROGBITS   alloc,
[0m[92m+16  0x000004c0   0x2c 0x080484c0   0x2c -r-- prixfixe..eh_frame_hdr      PROGBITS   alloc,
[0m[92m+17  0x000004ec   0xb0 0x080484ec   0xb0 -r-- prixfixe..eh_frame          PROGBITS   alloc,
[0m[92m+18  0x0000059c    0x4 0x0804959c    0x4 -rw- prixfixe..init_array        INIT_ARRAY write,alloc,
[0m[92m+19  0x000005a0    0x4 0x080495a0    0x4 -rw- prixfixe..fini_array        FINI_ARRAY write,alloc,
[0m[92m+20  0x000005a4    0x4 0x080495a4    0x4 -rw- prixfixe..jcr               PROGBITS   write,alloc,
[0m[92m+21  0x000005a8   0xe8 0x080495a8   0xe8 -rw- prixfixe..dynamic           DYNAMIC    write,alloc,
[0m[92m+22  0x00000690    0x4 0x08049690    0x4 -rw- prixfixe..got               PROGBITS   write,alloc,
[0m[92m+23  0x00000694   0x18 0x08049694   0x18 -rw- prixfixe..got.plt           PROGBITS   write,alloc,
[0m[92m+24  0x000006ac    0x8 0x080496ac    0x8 -rw- prixfixe..data              PROGBITS   write,alloc,
[0m[92m+25  0x000006b4    0x0 0x080496b4    0x4 -rw- prixfixe..bss               NOBITS     write,alloc,
[0m[92m+26  0x000006b4   0x11 0x00000000   0x11 ---- prixfixe..comment           PROGBITS   merge,strings,
[0m 27  0x000006c5  0x106 0x00000000  0x106 ---- prixfixe..shstrtab          STRTAB     
 28  0x00000c7c  0x450 0x00000000  0x450 ---- prixfixe..symtab            SYMTAB     
 29  0x000010cc  0x257 0x00000000  0x257 ---- prixfixe..strtab            STRTAB     



[A[2K[31m[XX][0m db/tools/rz_bin [33mrz-bin -K md5 -S file[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc '!rz-bin -K md5 -S ${RZ_FILE}' bins/pe/a.exe
-- stdout
[36m@@ -1,10 +1,10 @@[0m
 [Sections]
 
[91m-nth paddr        size vaddr        vsize perm md5                              name   type flags
[0m[91m-------------------------------------------------------------------------------------------------
[0m[91m-0   0x00000400  0xa00 0x00401000  0x1000 -r-x 3d6a5b8dc5e41b09659638ad5735e5b5 .text       CNT_CODE,CNT_INITIALIZED_DATA,ALIGN_16BYTES,MEM_EXECUTE,MEM_READ
[0m[91m-1   0x00000e00  0x200 0x00402000  0x1000 -rw- b3c542ba67f2d1a949fa1a25ce22f7e3 .data       CNT_INITIALIZED_DATA,ALIGN_4BYTES,MEM_READ,MEM_WRITE
[0m[91m-2   0x00001000  0x200 0x00403000  0x1000 -r-- c9a877a4e945b087b8323830442c88d6 .rdata      CNT_INITIALIZED_DATA,ALIGN_4BYTES,MEM_READ
[0m[91m-3   0x00000000    0x0 0x00404000  0x1000 -rw- d41d8cd98f00b204e9800998ecf8427e .bss        CNT_UNINITIALIZED,ALIGN_8BYTES,MEM_READ,MEM_WRITE
[0m[91m-4   0x00001200  0x400 0x00405000  0x1000 -rw- 963212dc58a74f32e0f6ffce84dcf7ea .idata      CNT_INITIALIZED_DATA,ALIGN_4BYTES,MEM_READ,MEM_WRITE
[0m[92m+nth paddr        size vaddr        vsize perm md5                              name
[0m[92m+-----------------------------------------------------------------------------------
[0m[92m+0   0x00000400  0xa00 0x00401000  0x1000 -r-x 3d6a5b8dc5e41b09659638ad5735e5b5 .text  
[0m[92m+1   0x00000e00  0x200 0x00402000  0x1000 -rw- b3c542ba67f2d1a949fa1a25ce22f7e3 .data  
[0m[92m+2   0x00001000  0x200 0x00403000  0x1000 -r-- c9a877a4e945b087b8323830442c88d6 .rdata 
[0m[92m+3   0x00000000    0x0 0x00404000  0x1000 -rw- d41d8cd98f00b204e9800998ecf8427e .bss   
[0m[92m+4   0x00001200  0x400 0x00405000  0x1000 -rw- 963212dc58a74f32e0f6ffce84dcf7ea .idata 
[0m 


[**]                                    db/tools/rz_bin    13050 OK       929 BR      211 XX       16 FX
[**]                                  db/tools/rz_agent    13052 OK       929 BR      211 XX       16 FX
[**]                                   db/tools/rz_find    13072 OK       929 BR      211 XX       17 FX
[**]                                   db/tools/rz_hash    13168 OK       929 BR      211 XX       17 FX

[A[2K[31m[XX][0m db/tools/rz [33mseek undo/redo[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'wx 01; s 1; shu; shr; pb 8' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-00000000
[0m

-- stderr
Command 'shu' does not exist.


[A[2K[31m[XX][0m db/tools/rz [33mseek undo/redo[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -Qc 'wx 01
s 1
shu
shr
pb 8
' -
-- stdout
[36m@@ -1 +0,0 @@[0m
[91m-00000000
[0m

-- stderr
Command 'shu' does not exist.

[**]                                        db/tools/rz    13184 OK       929 BR      213 XX       18 FX
[**]                                    db/tools/rz_run    13185 OK       929 BR      213 XX       18 FX
[**]                                   db/tools/rz_test    13189 OK       929 BR      213 XX       18 FX
[**]                                     db/tools/rz_gg    13230 OK       938 BR      213 XX       19 FX
[**]                                    db/tools/rz_asm    13267 OK       938 BR      213 XX       20 FX
[**]                                   db/tools/rz_sign    13274 OK       938 BR      213 XX       20 FX
[**]                    db/archos/linux-x64/dbg_seginfo    13276 OK       939 BR      213 XX       20 FX
[**]                        db/archos/linux-x64/dbg_bps    13288 OK       939 BR      213 XX       20 FX
[**]                     db/archos/linux-x64/dbg_trace1    13289 OK       939 BR      213 XX       20 FX
[**]                        db/archos/linux-x64/dbg_dmi    13293 OK       939 BR      213 XX       20 FX
[**]                        db/archos/linux-x64/dbg_wps    13297 OK       940 BR      213 XX       20 FX
[**]                        db/archos/linux-x64/dbg_fds    13301 OK       942 BR      213 XX       20 FX
[**]                       db/archos/linux-x64/dbg_bps2    13306 OK       942 BR      213 XX       20 FX
[**]                     db/archos/linux-x64/asm_x64_as    13308 OK       942 BR      213 XX       20 FX
[**]                         db/archos/linux-x64/dbg_io    13317 OK       942 BR      213 XX       20 FX
[**]                       db/archos/linux-x64/dbg_aslr    13318 OK       942 BR      213 XX       20 FX
[**]                         db/archos/linux-x64/dbg_oo    13323 OK       945 BR      213 XX       20 FX
[**]                     db/archos/linux-x64/dbg_cmdbps    13332 OK       945 BR      213 XX       20 FX
[**]                       db/archos/linux-x64/dbg_step    13333 OK       945 BR      213 XX       20 FX
[**]                         db/archos/linux-x64/dbg_dL    13336 OK       945 BR      213 XX       20 FX
[**]                db/archos/linux-x64/cmd_interpreter    13338 OK       945 BR      213 XX       20 FX
[**]                       db/archos/linux-x64/bug_6678    13339 OK       945 BR      213 XX       20 FX

[A[2K[31m[XX][0m db/archos/linux-x64/dbg_dmh [33muse of dmh, then any command which use grep and index[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -d -Qc 'db sym.main
dc
dmh > /dev/null
aa > /dev/null
pdf @sym.main~:1
' bins/elf/simple_malloc_x86_64
-- stdout
[36m@@ -1,2 +1,2 @@[0m
[91m-/ int main (int argc, char **argv, char **envp);
[0m[92m+/ 91: int main (int argc, char **argv, char **envp);
[0m p=3


-- stderr
Process with PID 185784 started...
= attach 185784 185784
bin.baddr 0x564c564aa000
Using 0x564c564aa000
asm.bits 64
hit breakpoint at: 0x564c564aa70a
[ ] Analyze all flags starting with sym. and entry0 (aa)[[x] Analyze all flags starting with sym. and entry0 (aa)
[2K
[**]                        db/archos/linux-x64/dbg_dmh    13339 OK       945 BR      214 XX       20 FX
[**]                        db/archos/linux-x64/dbg_px0    13340 OK       945 BR      214 XX       20 FX
[**]                            db/archos/linux-x64/dbg    13342 OK       946 BR      214 XX       20 FX
[**]                     db/archos/linux-x64/dbg_trace3    13342 OK       947 BR      214 XX       20 FX

[A[2K[31m[XX][0m db/archos/linux-x64/dbg_maps [33mdbg.maps.count.after.map[0m
RZ_NOPLUGINS=1 rizin -escr.utf8=0 -escr.color=0 -escr.interactive=0 -N -d -Qc 'dm~?
db sym.imp.puts
dc~?
dm~?
dc
' bins/elf/analysis/x86-helloworld-gcc
-- stdout
[36m@@ -1,4 +1,4 @@[0m
 9
 0
[91m-17
[0m[92m+18
[0m Hello world!


-- stderr
Process with PID 185945 started...
= attach 185945 185945
bin.baddr 0x08048000
Using 0x8048000
asm.bits 32
glibc.fc_offset = 0x00148
hit breakpoint at: 0x80482d0
(185945) Process exited with status=0x0

[**]                    db/archos/linux-x64/shell_uname    13345 OK       951 BR      215 XX       20 FX
[**]                          db/archos/linux-x64/cmd_i    13346 OK       951 BR      215 XX       20 FX
[**]                     db/archos/linux-x64/dbg_trace2    13348 OK       951 BR      215 XX       20 FX
[**]                        db/archos/linux-x64/dbg_drt    13352 OK       951 BR      215 XX       20 FX
[**]                        db/archos/linux-x64/dbg_dts    13353 OK       951 BR      215 XX       20 FX
[**]                       db/archos/linux-x64/dbg_maps    13355 OK       952 BR      215 XX       20 FX
[**]                       db/archos/linux-x64/dbg_dmht    13356 OK       952 BR      215 XX       20 FX
[**]                    db/archos/linux-x64/dbg_aaa_dcu    13359 OK       952 BR      215 XX       20 FX
[**]                       db/archos/linux-x64/dbg_cont    13362 OK       952 BR      215 XX       20 FX
[**]                        db/archos/linux-x64/dbg_drm    13368 OK       952 BR      215 XX       20 FX
[**]                  db/archos/linux-x64/dbg_cont_back    13369 OK       952 BR      215 XX       20 FX
[**]                  db/archos/linux-x64/dbg_step_back    13370 OK       952 BR      215 XX       20 FX
[**]           db/archos/linux-x64/dbg_gdbserver_rebase    13370 OK       957 BR      215 XX       20 FX
[**]                  db/archos/linux-x64/dbg_gdbserver    13370 OK       958 BR      215 XX       20 FX

Finished in 20 minutes and 43 seconds.
